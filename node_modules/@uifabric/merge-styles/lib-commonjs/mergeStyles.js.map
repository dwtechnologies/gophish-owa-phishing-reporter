{"version":3,"file":"mergeStyles.js","sourceRoot":"../src/","sources":["mergeStyles.ts"],"names":[],"mappings":";;AACA,uDAAsD;AACtD,yDAAwD;AAExD;;;;GAIG;AACH,SAAgB,WAAW;IAAC,cAAgE;SAAhE,UAAgE,EAAhE,qBAAgE,EAAhE,IAAgE;QAAhE,yBAAgE;;IACpF,IAAA,gDAA8C,EAA5C,oBAAO,EAAE,oBAAmC,CAAC;IAErD,IAAI,OAAO,CAAC,MAAM,EAAE;QAClB,OAAO,CAAC,IAAI,CAAC,mCAAgB,CAAC,OAAO,CAAC,CAAC,CAAC;KACzC;IAED,OAAO,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC3B,CAAC;AARD,kCAQC","sourcesContent":["import { IStyle, IStyleBaseArray } from './IStyle';\nimport { styleToClassName } from './styleToClassName';\nimport { extractStyleParts } from './extractStyleParts';\n\n/**\n * Concatination helper, which can merge class names together. Skips over falsey values.\n *\n * @public\n */\nexport function mergeStyles(...args: (IStyle | IStyleBaseArray | false | null | undefined)[]): string {\n  const { classes, objects } = extractStyleParts(args);\n\n  if (objects.length) {\n    classes.push(styleToClassName(objects));\n  }\n\n  return classes.join(' ');\n}\n"]}
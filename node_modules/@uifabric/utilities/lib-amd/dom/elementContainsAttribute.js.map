{"version":3,"file":"elementContainsAttribute.js","sourceRoot":"../src/","sources":["dom/elementContainsAttribute.ts"],"names":[],"mappings":";;;IACA;;;;;OAKG;IACH,SAAgB,wBAAwB,CAAC,OAAoB,EAAE,SAAiB;QAC9E,IAAI,YAAY,GAAG,2CAAoB,CAAC,OAAO,EAAE,UAAC,WAAwB,IAAK,OAAA,WAAW,CAAC,YAAY,CAAC,SAAS,CAAC,EAAnC,CAAmC,CAAC,CAAC;QACpH,OAAO,YAAY,IAAI,YAAY,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;IAC9D,CAAC;IAHD,4DAGC","sourcesContent":["import { findElementRecursive } from './findElementRecursive';\n/**\n * Determines if an element, or any of its ancestors, contain the given attribute\n * @param element - element to start searching at\n * @param attribute - the attribute to search for\n * @returns the value of the first instance found\n */\nexport function elementContainsAttribute(element: HTMLElement, attribute: string): string | null {\n  let elementMatch = findElementRecursive(element, (testElement: HTMLElement) => testElement.hasAttribute(attribute));\n  return elementMatch && elementMatch.getAttribute(attribute);\n}\n"]}
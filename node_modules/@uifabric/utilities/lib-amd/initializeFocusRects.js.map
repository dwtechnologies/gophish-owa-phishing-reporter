{"version":3,"file":"initializeFocusRects.js","sourceRoot":"../src/","sources":["initializeFocusRects.ts"],"names":[],"mappings":";;;IAGa,QAAA,uBAAuB,GAAG,2BAA2B,CAAC;IAEnE;;;;;;;;;;;;;OAaG;IACH,SAAgB,oBAAoB,CAAC,MAAe;QAClD,IAAM,GAAG,GAAG,CAAC,MAAM,IAAI,qBAAS,EAAE,CAAsD,CAAC;QAEzF,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,2BAA2B,EAAE;YAC3C,GAAG,CAAC,2BAA2B,GAAG,IAAI,CAAC;YACvC,GAAG,CAAC,gBAAgB,CAAC,WAAW,EAAE,YAAY,EAAE,IAAI,CAAC,CAAC;YACtD,GAAG,CAAC,gBAAgB,CAAC,SAAS,EAAE,UAAwB,EAAE,IAAI,CAAC,CAAC;SACjE;IACH,CAAC;IARD,oDAQC;IAED,SAAS,YAAY,CAAC,EAAc;QAClC,IAAM,GAAG,GAAG,qBAAS,CAAC,EAAE,CAAC,MAAiB,CAAC,CAAC;QAE5C,IAAI,GAAG,EAAE;YACC,IAAA,uCAAS,CAAuB;YAExC,IAAI,SAAS,CAAC,QAAQ,CAAC,+BAAuB,CAAC,EAAE;gBAC/C,SAAS,CAAC,MAAM,CAAC,+BAAuB,CAAC,CAAC;aAC3C;SACF;IACH,CAAC;IAED,SAAS,UAAU,CAAC,EAAiB;QACnC,IAAM,GAAG,GAAG,qBAAS,CAAC,EAAE,CAAC,MAAiB,CAAC,CAAC;QAE5C,IAAI,GAAG,EAAE;YACC,IAAA,uCAAS,CAAuB;YAExC,IAAI,+BAAoB,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,+BAAuB,CAAC,EAAE;gBAClF,SAAS,CAAC,GAAG,CAAC,+BAAuB,CAAC,CAAC;aACxC;SACF;IACH,CAAC","sourcesContent":["import { getWindow } from './dom/getWindow';\nimport { isDirectionalKeyCode } from './keyboard';\n\nexport const IsFocusVisibleClassName = 'ms-Fabric--isFocusVisible';\n\n/**\n * Initializes the logic which:\n *\n * 1. Subscribes keydown and mousedown events. (It will only do it once per window,\n *    so it's safe to call this method multiple times.)\n * 2. When the user presses directional keyboard keys, adds the 'ms-Fabric--isFocusVisible' classname\n *    to the document body.\n * 3. When the user clicks a mouse button, we remove the classname if it exists.\n *\n * This logic allows components on the page to conditionally render focus treatments only\n * if the global classname exists, which simplifies logic overall.\n *\n * @param window - the window used to add the event listeners\n */\nexport function initializeFocusRects(window?: Window): void {\n  const win = (window || getWindow()) as Window & { __hasInitializeFocusRects__: boolean };\n\n  if (win && !win.__hasInitializeFocusRects__) {\n    win.__hasInitializeFocusRects__ = true;\n    win.addEventListener('mousedown', _onMouseDown, true);\n    win.addEventListener('keydown', _onKeyDown as () => void, true);\n  }\n}\n\nfunction _onMouseDown(ev: MouseEvent): void {\n  const win = getWindow(ev.target as Element);\n\n  if (win) {\n    const { classList } = win.document.body;\n\n    if (classList.contains(IsFocusVisibleClassName)) {\n      classList.remove(IsFocusVisibleClassName);\n    }\n  }\n}\n\nfunction _onKeyDown(ev: KeyboardEvent): void {\n  const win = getWindow(ev.target as Element);\n\n  if (win) {\n    const { classList } = win.document.body;\n\n    if (isDirectionalKeyCode(ev.which) && !classList.contains(IsFocusVisibleClassName)) {\n      classList.add(IsFocusVisibleClassName);\n    }\n  }\n}\n"]}
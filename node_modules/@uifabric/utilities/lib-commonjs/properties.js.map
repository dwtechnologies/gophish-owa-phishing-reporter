{"version":3,"file":"properties.js","sourceRoot":"../src/","sources":["properties.ts"],"names":[],"mappings":"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","sourcesContent":["import { filteredAssign } from './object';\n\n/**\n * An array of events that are allowed on every html element type.\n *\n * @public\n */\nexport const baseElementEvents = [\n  'onCopy',\n  'onCut',\n  'onPaste',\n  'onCompositionEnd',\n  'onCompositionStart',\n  'onCompositionUpdate',\n  'onFocus',\n  'onFocusCapture',\n  'onBlur',\n  'onBlurCapture',\n  'onChange',\n  'onInput',\n  'onSubmit',\n  'onLoad',\n  'onError',\n  'onKeyDown',\n  'onKeyDownCapture',\n  'onKeyPress',\n  'onKeyUp',\n  'onAbort',\n  'onCanPlay',\n  'onCanPlayThrough',\n  'onDurationChange',\n  'onEmptied',\n  'onEncrypted',\n  'onEnded',\n  'onLoadedData',\n  'onLoadedMetadata',\n  'onLoadStart',\n  'onPause',\n  'onPlay',\n  'onPlaying',\n  'onProgress',\n  'onRateChange',\n  'onSeeked',\n  'onSeeking',\n  'onStalled',\n  'onSuspend',\n  'onTimeUpdate',\n  'onVolumeChange',\n  'onWaiting',\n  'onClick',\n  'onClickCapture',\n  'onContextMenu',\n  'onDoubleClick',\n  'onDrag',\n  'onDragEnd',\n  'onDragEnter',\n  'onDragExit',\n  'onDragLeave',\n  'onDragOver',\n  'onDragStart',\n  'onDrop',\n  'onMouseDown',\n  'onMouseDownCapture',\n  'onMouseEnter',\n  'onMouseLeave',\n  'onMouseMove',\n  'onMouseOut',\n  'onMouseOver',\n  'onMouseUp',\n  'onMouseUpCapture',\n  'onSelect',\n  'onTouchCancel',\n  'onTouchEnd',\n  'onTouchMove',\n  'onTouchStart',\n  'onScroll',\n  'onWheel',\n  'onPointerCancel',\n  'onPointerDown',\n  'onPointerEnter',\n  'onPointerLeave',\n  'onPointerMove',\n  'onPointerOut',\n  'onPointerOver',\n  'onPointerUp',\n  'onGotPointerCapture',\n  'onLostPointerCapture'\n];\n\n/**\n * An array of element attributes which are allowed on every html element type.\n *\n * @public\n */\nexport const baseElementProperties = [\n  'accessKey', // global\n  'children', // global\n  'className', // global\n  'contentEditable', // global\n  'dir', // global\n  'draggable', // global\n  'hidden', // global\n  'htmlFor', // global\n  'id', // global\n  'lang', // global\n  'role', // global\n  'style', // global\n  'tabIndex', // global\n  'title', // global\n  'translate', // global\n  'spellCheck', // global\n  'name' // global\n];\n\n/**\n * An array of HTML element properties and events.\n *\n * @public\n */\nexport const htmlElementProperties = baseElementProperties.concat(baseElementEvents);\n\n/**\n * An array of LABEL tag properties and events.\n *\n * @public\n */\nexport const labelProperties = htmlElementProperties.concat([\n  'form' // button, fieldset, input, label, meter, object, output, select, textarea\n]);\n\n/**\n * An array of AUDIO tag properties and events.\n *\n * @public\n */\nexport const audioProperties = htmlElementProperties.concat([\n  'height', // canvas, embed, iframe, img, input, object, video\n  'loop', // audio, video\n  'muted', // audio, video\n  'preload', // audio, video\n  'src', // audio, embed, iframe, img, input, script, source, track, video\n  'width' // canvas, embed, iframe, img, input, object, video\n]);\n\n/**\n * An array of VIDEO tag properties and events.\n *\n * @public\n */\nexport const videoProperties = audioProperties.concat([\n  'poster' // video\n]);\n\n/**\n * An array of OL tag properties and events.\n *\n * @public\n */\nexport const olProperties = htmlElementProperties.concat([\n  'start' // ol\n]);\n\n/**\n * An array of LI tag properties and events.\n *\n * @public\n */\nexport const liProperties = htmlElementProperties.concat([\n  'value' // button, input, li, option, meter, progress, param\n]);\n\n/**\n * An array of A tag properties and events.\n *\n * @public\n */\nexport const anchorProperties = htmlElementProperties.concat([\n  'download', // a, area\n  'href', // a, area, base, link\n  'hrefLang', // a, area, link\n  'media', // a, area, link, source, style\n  'rel', // a, area, link\n  'target', // a, area, base, form\n  'type' // a, button, input, link, menu, object, script, source, style\n]);\n\n/**\n * An array of BUTTON tag properties and events.\n *\n * @public\n */\nexport const buttonProperties = htmlElementProperties.concat([\n  'autoFocus', // button, input, select, textarea\n  'disabled', // button, fieldset, input, optgroup, option, select, textarea\n  'form', // button, fieldset, input, label, meter, object, output, select, textarea\n  'formAction', // input, button\n  'formEncType', // input, button\n  'formMethod', // input, button\n  'formNoValidate', // input, button\n  'formTarget', // input, button\n  'type', // a, button, input, link, menu, object, script, source, style\n  'value' // button, input, li, option, meter, progress, param,\n]);\n\n/**\n * An array of INPUT tag properties and events.\n *\n * @public\n */\nexport const inputProperties = buttonProperties.concat([\n  'accept', // input\n  'alt', // area, img, input\n  'autoComplete', // form, input\n  'checked', // input\n  'dirname', // input, textarea\n  'form', // button, fieldset, input, label, meter, object, output, select, textarea\n  'height', // canvas, embed, iframe, img, input, object, video\n  'inputMode', // input\n  'list', // input\n  'max', // input, meter\n  'maxLength', // input, textarea\n  'min', // input, meter\n  'multiple', // input, select\n  'pattern', // input\n  'placeholder', // input, textarea\n  'readOnly', // input, textarea\n  'required', // input, select, textarea\n  'src', // audio, embed, iframe, img, input, script, source, track, video\n  'step', // input\n  'size', // input\n  'type', // a, button, input, link, menu, object, script, source, style\n  'value', // button, input, li, option, meter, progress, param\n  'width' // canvas, embed, iframe, img, input, object, video\n]);\n\n/**\n * An array of TEXTAREA tag properties and events.\n *\n * @public\n */\nexport const textAreaProperties = buttonProperties.concat([\n  'cols', // textarea\n  'dirname', // input, textarea\n  'form', // button, fieldset, input, label, meter, object, output, select, textarea\n  'maxLength', // input, textarea\n  'placeholder', // input, textarea\n  'readOnly', // input, textarea\n  'required', // input, select, textarea\n  'rows', // textarea\n  'wrap' // textarea\n]);\n\n/**\n * An array of SELECT tag properties and events.\n *\n * @public\n */\nexport const selectProperties = buttonProperties.concat([\n  'form', // button, fieldset, input, label, meter, object, output, select, textarea\n  'multiple', // input, select\n  'required' // input, select, textarea\n]);\n\nexport const optionProperties = htmlElementProperties.concat([\n  'selected', // option\n  'value' // button, input, li, option, meter, progress, param\n]);\n\n/**\n * An array of TABLE tag properties and events.\n *\n * @public\n */\nexport const tableProperties = htmlElementProperties.concat([\n  'cellPadding', // table\n  'cellSpacing' // table\n]);\n\n/**\n * An array of TR tag properties and events.\n *\n * @public\n */\nexport const trProperties = htmlElementProperties;\n\n/**\n * An array of TH tag properties and events.\n *\n * @public\n */\nexport const thProperties = htmlElementProperties.concat([\n  'rowSpan', // td, th\n  'scope' // th\n]);\n\n/**\n * An array of TD tag properties and events.\n *\n * @public\n */\nexport const tdProperties = htmlElementProperties.concat([\n  'colSpan', // td\n  'headers', // td\n  'rowSpan', // td, th\n  'scope' // th\n]);\n\nexport const colGroupProperties = htmlElementProperties.concat([\n  'span' // col, colgroup\n]);\n\nexport const colProperties = htmlElementProperties.concat([\n  'span' // col, colgroup\n]);\n\n/**\n * An array of FORM tag properties and events.\n *\n * @public\n */\nexport const formProperties = htmlElementProperties.concat([\n  'acceptCharset', // form\n  'action', // form\n  'encType', // form\n  'encType', // form\n  'method', // form\n  'noValidate', // form\n  'target' // form\n]);\n\n/**\n * An array of IFRAME tag properties and events.\n *\n * @public\n */\nexport const iframeProperties = htmlElementProperties.concat([\n  'allow', // iframe\n  'allowFullScreen', // iframe\n  'allowPaymentRequest', // iframe\n  'allowTransparency', // iframe\n  'csp', // iframe\n  'height', // canvas, embed, iframe, img, input, object, video\n  'importance', // iframe\n  'referrerPolicy', // iframe\n  'sandbox', // iframe\n  'src', // audio, embed, iframe, img, input, script, source, track, video\n  'srcDoc', // iframe\n  'width' // canvas, embed, iframe, img, input, object, video,\n]);\n\n/**\n * An array of IMAGE tag properties and events.\n *\n * @public\n */\nexport const imgProperties = htmlElementProperties.concat([\n  'alt', // area, img, input\n  'crossOrigin', // img\n  'height', // canvas, embed, iframe, img, input, object, video\n  'src', // audio, embed, iframe, img, input, script, source, track, video\n  'srcSet', // img, source\n  'useMap', // img, object,\n  'width' // canvas, embed, iframe, img, input, object, video\n]);\n\n/**\n * @deprecated Use imgProperties for img elements.\n */\nexport const imageProperties = imgProperties;\n\n/**\n * An array of DIV tag properties and events.\n *\n * @public\n */\nexport const divProperties = htmlElementProperties;\n\n/**\n * Gets native supported props for an html element provided the allowance set. Use one of the property\n * sets defined (divProperties, buttonPropertes, etc) to filter out supported properties from a given\n * props set. Note that all data- and aria- prefixed attributes will be allowed.\n * NOTE: getNativeProps should always be applied first when adding props to a react component. The\n * non-native props should be applied second. This will prevent getNativeProps from overriding your custom props.\n * For example, if props passed to getNativeProps has an onClick function and getNativeProps is added to\n * the component after an onClick function is added, then the getNativeProps onClick will override it.\n *\n * @public\n * @param props - The unfiltered input props\n * @param allowedPropsNames-  The array of allowed propnames.\n * @returns The filtered props\n */\nexport function getNativeProps<T>(props: {}, allowedPropNames: string[], excludedPropNames?: string[]): T {\n  // It'd be great to properly type this while allowing 'aria-` and 'data-' attributes like TypeScript does for JSX attributes,\n  // but that ability is hardcoded into the TS compiler with no analog in TypeScript typings.\n  // Then we'd be able to enforce props extends native props (including aria- and data- attributes), and then return native props.\n  // We should be able to do this once this PR is merged: https://github.com/microsoft/TypeScript/pull/26797\n  return filteredAssign(\n    (propName: string) => {\n      return (\n        (!excludedPropNames || excludedPropNames.indexOf(propName) < 0) &&\n        (propName.indexOf('data-') === 0 || propName.indexOf('aria-') === 0 || allowedPropNames.indexOf(propName) >= 0)\n      );\n    },\n    {},\n    props\n  ) as T;\n}\n"]}
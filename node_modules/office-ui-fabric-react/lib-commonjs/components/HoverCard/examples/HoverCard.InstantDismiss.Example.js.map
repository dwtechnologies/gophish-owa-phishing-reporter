{"version":3,"file":"HoverCard.InstantDismiss.Example.js","sourceRoot":"../src/","sources":["components/HoverCard/examples/HoverCard.InstantDismiss.Example.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,kEAA6G;AAC7G,4DAA2D;AAC3D,4DAAkE;AAClE,8DAAoE;AAEpE,IAAM,UAAU,GAAG,wBAAc,CAAC;IAChC,SAAS,EAAE;QACT,KAAK,EAAE,GAAG;QACV,MAAM,EAAE,GAAG;QACX,OAAO,EAAE,MAAM;QACf,UAAU,EAAE,QAAQ;QACpB,cAAc,EAAE,QAAQ;KACzB;IACD,MAAM,EAAE;QACN,UAAU,EAAE,KAAK;QACjB,OAAO,EAAE,cAAc;QACvB,MAAM,EAAE,oBAAoB;QAC5B,OAAO,EAAE,CAAC;QACV,YAAY,EAAE,CAAC;KAChB;CACF,CAAC,CAAC;AAEH;IAAoD,0DAAuB;IAA3E;QAAA,qEA4CC;QA3CS,gBAAU,GAAG,KAAK,CAAC,SAAS,EAAc,CAAC;QA0B3C,wBAAkB,GAAG;YAC3B,OAAO,CACL,6BAAK,SAAS,EAAE,UAAU,CAAC,SAAS;gBAClC,oBAAC,sBAAa,IAAC,OAAO,EAAE,KAAI,CAAC,mBAAmB,EAAE,IAAI,EAAC,iBAAiB,GAAG,CACvE,CACP,CAAC;QACJ,CAAC,CAAC;QAEM,yBAAmB,GAAG;YAC5B,IAAI,KAAI,CAAC,UAAU,CAAC,OAAO,EAAE;gBAC3B,KAAI,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;aACnC;QACH,CAAC,CAAC;QAEM,iBAAW,GAAG;YACpB,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QACjC,CAAC,CAAC;;IACJ,CAAC;IAzCQ,+CAAM,GAAb;QACE,IAAM,cAAc,GAAoB;YACtC,iBAAiB,EAAE,IAAI,CAAC,kBAAkB;SAC3C,CAAC;QAEF,OAAO,CACL,oBAAC,eAAM;YACL;;gBACyE,2CAAgB;;gBAAyB,GAAG;gBACnH,8CAAmB;yBACjB;YACJ,oBAAC,qBAAS,IACR,gBAAgB,EAAE,IAAI,EACtB,IAAI,EAAE,yBAAa,CAAC,KAAK,EACzB,cAAc,EAAE,cAAc,EAC9B,YAAY,EAAE,IAAI,CAAC,UAAU,EAC7B,UAAU,EAAE,IAAI,CAAC,WAAW;gBAE5B,8BAAM,SAAS,EAAE,UAAU,CAAC,MAAM,oBAAsB,CAC9C,CACL,CACV,CAAC;IACJ,CAAC;IAmBH,qCAAC;AAAD,CAAC,AA5CD,CAAoD,KAAK,CAAC,SAAS,GA4ClE;AA5CY,wEAA8B","sourcesContent":["import * as React from 'react';\nimport { HoverCard, IHoverCard, IPlainCardProps, HoverCardType } from 'office-ui-fabric-react/lib/HoverCard';\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport { mergeStyleSets } from 'office-ui-fabric-react/lib/Styling';\n\nconst classNames = mergeStyleSets({\n  plainCard: {\n    width: 200,\n    height: 200,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  target: {\n    fontWeight: '600',\n    display: 'inline-block',\n    border: '1px dashed #605e5c',\n    padding: 5,\n    borderRadius: 2\n  }\n});\n\nexport class HoverCardInstantDismissExample extends React.Component<{}, {}> {\n  private _hoverCard = React.createRef<IHoverCard>();\n\n  public render() {\n    const plainCardProps: IPlainCardProps = {\n      onRenderPlainCard: this._onRenderPlainCard\n    };\n\n    return (\n      <Fabric>\n        <p>\n          In cases where an instant dismiss of the card is needed, public method <i>dismiss()</i> can be used through its{' '}\n          <i>componentRef</i> prop.\n        </p>\n        <HoverCard\n          cardDismissDelay={2000}\n          type={HoverCardType.plain}\n          plainCardProps={plainCardProps}\n          componentRef={this._hoverCard}\n          onCardHide={this._onCardHide}\n        >\n          <span className={classNames.target}>Hover Over Me</span>\n        </HoverCard>\n      </Fabric>\n    );\n  }\n\n  private _onRenderPlainCard = (): JSX.Element => {\n    return (\n      <div className={classNames.plainCard}>\n        <DefaultButton onClick={this._instantDismissCard} text=\"Instant Dismiss\" />\n      </div>\n    );\n  };\n\n  private _instantDismissCard = (): void => {\n    if (this._hoverCard.current) {\n      this._hoverCard.current.dismiss();\n    }\n  };\n\n  private _onCardHide = (): void => {\n    console.log('I am now hidden');\n  };\n}\n"]}
{"version":3,"file":"OverflowSet.Basic.Example.js","sourceRoot":"../src/","sources":["components/OverflowSet/examples/OverflowSet.Basic.Example.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,4DAA8E;AAC9E,wDAAuD;AACvD,sEAA4F;AAE5F,IAAM,IAAI,GAAG,cAAM,OAAA,SAAS,EAAT,CAAS,CAAC;AAE7B;IAA6C,mDAAmB;IAAhE;QAAA,qEA0DC;QAnBS,mBAAa,GAAG,UAAC,IAA2B;YAClD,OAAO,CACL,oBAAC,WAAI,IAAC,MAAM,EAAE,EAAE,IAAI,EAAE,EAAE,WAAW,EAAE,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,IAC/D,IAAI,CAAC,IAAI,CACL,CACR,CAAC;QACJ,CAAC,CAAC;QAEM,6BAAuB,GAAG,UAAC,aAAgC;YACjE,IAAM,YAAY,GAA2B;gBAC3C,IAAI,EAAE;oBACJ,QAAQ,EAAE,CAAC;oBACX,OAAO,EAAE,OAAO;oBAChB,SAAS,EAAE,SAAS;oBACpB,MAAM,EAAE,MAAM;iBACf;aACF,CAAC;YACF,OAAO,oBAAC,mBAAU,IAAC,MAAM,EAAE,YAAY,EAAE,aAAa,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE,SAAS,EAAE,EAAE,KAAK,EAAE,aAAc,EAAE,GAAI,CAAC;QACzH,CAAC,CAAC;;IACJ,CAAC;IAzDQ,wCAAM,GAAb;QACE,OAAO,CACL,oBAAC,yBAAW,IACV,KAAK,EAAE;gBACL;oBACE,GAAG,EAAE,OAAO;oBACZ,IAAI,EAAE,QAAQ;oBACd,OAAO,EAAE,IAAI;iBACd;gBACD;oBACE,GAAG,EAAE,OAAO;oBACZ,IAAI,EAAE,QAAQ;oBACd,OAAO,EAAE,IAAI;iBACd;gBACD;oBACE,GAAG,EAAE,OAAO;oBACZ,IAAI,EAAE,QAAQ;oBACd,OAAO,EAAE,IAAI;iBACd;aACF,EACD,aAAa,EAAE;gBACb;oBACE,GAAG,EAAE,OAAO;oBACZ,IAAI,EAAE,iBAAiB;oBACvB,OAAO,EAAE,IAAI;iBACd;gBACD;oBACE,GAAG,EAAE,OAAO;oBACZ,IAAI,EAAE,iBAAiB;oBACvB,OAAO,EAAE,IAAI;iBACd;aACF,EACD,sBAAsB,EAAE,IAAI,CAAC,uBAAuB,EACpD,YAAY,EAAE,IAAI,CAAC,aAAa,GAChC,CACH,CAAC;IACJ,CAAC;IAqBH,8BAAC;AAAD,CAAC,AA1DD,CAA6C,KAAK,CAAC,aAAa,GA0D/D;AA1DY,0DAAuB","sourcesContent":["import * as React from 'react';\nimport { IconButton, IButtonStyles } from 'office-ui-fabric-react/lib/Button';\nimport { Link } from 'office-ui-fabric-react/lib/Link';\nimport { IOverflowSetItemProps, OverflowSet } from 'office-ui-fabric-react/lib/OverflowSet';\n\nconst noOp = () => undefined;\n\nexport class OverflowSetBasicExample extends React.PureComponent {\n  public render(): JSX.Element {\n    return (\n      <OverflowSet\n        items={[\n          {\n            key: 'item1',\n            name: 'Link 1',\n            onClick: noOp\n          },\n          {\n            key: 'item2',\n            name: 'Link 2',\n            onClick: noOp\n          },\n          {\n            key: 'item3',\n            name: 'Link 3',\n            onClick: noOp\n          }\n        ]}\n        overflowItems={[\n          {\n            key: 'item4',\n            name: 'Overflow Link 1',\n            onClick: noOp\n          },\n          {\n            key: 'item5',\n            name: 'Overflow Link 2',\n            onClick: noOp\n          }\n        ]}\n        onRenderOverflowButton={this._onRenderOverflowButton}\n        onRenderItem={this._onRenderItem}\n      />\n    );\n  }\n\n  private _onRenderItem = (item: IOverflowSetItemProps): JSX.Element => {\n    return (\n      <Link styles={{ root: { marginRight: 10 } }} onClick={item.onClick}>\n        {item.name}\n      </Link>\n    );\n  };\n\n  private _onRenderOverflowButton = (overflowItems: any[] | undefined): JSX.Element => {\n    const buttonStyles: Partial<IButtonStyles> = {\n      root: {\n        minWidth: 0,\n        padding: '0 4px',\n        alignSelf: 'stretch',\n        height: 'auto'\n      }\n    };\n    return <IconButton styles={buttonStyles} menuIconProps={{ iconName: 'More' }} menuProps={{ items: overflowItems! }} />;\n  };\n}\n"]}
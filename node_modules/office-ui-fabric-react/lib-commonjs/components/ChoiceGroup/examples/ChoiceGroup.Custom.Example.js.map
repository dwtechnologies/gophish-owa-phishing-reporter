{"version":3,"file":"ChoiceGroup.Custom.Example.js","sourceRoot":"../src/","sources":["components/ChoiceGroup/examples/ChoiceGroup.Custom.Example.tsx"],"names":[],"mappings":";;AAAA,6BAA+B;AAC/B,sEAAyF;AACzF,gEAAgF;AAChF,8DAAiE;AAEjE,IAAM,eAAe,GAAG,qBAAW,CAAC;IAClC,OAAO,EAAE,MAAM;IACf,UAAU,EAAE,UAAU;CACvB,CAAC,CAAC;AACH,IAAM,cAAc,GAA6B;IAC/C,IAAI,EAAE;QACJ,YAAY,EAAE,CAAC;QACf,UAAU,EAAE,CAAC;KACd;CACF,CAAC;AAEW,QAAA,wBAAwB,GAA4B;IAC/D,OAAO,CACL,oBAAC,yBAAW,IACV,kBAAkB,EAAC,GAAG,EACtB,OAAO,EAAE;YACP;gBACE,GAAG,EAAE,GAAG;gBACR,IAAI,EAAE,oCAAoC;gBAC1C,SAAS,EAAE,mEAAmE;gBAC9E,aAAa,EAAE,UAAC,KAAK,EAAE,MAAM;oBAC3B,OAAO,CACL,6BAAK,SAAS,EAAE,eAAe;wBAC5B,MAAO,CAAC,KAAK,CAAC;wBACf,oBAAC,mBAAQ,IACP,kBAAkB,EAAC,GAAG,EACtB,MAAM,EAAE,cAAc,EACtB,OAAO,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,WAAW,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,YAAY,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC,EAC9G,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,EACxC,SAAS,EAAC,oBAAoB,GAC9B,CACE,CACP,CAAC;gBACJ,CAAC;aACF;YACD;gBACE,GAAG,EAAE,GAAG;gBACR,IAAI,EAAE,UAAU;gBAChB,MAAM,EAAE;oBACN,IAAI,EAAE;wBACJ,MAAM,EAAE,iBAAiB;qBAC1B;iBACF;aACF;YACD;gBACE,GAAG,EAAE,GAAG;gBACR,IAAI,EAAE,UAAU;gBAChB,QAAQ,EAAE,IAAI;aACf;YACD;gBACE,GAAG,EAAE,GAAG;gBACR,IAAI,EAAE,UAAU;aACjB;SACF,EACD,QAAQ,EAAE,SAAS,EACnB,KAAK,EAAC,UAAU,GAChB,CACH,CAAC;AACJ,CAAC,CAAC;AAEF,SAAS,SAAS,CAAC,EAAqC,EAAE,MAA0B;IAClF,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AACtB,CAAC","sourcesContent":["import * as React from 'react';\nimport { ChoiceGroup, IChoiceGroupOption } from 'office-ui-fabric-react/lib/ChoiceGroup';\nimport { Dropdown, IDropdownStyles } from 'office-ui-fabric-react/lib/Dropdown';\nimport { mergeStyles } from 'office-ui-fabric-react/lib/Styling';\n\nconst optionRootClass = mergeStyles({\n  display: 'flex',\n  alignItems: 'baseline'\n});\nconst dropdownStyles: Partial<IDropdownStyles> = {\n  root: {\n    marginBottom: 0,\n    marginLeft: 5\n  }\n};\n\nexport const ChoiceGroupCustomExample: React.FunctionComponent = () => {\n  return (\n    <ChoiceGroup\n      defaultSelectedKey=\"B\"\n      options={[\n        {\n          key: 'A',\n          text: 'Mark displayed items as read after',\n          ariaLabel: 'Mark displayed items as read after - Press tab for further action',\n          onRenderField: (props, render) => {\n            return (\n              <div className={optionRootClass}>\n                {render!(props)}\n                <Dropdown\n                  defaultSelectedKey=\"A\"\n                  styles={dropdownStyles}\n                  options={[{ key: 'A', text: '5 seconds' }, { key: 'B', text: '10 seconds' }, { key: 'C', text: '20 seconds' }]}\n                  disabled={props ? !props.checked : false}\n                  ariaLabel=\"Select a time span\"\n                />\n              </div>\n            );\n          }\n        },\n        {\n          key: 'B',\n          text: 'Option B',\n          styles: {\n            root: {\n              border: '1px solid green'\n            }\n          }\n        },\n        {\n          key: 'C',\n          text: 'Option C',\n          disabled: true\n        },\n        {\n          key: 'D',\n          text: 'Option D'\n        }\n      ]}\n      onChange={_onChange}\n      label=\"Pick one\"\n    />\n  );\n};\n\nfunction _onChange(ev: React.FormEvent<HTMLInputElement>, option: IChoiceGroupOption): void {\n  console.dir(option);\n}\n"]}
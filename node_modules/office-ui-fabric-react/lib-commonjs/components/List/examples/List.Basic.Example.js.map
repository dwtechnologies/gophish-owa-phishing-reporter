{"version":3,"file":"List.Basic.Example.js","sourceRoot":"../src/","sources":["components/List/examples/List.Basic.Example.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,kEAA8D;AAC9D,kEAAqF;AACrF,kEAAiE;AACjE,0DAAmE;AACnE,wDAAuD;AACvD,wDAAuD;AACvD,8DAAqG;AACrG,uDAAuE;AAoBvE,IAAM,KAAK,GAAW,kBAAQ,EAAE,CAAC;AACzB,IAAA,uBAAO,EAAE,qCAAc,EAAE,mBAAK,CAAW;AAEjD,IAAM,UAAU,GAAiC,wBAAc,CAAC;IAC9D,QAAQ,EAAE;QACR,uBAAa,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC;QACnC;YACE,SAAS,EAAE,EAAE;YACb,OAAO,EAAE,EAAE;YACX,SAAS,EAAE,YAAY;YACvB,YAAY,EAAE,eAAa,cAAc,CAAC,WAAa;YACvD,OAAO,EAAE,MAAM;YACf,SAAS,EAAE;gBACT,SAAS,EAAE,EAAE,UAAU,EAAE,OAAO,CAAC,YAAY,EAAE;aAChD;SACF;KACF;IACD,SAAS,EAAE;QACT,UAAU,EAAE,CAAC;KACd;IACD,WAAW,EAAE;QACX,UAAU,EAAE,EAAE;QACd,QAAQ,EAAE,QAAQ;QAClB,QAAQ,EAAE,CAAC;KACZ;IACD,QAAQ,EAAE;QACR,KAAK,CAAC,MAAM;QACZ;YACE,UAAU,EAAE,QAAQ;YACpB,QAAQ,EAAE,QAAQ;YAClB,YAAY,EAAE,UAAU;SACzB;KACF;IACD,SAAS,EAAE;QACT,QAAQ,EAAE,KAAK,CAAC,KAAK,CAAC,QAAQ;QAC9B,KAAK,EAAE,OAAO,CAAC,eAAe;QAC9B,YAAY,EAAE,EAAE;KACjB;IACD,OAAO,EAAE;QACP,SAAS,EAAE,QAAQ;QACnB,UAAU,EAAE,EAAE;QACd,KAAK,EAAE,OAAO,CAAC,eAAe;QAC9B,QAAQ,EAAE,KAAK,CAAC,KAAK,CAAC,QAAQ;QAC9B,UAAU,EAAE,CAAC;KACd;CACF,CAAC,CAAC;AAEH;IAAsC,4CAA+D;IAGnG,0BAAY,KAA6B;QAAzC,YACE,kBAAM,KAAK,CAAC,SAOb;QAcO,sBAAgB,GAAG,UAAC,CAAM,EAAE,IAAY;YAC9C,KAAI,CAAC,QAAQ,CAAC;gBACZ,UAAU,EAAE,IAAI;gBAChB,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,KAAI,CAAC,cAAc,CAAC,MAAM,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,EAAxD,CAAwD,CAAC,CAAC,CAAC,CAAC,KAAI,CAAC,cAAc;aACjI,CAAC,CAAC;QACL,CAAC,CAAC;QAxBA,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC,KAAK,IAAI,8BAAe,CAAC,IAAI,CAAC,CAAC;QAC3D,KAAI,CAAC,KAAK,GAAG;YACX,UAAU,EAAE,EAAE;YACd,KAAK,EAAE,KAAI,CAAC,cAAc;SAC3B,CAAC;;IACJ,CAAC;IAEM,iCAAM,GAAb;QACU,IAAA,qBAAU,EAAV,+BAAU,CAAgB;QAClC,IAAM,eAAe,GAAG,KAAK,CAAC,MAAM,KAAK,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAK,KAAK,CAAC,MAAM,YAAO,IAAI,CAAC,cAAc,CAAC,MAAM,YAAS,CAAC;QAEvI,OAAO,CACL,oBAAC,qBAAS,IAAC,SAAS,EAAE,8BAAkB,CAAC,QAAQ;YAC/C,oBAAC,qBAAS,IAAC,KAAK,EAAE,gBAAgB,GAAG,eAAe,EAAE,QAAQ,EAAE,IAAI,CAAC,gBAAgB,GAAI;YACzF,oBAAC,WAAI,IAAC,KAAK,EAAE,KAAK,EAAE,YAAY,EAAE,IAAI,CAAC,aAAa,GAAI,CAC9C,CACb,CAAC;IACJ,CAAC;IASO,wCAAa,GAArB,UAAsB,IAAkB,EAAE,KAAyB;QACjE,OAAO,CACL,6BAAK,SAAS,EAAE,UAAU,CAAC,QAAQ,uBAAqB,IAAI;YAC1D,oBAAC,aAAK,IAAC,SAAS,EAAE,UAAU,CAAC,SAAS,EAAE,GAAG,EAAE,IAAI,CAAC,SAAS,EAAE,KAAK,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,QAAQ,EAAE,gBAAQ,CAAC,KAAK,GAAI;YAChH,6BAAK,SAAS,EAAE,UAAU,CAAC,WAAW;gBACpC,6BAAK,SAAS,EAAE,UAAU,CAAC,QAAQ,IAAG,IAAI,CAAC,IAAI,CAAO;gBACtD,6BAAK,SAAS,EAAE,UAAU,CAAC,SAAS,IAAG,UAAQ,KAAO,CAAO;gBAC7D,iCAAM,IAAI,CAAC,WAAW,CAAO,CACzB;YACN,oBAAC,WAAI,IAAC,SAAS,EAAE,UAAU,CAAC,OAAO,EAAE,QAAQ,EAAE,kBAAM,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,cAAc,GAAI,CACxF,CACP,CAAC;IACJ,CAAC;IACH,uBAAC;AAAD,CAAC,AA7CD,CAAsC,KAAK,CAAC,SAAS,GA6CpD;AA7CY,4CAAgB","sourcesContent":["import * as React from 'react';\nimport { getRTL } from 'office-ui-fabric-react/lib/Utilities';\nimport { FocusZone, FocusZoneDirection } from 'office-ui-fabric-react/lib/FocusZone';\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport { Image, ImageFit } from 'office-ui-fabric-react/lib/Image';\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\nimport { List } from 'office-ui-fabric-react/lib/List';\nimport { ITheme, mergeStyleSets, getTheme, getFocusStyle } from 'office-ui-fabric-react/lib/Styling';\nimport { createListItems, IExampleItem } from '@uifabric/example-data';\n\nexport interface IListBasicExampleProps {\n  items?: IExampleItem[];\n}\n\nexport interface IListBasicExampleState {\n  filterText?: string;\n  items?: IExampleItem[];\n}\n\ninterface IListBasicExampleClassObject {\n  itemCell: string;\n  itemImage: string;\n  itemContent: string;\n  itemName: string;\n  itemIndex: string;\n  chevron: string;\n}\n\nconst theme: ITheme = getTheme();\nconst { palette, semanticColors, fonts } = theme;\n\nconst classNames: IListBasicExampleClassObject = mergeStyleSets({\n  itemCell: [\n    getFocusStyle(theme, { inset: -1 }),\n    {\n      minHeight: 54,\n      padding: 10,\n      boxSizing: 'border-box',\n      borderBottom: `1px solid ${semanticColors.bodyDivider}`,\n      display: 'flex',\n      selectors: {\n        '&:hover': { background: palette.neutralLight }\n      }\n    }\n  ],\n  itemImage: {\n    flexShrink: 0\n  },\n  itemContent: {\n    marginLeft: 10,\n    overflow: 'hidden',\n    flexGrow: 1\n  },\n  itemName: [\n    fonts.xLarge,\n    {\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis'\n    }\n  ],\n  itemIndex: {\n    fontSize: fonts.small.fontSize,\n    color: palette.neutralTertiary,\n    marginBottom: 10\n  },\n  chevron: {\n    alignSelf: 'center',\n    marginLeft: 10,\n    color: palette.neutralTertiary,\n    fontSize: fonts.large.fontSize,\n    flexShrink: 0\n  }\n});\n\nexport class ListBasicExample extends React.Component<IListBasicExampleProps, IListBasicExampleState> {\n  private _originalItems: IExampleItem[];\n\n  constructor(props: IListBasicExampleProps) {\n    super(props);\n\n    this._originalItems = props.items || createListItems(5000);\n    this.state = {\n      filterText: '',\n      items: this._originalItems\n    };\n  }\n\n  public render(): JSX.Element {\n    const { items = [] } = this.state;\n    const resultCountText = items.length === this._originalItems.length ? '' : ` (${items.length} of ${this._originalItems.length} shown)`;\n\n    return (\n      <FocusZone direction={FocusZoneDirection.vertical}>\n        <TextField label={'Filter by name' + resultCountText} onChange={this._onFilterChanged} />\n        <List items={items} onRenderCell={this._onRenderCell} />\n      </FocusZone>\n    );\n  }\n\n  private _onFilterChanged = (_: any, text: string): void => {\n    this.setState({\n      filterText: text,\n      items: text ? this._originalItems.filter(item => item.name.toLowerCase().indexOf(text.toLowerCase()) >= 0) : this._originalItems\n    });\n  };\n\n  private _onRenderCell(item: IExampleItem, index: number | undefined): JSX.Element {\n    return (\n      <div className={classNames.itemCell} data-is-focusable={true}>\n        <Image className={classNames.itemImage} src={item.thumbnail} width={50} height={50} imageFit={ImageFit.cover} />\n        <div className={classNames.itemContent}>\n          <div className={classNames.itemName}>{item.name}</div>\n          <div className={classNames.itemIndex}>{`Item ${index}`}</div>\n          <div>{item.description}</div>\n        </div>\n        <Icon className={classNames.chevron} iconName={getRTL() ? 'ChevronLeft' : 'ChevronRight'} />\n      </div>\n    );\n  }\n}\n"]}
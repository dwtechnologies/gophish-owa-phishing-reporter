{"version":3,"file":"DocumentCardImage.base.js","sourceRoot":"../src/","sources":["components/DocumentCard/DocumentCardImage.base.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,mCAAkC;AAClC,qCAAoC;AAEpC,6CAAoE;AAOpE,IAAM,aAAa,GAAG,8BAAkB,EAA0D,CAAC;AAEnG;;GAEG;AACH;IAA2C,iDAA+D;IAGxG,+BAAY,KAA8B;QAA1C,YACE,kBAAM,KAAK,CAAC,SAEb;QAiBO,kBAAY,GAAG;YACrB,KAAI,CAAC,QAAQ,CAAC,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC,CAAC;QAC1C,CAAC,CAAC;QApBA,KAAI,CAAC,KAAK,GAAG,EAAE,cAAc,EAAE,KAAK,EAAE,CAAC;;IACzC,CAAC;IAEM,sCAAM,GAAb;QACQ,IAAA,eAA0D,EAAxD,kBAAM,EAAE,gBAAK,EAAE,kBAAM,EAAE,sBAAQ,EAAE,sBAAuB,CAAC;QAEjE,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC,MAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QAEtD,OAAO,CACL,6BAAK,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI;YAClC,QAAQ,IAAI,CACX,oBAAC,aAAK,IAAC,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAC,cAAc,EAAC,GAAG,EAAC,EAAE,EAAC,MAAM,EAAE,IAAI,CAAC,YAAY,GAAI,CACjI;YACA,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAC5E,CACP,CAAC;IACJ,CAAC;IAMO,iDAAiB,GAAzB;QACU,IAAA,gCAAS,CAAgB;QACjC,OAAO,CACL,6BAAK,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,mBAAmB;YAClD,oBAAC,WAAI,qBAAC,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,YAAY,IAAM,SAAS,EAAI,CAC7D,CACP,CAAC;IACJ,CAAC;IAEO,iDAAiB,GAAzB;QACU,IAAA,gCAAS,CAAgB;QACjC,OAAO,oBAAC,WAAI,qBAAC,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU,IAAM,SAAS,EAAI,CAAC;IACzE,CAAC;IACH,4BAAC;AAAD,CAAC,AAxCD,CAA2C,yBAAa,GAwCvD;AAxCY,sDAAqB","sourcesContent":["import * as React from 'react';\nimport { Icon } from '../../Icon';\nimport { Image } from '../../Image';\nimport { IProcessedStyleSet } from '../../Styling';\nimport { BaseComponent, classNamesFunction } from '../../Utilities';\nimport { IDocumentCardImageProps, IDocumentCardImageStyleProps, IDocumentCardImageStyles } from './DocumentCardImage.types';\n\nexport interface IDocumentCardImageState {\n  readonly imageHasLoaded: boolean;\n}\n\nconst getClassNames = classNamesFunction<IDocumentCardImageStyleProps, IDocumentCardImageStyles>();\n\n/**\n * {@docCategory DocumentCard}\n */\nexport class DocumentCardImageBase extends BaseComponent<IDocumentCardImageProps, IDocumentCardImageState> {\n  private _classNames: IProcessedStyleSet<IDocumentCardImageStyles>;\n\n  constructor(props: IDocumentCardImageProps) {\n    super(props);\n    this.state = { imageHasLoaded: false };\n  }\n\n  public render(): JSX.Element {\n    const { styles, width, height, imageFit, imageSrc } = this.props;\n\n    this._classNames = getClassNames(styles!, this.props);\n\n    return (\n      <div className={this._classNames.root}>\n        {imageSrc && (\n          <Image width={width} height={height} imageFit={imageFit} src={imageSrc} role=\"presentation\" alt=\"\" onLoad={this._onImageLoad} />\n        )}\n        {this.state.imageHasLoaded ? this._renderCornerIcon() : this._renderCenterIcon()}\n      </div>\n    );\n  }\n\n  private _onImageLoad = () => {\n    this.setState({ imageHasLoaded: true });\n  };\n\n  private _renderCenterIcon(): JSX.Element {\n    const { iconProps } = this.props;\n    return (\n      <div className={this._classNames.centeredIconWrapper}>\n        <Icon className={this._classNames.centeredIcon} {...iconProps} />\n      </div>\n    );\n  }\n\n  private _renderCornerIcon(): JSX.Element {\n    const { iconProps } = this.props;\n    return <Icon className={this._classNames.cornerIcon} {...iconProps} />;\n  }\n}\n"]}
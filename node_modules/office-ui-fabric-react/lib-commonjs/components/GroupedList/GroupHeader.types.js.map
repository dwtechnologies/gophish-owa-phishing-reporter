{"version":3,"file":"GroupHeader.types.js","sourceRoot":"../src/","sources":["components/GroupedList/GroupHeader.types.ts"],"names":[],"mappings":"","sourcesContent":["import * as React from 'react';\nimport { IStyleFunctionOrObject } from '../../Utilities';\nimport { IGroupDividerProps } from './GroupedList.types';\nimport { IStyle } from '../../Styling';\n\n/**\n * {@docCategory GroupedList}\n */\nexport interface IGroupHeaderProps extends IGroupDividerProps {\n  /**\n   * Style function to be passed in to override the themed or default styles\n   */\n  styles?: IStyleFunctionOrObject<IGroupHeaderStyleProps, IGroupHeaderStyles>;\n\n  /**\n   * GroupedList id for aria-controls\n   */\n  groupedListId?: string;\n\n  /** Native props for the GroupHeader expand and collapse button */\n  expandButtonProps?: React.HTMLAttributes<HTMLButtonElement>;\n\n  /** Native props for the GroupHeader select all button */\n  selectAllButtonProps?: React.HTMLAttributes<HTMLButtonElement>;\n}\n\n/**\n * {@docCategory GroupedList}\n */\nexport type IGroupHeaderStyleProps = Required<Pick<IGroupHeaderProps, 'theme'>> &\n  Pick<IGroupHeaderProps, 'selected' | 'className'> & {\n    /** Is Header collapsed */\n    isCollapsed?: boolean;\n\n    /** Whether the group header is in compact mode or not */\n    compact?: boolean;\n  };\n\n/**\n * {@docCategory GroupedList}\n */\nexport interface IGroupHeaderStyles {\n  root: IStyle;\n  groupHeaderContainer: IStyle;\n  headerCount: IStyle;\n  check: IStyle;\n  dropIcon: IStyle;\n  expand: IStyle;\n  expandIsCollapsed: IStyle;\n  title: IStyle;\n}\n"]}
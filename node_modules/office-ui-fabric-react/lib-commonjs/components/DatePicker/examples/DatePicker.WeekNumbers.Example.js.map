{"version":3,"file":"DatePicker.WeekNumbers.Example.js","sourceRoot":"../src/","sources":["components/DatePicker/examples/DatePicker.WeekNumbers.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Dropdown, IDropdownOption } from 'office-ui-fabric-react/lib/Dropdown';\nimport { DatePicker, DayOfWeek, IDatePickerStrings } from 'office-ui-fabric-react/lib/DatePicker';\nimport './DatePicker.Examples.scss';\n\nconst DayPickerStrings: IDatePickerStrings = {\n  months: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n\n  shortMonths: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n\n  days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n\n  shortDays: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n\n  goToToday: 'Go to today',\n  prevMonthAriaLabel: 'Go to previous month',\n  nextMonthAriaLabel: 'Go to next month',\n  prevYearAriaLabel: 'Go to previous year',\n  nextYearAriaLabel: 'Go to next year',\n  closeButtonAriaLabel: 'Close date picker'\n};\n\nexport interface IDatePickerBasicExampleState {\n  firstDayOfWeek?: DayOfWeek;\n}\n\nexport class DatePickerWeekNumbersExample extends React.Component<{}, IDatePickerBasicExampleState> {\n  constructor(props: {}) {\n    super(props);\n\n    this.state = {\n      firstDayOfWeek: DayOfWeek.Monday\n    };\n  }\n\n  public render(): JSX.Element {\n    const { firstDayOfWeek } = this.state;\n\n    return (\n      <div className=\"docs-DatePickerExample\">\n        <DatePicker\n          firstDayOfWeek={firstDayOfWeek}\n          strings={DayPickerStrings}\n          showWeekNumbers={true}\n          firstWeekOfYear={1}\n          showMonthPickerAsOverlay={true}\n          placeholder=\"Select a date...\"\n          ariaLabel=\"Select a date\"\n        />\n        <Dropdown\n          label=\"Select the first day of the week\"\n          options={[\n            {\n              text: 'Sunday',\n              key: DayOfWeek[DayOfWeek.Sunday]\n            },\n            {\n              text: 'Monday',\n              key: DayOfWeek[DayOfWeek.Monday]\n            },\n            {\n              text: 'Tuesday',\n              key: DayOfWeek[DayOfWeek.Tuesday]\n            },\n            {\n              text: 'Wednesday',\n              key: DayOfWeek[DayOfWeek.Wednesday]\n            },\n            {\n              text: 'Thursday',\n              key: DayOfWeek[DayOfWeek.Thursday]\n            },\n            {\n              text: 'Friday',\n              key: DayOfWeek[DayOfWeek.Friday]\n            },\n            {\n              text: 'Saturday',\n              key: DayOfWeek[DayOfWeek.Saturday]\n            }\n          ]}\n          selectedKey={DayOfWeek[firstDayOfWeek!]}\n          onChange={this._onDropdownChange}\n        />\n      </div>\n    );\n  }\n\n  private _onDropdownChange = (event: React.FormEvent<HTMLDivElement>, option: IDropdownOption): void => {\n    this.setState({\n      firstDayOfWeek: (DayOfWeek as any)[option.key]\n    });\n  };\n}\n"]}
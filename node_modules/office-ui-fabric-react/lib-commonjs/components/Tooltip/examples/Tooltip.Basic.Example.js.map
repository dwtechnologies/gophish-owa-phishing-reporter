{"version":3,"file":"Tooltip.Basic.Example.js","sourceRoot":"../src/","sources":["components/Tooltip/examples/Tooltip.Basic.Example.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,4DAAkE;AAClE,8DAAiE;AACjE,kEAA6D;AAE7D;IAAyC,+CAAyB;IAAlE;QAAA,qEAmBC;QAlBC,2DAA2D;QAC3D,yFAAyF;QACjF,aAAO,GAAW,iBAAK,CAAC,aAAa,CAAC,CAAC;;IAgBjD,CAAC;IAdQ,oCAAM,GAAb;QACE,OAAO,CACL;YACE,oBAAC,qBAAW,IACV,OAAO,EAAC,qBAAqB,EAC7B,EAAE,EAAE,IAAI,CAAC,OAAO,EAChB,YAAY,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,EAC7B,MAAM,EAAE,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,cAAc,EAAE,EAAE;gBAE7C,oBAAC,sBAAa,wBAAmB,IAAI,CAAC,OAAO,oBAA+B,CAChE,CACV,CACP,CAAC;IACJ,CAAC;IACH,0BAAC;AAAD,CAAC,AAnBD,CAAyC,KAAK,CAAC,SAAS,GAmBvD;AAnBY,kDAAmB","sourcesContent":["import * as React from 'react';\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport { TooltipHost } from 'office-ui-fabric-react/lib/Tooltip';\nimport { getId } from 'office-ui-fabric-react/lib/Utilities';\n\nexport class TooltipBasicExample extends React.Component<any, any> {\n  // Use getId() to ensure that the ID is unique on the page.\n  // (It's also okay to use a plain string without getId() and manually ensure uniqueness.)\n  private _hostId: string = getId('tooltipHost');\n\n  public render(): JSX.Element {\n    return (\n      <div>\n        <TooltipHost\n          content=\"This is the tooltip\"\n          id={this._hostId}\n          calloutProps={{ gapSpace: 0 }}\n          styles={{ root: { display: 'inline-block' } }}\n        >\n          <DefaultButton aria-describedby={this._hostId}>Hover Over Me</DefaultButton>\n        </TooltipHost>\n      </div>\n    );\n  }\n}\n"]}
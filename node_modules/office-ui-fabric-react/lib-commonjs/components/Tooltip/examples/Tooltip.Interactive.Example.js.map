{"version":3,"file":"Tooltip.Interactive.Example.js","sourceRoot":"../src/","sources":["components/Tooltip/examples/Tooltip.Interactive.Example.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,4DAAkE;AAClE,8DAAiE;AACjE,kEAA6D;AAE7D;IAA+C,qDAAyB;IAAxE;QAAA,qEAoBC;QAnBC,2DAA2D;QAC3D,yFAAyF;QACjF,aAAO,GAAW,iBAAK,CAAC,aAAa,CAAC,CAAC;;IAiBjD,CAAC;IAfQ,0CAAM,GAAb;QACE,OAAO,CACL;YACE,oBAAC,qBAAW,IACV,OAAO,EAAC,qBAAqB,EAC7B,EAAE,EAAE,IAAI,CAAC,OAAO,EAChB,YAAY,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,EAC7B,UAAU,EAAE,GAAG,EACf,MAAM,EAAE,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,cAAc,EAAE,EAAE;gBAE7C,oBAAC,sBAAa,wBAAmB,IAAI,CAAC,OAAO,+BAA0C,CAC3E,CACV,CACP,CAAC;IACJ,CAAC;IACH,gCAAC;AAAD,CAAC,AApBD,CAA+C,KAAK,CAAC,SAAS,GAoB7D;AApBY,8DAAyB","sourcesContent":["import * as React from 'react';\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport { TooltipHost } from 'office-ui-fabric-react/lib/Tooltip';\nimport { getId } from 'office-ui-fabric-react/lib/Utilities';\n\nexport class TooltipInteractiveExample extends React.Component<any, any> {\n  // Use getId() to ensure that the ID is unique on the page.\n  // (It's also okay to use a plain string without getId() and manually ensure uniqueness.)\n  private _hostId: string = getId('tooltipHost');\n\n  public render() {\n    return (\n      <div>\n        <TooltipHost\n          content=\"This is the tooltip\"\n          id={this._hostId}\n          calloutProps={{ gapSpace: 0 }}\n          closeDelay={500}\n          styles={{ root: { display: 'inline-block' } }}\n        >\n          <DefaultButton aria-describedby={this._hostId}>Interact with my tooltip</DefaultButton>\n        </TooltipHost>\n      </div>\n    );\n  }\n}\n"]}
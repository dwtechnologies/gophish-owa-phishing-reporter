{"version":3,"file":"Tooltip.Display.Example.js","sourceRoot":"../src/","sources":["components/Tooltip/examples/Tooltip.Display.Example.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,8DAAiE;AACjE,kEAA6D;AAE7D;IAA2C,iDAAyB;IAApE;QAAA,qEA+BC;QA9BC,6DAA6D;QAC7D,wFAAwF;QAChF,cAAQ,GAAW,iBAAK,CAAC,cAAc,CAAC,CAAC;QACzC,cAAQ,GAAW,iBAAK,CAAC,cAAc,CAAC,CAAC;;IA2BnD,CAAC;IAzBQ,sCAAM,GAAb;QACE,OAAO,CACL;YACE,0PAGI;YACJ,oBAAC,qBAAW,IAAC,OAAO,EAAC,uBAAuB,EAAC,EAAE,EAAE,IAAI,CAAC,QAAQ,EAAE,YAAY,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE;gBAC3F,gCAAQ,KAAK,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,sBAAoB,IAAI,CAAC,QAAQ,oBAE1D,CACG;YAAC,GAAG;YAClB,oBAAC,qBAAW,IACV,OAAO,EAAC,qBAAqB,EAC7B,MAAM,EAAE,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,cAAc,EAAE,EAAE,EAC7C,EAAE,EAAE,IAAI,CAAC,QAAQ,EACjB,YAAY,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE;gBAE7B,gCAAQ,KAAK,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,sBAAoB,IAAI,CAAC,QAAQ,oBAE1D,CACG,CACV,CACP,CAAC;IACJ,CAAC;IACH,4BAAC;AAAD,CAAC,AA/BD,CAA2C,KAAK,CAAC,SAAS,GA+BzD;AA/BY,sDAAqB","sourcesContent":["import * as React from 'react';\nimport { TooltipHost } from 'office-ui-fabric-react/lib/Tooltip';\nimport { getId } from 'office-ui-fabric-react/lib/Utilities';\n\nexport class TooltipDisplayExample extends React.Component<any, any> {\n  // Use getId() to ensure that the IDs are unique on the page.\n  // (It's also okay to use plain strings without getId() and manually ensure uniqueness.)\n  private _host1Id: string = getId('tooltipHost1');\n  private _host2Id: string = getId('tooltipHost2');\n\n  public render(): JSX.Element {\n    return (\n      <div>\n        <p>\n          In some cases when TooltipHost is wrapping inline-block or inline elements the positioning of the Tooltip may be off so it is\n          recommended to modify the display property of the TooltipHost as in the following example.\n        </p>\n        <TooltipHost content=\"Incorrect positioning\" id={this._host1Id} calloutProps={{ gapSpace: 0 }}>\n          <button style={{ fontSize: '2em' }} aria-describedby={this._host1Id}>\n            Hover Over Me\n          </button>\n        </TooltipHost>{' '}\n        <TooltipHost\n          content=\"Correct positioning\"\n          styles={{ root: { display: 'inline-block' } }}\n          id={this._host2Id}\n          calloutProps={{ gapSpace: 0 }}\n        >\n          <button style={{ fontSize: '2em' }} aria-describedby={this._host2Id}>\n            Hover Over Me\n          </button>\n        </TooltipHost>\n      </div>\n    );\n  }\n}\n"]}
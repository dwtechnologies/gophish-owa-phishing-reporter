{"version":3,"file":"SelectedItemWithContextMenu.js","sourceRoot":"../src/","sources":["components/SelectedItemsList/SelectedPeopleList/Items/SelectedItemWithContextMenu.tsx"],"names":[],"mappings":";;;AAAA,oBAAoB;AACpB,6BAA+B;AAC/B,mBAAmB;AACnB,mDAAkE;AAElE,6DAAkG;AAalG;IAAiD,uDAAwE;IAGvH,qCAAY,KAAwC;QAApD,YACE,kBAAM,KAAK,CAAC,SAEb;QALS,iBAAW,GAAoC,KAAK,CAAC,SAAS,EAAkB,CAAC;QAwBnF,cAAQ,GAAG,UAAC,EAAiC;YACnD,EAAE,CAAC,cAAc,EAAE,CAAC;YACpB,IAAI,KAAI,CAAC,KAAK,CAAC,YAAY,IAAI,CAAC,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE;gBACvD,KAAI,CAAC,KAAK,CAAC,YAAY,CAAC,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;aAC1C;iBAAM;gBACL,KAAI,CAAC,QAAQ,CAAC,EAAE,qBAAqB,EAAE,IAAI,EAAE,CAAC,CAAC;aAChD;QACH,CAAC,CAAC;QAEM,4BAAsB,GAAG,UAAC,EAAS;YACzC,KAAI,CAAC,QAAQ,CAAC,EAAE,qBAAqB,EAAE,KAAK,EAAE,CAAC,CAAC;QAClD,CAAC,CAAC;QA/BA,KAAI,CAAC,KAAK,GAAG,EAAE,qBAAqB,EAAE,KAAK,EAAE,CAAC;;IAChD,CAAC;IAEM,4CAAM,GAAb;QACE,OAAO,CACL,6BAAK,GAAG,EAAE,IAAI,CAAC,WAAW,EAAE,aAAa,EAAE,IAAI,CAAC,QAAQ;YACrD,IAAI,CAAC,KAAK,CAAC,YAAY;YACvB,IAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAClC,oBAAC,+BAAc,IACb,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,EAC3B,kBAAkB,EAAE,IAAI,EACxB,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,EAChC,SAAS,EAAE,IAAI,CAAC,sBAAsB,EACtC,eAAe,EAAE,gCAAe,CAAC,cAAc,GAC/C,CACH,CAAC,CAAC,CAAC,IAAI,CACJ,CACP,CAAC;IACJ,CAAC;IAcH,kCAAC;AAAD,CAAC,AArCD,CAAiD,yBAAa,GAqC7D;AArCY,kEAA2B","sourcesContent":["/* tslint:disable */\nimport * as React from 'react';\n/* tslint:enable */\nimport { BaseComponent, IBaseProps } from '../../../../Utilities';\nimport { IExtendedPersonaProps } from '../SelectedPeopleList';\nimport { ContextualMenu, DirectionalHint, IContextualMenuItem } from '../../../../ContextualMenu';\n\nexport interface IPeoplePickerItemState {\n  contextualMenuVisible: boolean;\n}\n\nexport interface ISelectedItemWithContextMenuProps extends IBaseProps {\n  renderedItem: JSX.Element;\n  beginEditing?: (item: IExtendedPersonaProps) => void;\n  menuItems: IContextualMenuItem[];\n  item: IExtendedPersonaProps;\n}\n\nexport class SelectedItemWithContextMenu extends BaseComponent<ISelectedItemWithContextMenuProps, IPeoplePickerItemState> {\n  protected itemElement: React.RefObject<HTMLDivElement> = React.createRef<HTMLDivElement>();\n\n  constructor(props: ISelectedItemWithContextMenuProps) {\n    super(props);\n    this.state = { contextualMenuVisible: false };\n  }\n\n  public render(): JSX.Element {\n    return (\n      <div ref={this.itemElement} onContextMenu={this._onClick}>\n        {this.props.renderedItem}\n        {this.state.contextualMenuVisible ? (\n          <ContextualMenu\n            items={this.props.menuItems}\n            shouldFocusOnMount={true}\n            target={this.itemElement.current}\n            onDismiss={this._onCloseContextualMenu}\n            directionalHint={DirectionalHint.bottomLeftEdge}\n          />\n        ) : null}\n      </div>\n    );\n  }\n\n  private _onClick = (ev: React.MouseEvent<HTMLElement>): void => {\n    ev.preventDefault();\n    if (this.props.beginEditing && !this.props.item.isValid) {\n      this.props.beginEditing(this.props.item);\n    } else {\n      this.setState({ contextualMenuVisible: true });\n    }\n  };\n\n  private _onCloseContextualMenu = (ev: Event): void => {\n    this.setState({ contextualMenuVisible: false });\n  };\n}\n"]}
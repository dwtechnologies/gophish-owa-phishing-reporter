{"version":3,"file":"Button.Compound.Example.js","sourceRoot":"../src/","sources":["components/Button/examples/Button.Compound.Example.tsx"],"names":[],"mappings":";;AAAA,6BAA+B;AAC/B,iEAA6E;AAQ7E,qBAAqB;AACrB,IAAM,WAAW,GAAiB,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC;AAEzC,QAAA,qBAAqB,GAAiD,UAAA,KAAK;IAC9E,IAAA,yBAAQ,EAAE,uBAAO,CAAW;IAEpC,OAAO,CACL,oBAAC,8BAAK,IAAC,UAAU,QAAC,MAAM,EAAE,WAAW;QACnC,oBAAC,uCAAc,IAAC,aAAa,EAAC,6BAA6B,EAAC,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,eAE/E;QACjB,oBAAC,uCAAc,IAAC,OAAO,QAAC,aAAa,EAAC,6BAA6B,EAAC,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,cAEvF,CACX,CACT,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { CompoundButton, Stack, IStackTokens } from 'office-ui-fabric-react';\n\nexport interface IButtonExampleProps {\n  // These are set based on the toggles shown above the examples (not needed in real code)\n  disabled?: boolean;\n  checked?: boolean;\n}\n\n// Example formatting\nconst stackTokens: IStackTokens = { childrenGap: 40 };\n\nexport const ButtonCompoundExample: React.FunctionComponent<IButtonExampleProps> = props => {\n  const { disabled, checked } = props;\n\n  return (\n    <Stack horizontal tokens={stackTokens}>\n      <CompoundButton secondaryText=\"This is the secondary text.\" disabled={disabled} checked={checked}>\n        Standard\n      </CompoundButton>\n      <CompoundButton primary secondaryText=\"This is the secondary text.\" disabled={disabled} checked={checked}>\n        Primary\n      </CompoundButton>\n    </Stack>\n  );\n};\n"]}
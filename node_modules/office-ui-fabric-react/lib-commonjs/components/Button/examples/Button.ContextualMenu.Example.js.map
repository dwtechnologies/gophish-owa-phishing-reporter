{"version":3,"file":"Button.ContextualMenu.Example.js","sourceRoot":"../src/","sources":["components/Button/examples/Button.ContextualMenu.Example.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,iEAAyG;AAQzG,IAAM,SAAS,GAAyB;IACtC,KAAK,EAAE;QACL;YACE,GAAG,EAAE,cAAc;YACnB,IAAI,EAAE,eAAe;YACrB,SAAS,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE;SAChC;QACD;YACE,GAAG,EAAE,eAAe;YACpB,IAAI,EAAE,gBAAgB;YACtB,SAAS,EAAE,EAAE,QAAQ,EAAE,UAAU,EAAE;SACpC;KACF;IACD,oBAAoB,EAAE,IAAI;CAC3B,CAAC;AACF,IAAM,OAAO,GAAe,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC;AAEnC,QAAA,2BAA2B,GAAiD,UAAA,KAAK;IACpF,IAAA,yBAAQ,EAAE,uBAAO,CAAW;IAEpC,OAAO,CACL,oBAAC,sCAAa,IACZ,IAAI,EAAC,UAAU,EACf,SAAS,EAAE,OAAO,EAClB,SAAS,EAAE,SAAS;QACpB,gDAAgD;QAChD,MAAM,EAAE,QAAQ;QAChB,4EAA4E;QAC5E,WAAW,EAAE,YAAY;QACzB,+FAA+F;QAC/F,wFAAwF;QACxF,qBAAqB;QACrB,kBAAkB,QAClB,QAAQ,EAAE,QAAQ,EAClB,OAAO,EAAE,OAAO,GAChB,CACH,CAAC;AACJ,CAAC,CAAC;AAEF,SAAS,QAAQ,CAAC,KAA2B;IAC3C,wCAAwC;IACxC,OAAO,oBAAC,uCAAc,uBAAK,KAAK,EAAI,CAAC;AACvC,CAAC;AAED,SAAS,YAAY,CAAC,EAA8B;IAClD,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;AAClB,CAAC","sourcesContent":["import * as React from 'react';\nimport { ContextualMenu, DefaultButton, IContextualMenuProps, IIconProps } from 'office-ui-fabric-react';\n\nexport interface IButtonExampleProps {\n  // These are set based on the toggles shown above the examples (not needed in real code)\n  disabled?: boolean;\n  checked?: boolean;\n}\n\nconst menuProps: IContextualMenuProps = {\n  items: [\n    {\n      key: 'emailMessage',\n      text: 'Email message',\n      iconProps: { iconName: 'Mail' }\n    },\n    {\n      key: 'calendarEvent',\n      text: 'Calendar event',\n      iconProps: { iconName: 'Calendar' }\n    }\n  ],\n  directionalHintFixed: true\n};\nconst addIcon: IIconProps = { iconName: 'Add' };\n\nexport const ButtonContextualMenuExample: React.FunctionComponent<IButtonExampleProps> = props => {\n  const { disabled, checked } = props;\n\n  return (\n    <DefaultButton\n      text=\"New item\"\n      iconProps={addIcon}\n      menuProps={menuProps}\n      // Optional callback to customize menu rendering\n      menuAs={_getMenu}\n      // Optional callback to do other actions (besides opening the menu) on click\n      onMenuClick={_onMenuClick}\n      // By default, the ContextualMenu is re-created each time it's shown and destroyed when closed.\n      // Uncomment the next line to hide the ContextualMenu but persist it in the DOM instead.\n      // persistMenu={true}\n      allowDisabledFocus\n      disabled={disabled}\n      checked={checked}\n    />\n  );\n};\n\nfunction _getMenu(props: IContextualMenuProps): JSX.Element {\n  // Customize contextual menu with menuAs\n  return <ContextualMenu {...props} />;\n}\n\nfunction _onMenuClick(ev?: React.SyntheticEvent<any>) {\n  console.log(ev);\n}\n"]}
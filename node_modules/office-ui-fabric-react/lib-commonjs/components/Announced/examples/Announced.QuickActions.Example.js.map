{"version":3,"file":"Announced.QuickActions.Example.js","sourceRoot":"../src/","sources":["components/Announced/examples/Announced.QuickActions.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Announced } from 'office-ui-fabric-react/lib/Announced';\nimport {\n  DetailsList,\n  DetailsListLayoutMode,\n  Selection,\n  IColumn,\n  IDetailsList,\n  IDetailsRowProps,\n  DetailsRow\n} from 'office-ui-fabric-react/lib/DetailsList';\nimport { Async } from 'office-ui-fabric-react/lib/Utilities';\nimport { MarqueeSelection } from 'office-ui-fabric-react/lib/MarqueeSelection';\nimport { IconButton, PrimaryButton } from 'office-ui-fabric-react/lib/Button';\nimport { Dialog, DialogFooter } from 'office-ui-fabric-react/lib/Dialog';\nimport { TextField, ITextField } from 'office-ui-fabric-react/lib/TextField';\n\nconst _items: IAnnouncedQuickActionsExampleItem[] = [];\n\nconst _columns: IColumn[] = ['Name', 'Modified', 'Modified By', 'File Size'].map((name: string) => {\n  const fieldName = name.replace(' ', '').toLowerCase();\n  return {\n    fieldName,\n    name,\n    key: fieldName,\n    minWidth: 100,\n    maxWidth: 200,\n    isResizable: true\n  };\n});\n\nconst _names: string[] = [\n  'Annie Lindqvist',\n  'Aaron Reid',\n  'Alex Lundberg',\n  'Roko Kolar',\n  'Christian Bergqvist',\n  'Valentina Lovric',\n  'Makenzie Sharett'\n];\n\nfunction getMockDateString(): string {\n  return 'Thu Jan 05 2017â€Œ';\n}\n\nexport interface IAnnouncedQuickActionsExampleItem {\n  key: number;\n  name: string;\n  modified: string;\n  modifiedby: string;\n  filesize: string;\n}\n\nexport interface IAnnouncedQuickActionsExampleState {\n  items: IAnnouncedQuickActionsExampleItem[];\n  selectionDetails: {};\n  renameDialogOpen: boolean;\n  dialogContent: JSX.Element | undefined;\n  announced?: JSX.Element;\n}\n\nexport class AnnouncedQuickActionsExample extends React.Component<{}, IAnnouncedQuickActionsExampleState> {\n  private _selection: Selection;\n  private _detailsList = React.createRef<IDetailsList>();\n  private _textField = React.createRef<ITextField>();\n  private _async: Async;\n\n  constructor(props: {}) {\n    super(props);\n\n    this._async = new Async(this);\n\n    // Populate with items for demos.\n    if (_items.length === 0) {\n      for (let i = 0; i < 20; i++) {\n        _items.push({\n          key: i,\n          name: 'Item ' + i,\n          modified: getMockDateString(),\n          modifiedby: _names[Math.floor(Math.random() * _names.length)],\n          filesize: Math.floor(Math.random() * 30).toString() + ' MB'\n        });\n      }\n    }\n\n    this._selection = new Selection({\n      onSelectionChanged: () => this.setState({ selectionDetails: this._getSelectionDetails() })\n    });\n\n    this.state = {\n      items: _items,\n      selectionDetails: this._getSelectionDetails(),\n      renameDialogOpen: false,\n      dialogContent: undefined,\n      announced: undefined\n    };\n  }\n\n  public componentDidUpdate(prevState: IAnnouncedQuickActionsExampleState) {\n    if (prevState.announced !== this.state.announced && this.state.announced !== undefined) {\n      this._async.setTimeout(() => {\n        this.setState({\n          announced: undefined\n        });\n      }, 2000);\n    }\n  }\n\n  public componentWillUnmount(): void {\n    this._async.dispose();\n  }\n\n  public render(): JSX.Element {\n    const { items, renameDialogOpen, dialogContent } = this.state;\n\n    return (\n      <>\n        {this._renderAnnounced()}\n        <MarqueeSelection selection={this._selection}>\n          <DetailsList\n            componentRef={this._detailsList}\n            items={items}\n            columns={_columns}\n            setKey=\"set\"\n            layoutMode={DetailsListLayoutMode.fixedColumns}\n            selection={this._selection}\n            selectionPreservedOnEmptyClick={true}\n            ariaLabelForSelectionColumn=\"Toggle selection\"\n            ariaLabelForSelectAllCheckbox=\"Toggle selection for all items\"\n            onRenderItemColumn={this._onRenderItemColumn}\n            onRenderRow={this._onRenderRow}\n          />\n          <Dialog hidden={!renameDialogOpen} onDismiss={this._closeRenameDialog} closeButtonAriaLabel=\"Close\">\n            {dialogContent}\n          </Dialog>\n        </MarqueeSelection>\n      </>\n    );\n  }\n\n  private _onRenderRow = (props: IDetailsRowProps): JSX.Element => {\n    return <DetailsRow {...props} />;\n  };\n\n  private _onRenderItemColumn = (item: IAnnouncedQuickActionsExampleItem, index: number, column: IColumn) => {\n    const fieldContent = item[column.fieldName as keyof IAnnouncedQuickActionsExampleItem];\n\n    if (column.key === 'name') {\n      return (\n        <div>\n          {fieldContent}\n          <IconButton\n            menuIconProps={{ iconName: 'MoreVertical' }}\n            role=\"button\"\n            aria-haspopup={true}\n            aria-label=\"Show actions\"\n            styles={{ root: { float: 'right', height: 'inherit' } }}\n            menuProps={{\n              items: [\n                {\n                  key: 'delete',\n                  text: 'Delete',\n                  onClick: () => this._deleteItem(index)\n                },\n                {\n                  key: 'rename',\n                  text: 'Rename',\n                  onClick: () => this._renameItem(item, index)\n                }\n              ]\n            }}\n          />\n        </div>\n      );\n    } else {\n      return <span>{fieldContent}</span>;\n    }\n  };\n\n  private _renderAnnounced = (): JSX.Element | undefined => {\n    const { announced } = this.state;\n    return announced;\n  };\n\n  private _deleteItem = (index: number): void => {\n    const items = this.state.items;\n    items.splice(items.indexOf(items[index]), 1);\n\n    this.setState({\n      items: [...items],\n      announced: <Announced message=\"Item deleted\" aria-live=\"assertive\" />\n    });\n    return;\n  };\n\n  private _renameItem(item: IAnnouncedQuickActionsExampleItem, index: number): void {\n    this.setState({\n      renameDialogOpen: true,\n      dialogContent: (\n        <>\n          <TextField componentRef={this._textField} label=\"Rename\" defaultValue={item.name} />\n          <DialogFooter>\n            <PrimaryButton onClick={this._updateItemName.bind(this, index)} text=\"Save\" />\n          </DialogFooter>\n        </>\n      )\n    });\n    return;\n  }\n\n  private _updateItemName(index: number): void {\n    if (this._textField && this._textField.current) {\n      const items = this.state.items;\n      items[index].name = this._textField.current.value || items[index].name;\n      this.setState({\n        renameDialogOpen: false,\n        items: [...items],\n        announced: <Announced message=\"Item renamed\" aria-live=\"assertive\" />\n      });\n    } else {\n      return;\n    }\n  }\n\n  private _closeRenameDialog = (): void => {\n    this.setState({\n      renameDialogOpen: false\n    });\n  };\n\n  private _getSelectionDetails(): string {\n    const selectionCount = this._selection.getSelectedCount();\n\n    switch (selectionCount) {\n      case 0:\n        return 'No items selected';\n      case 1:\n        return '1 item selected: ' + (this._selection.getSelection()[0] as any).name;\n      default:\n        return `${selectionCount} items selected`;\n    }\n  }\n}\n"]}
{"version":3,"file":"Announced.SearchResults.Example.js","sourceRoot":"../src/","sources":["components/Announced/examples/Announced.SearchResults.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Announced } from 'office-ui-fabric-react/lib/Announced';\nimport { TagPicker, ITag } from 'office-ui-fabric-react/lib/Pickers';\nimport { Text } from 'office-ui-fabric-react/lib/Text';\nimport { IStackTokens, Stack } from 'office-ui-fabric-react/lib/Stack';\nimport { Async } from 'office-ui-fabric-react/lib/Utilities';\n\nconst _testTags: ITag[] = [\n  'black',\n  'blue',\n  'brown',\n  'cyan',\n  'green',\n  'magenta',\n  'mauve',\n  'orange',\n  'pink',\n  'purple',\n  'red',\n  'rose',\n  'violet',\n  'white',\n  'yellow'\n].map(item => ({ key: item, name: item }));\n\nexport interface IAnnouncedSearchResultsExampleState {\n  seconds: number;\n  numberOfSuggestions: number;\n  emptyInput: boolean;\n}\n\nexport class AnnouncedSearchResultsExample extends React.Component<{}, IAnnouncedSearchResultsExampleState> {\n  private _async: Async;\n\n  constructor(props: {}) {\n    super(props);\n\n    this._async = new Async(this);\n\n    this.state = {\n      seconds: 0,\n      numberOfSuggestions: 0,\n      emptyInput: true\n    };\n  }\n\n  public render(): JSX.Element {\n    const stackTokens: IStackTokens = { childrenGap: 10 };\n\n    return (\n      <Stack tokens={stackTokens}>\n        <Text>\n          Turn on Narrator and type a letter or two into the TagPicker. This picker will filter added items from the search suggestions.\n        </Text>\n        {this._renderAnnounced()}\n        <TagPicker\n          onResolveSuggestions={this._onFilterChanged}\n          getTextFromItem={this._getTextFromItem}\n          pickerSuggestionsProps={{\n            suggestionsHeaderText: 'Suggested Tags',\n            noResultsFoundText: 'No Color Tags Found' // this alert handles the case when there are no suggestions available\n          }}\n          inputProps={{\n            'aria-label': 'Tag Picker'\n          }}\n        />\n      </Stack>\n    );\n  }\n\n  public componentDidMount() {\n    this._async.setInterval(() => {\n      this.setState({ seconds: this.state.seconds + 1 });\n    }, 1000);\n  }\n\n  public componentWillUnmount() {\n    this._async.dispose();\n  }\n\n  private _renderAnnounced(): JSX.Element | undefined {\n    const { numberOfSuggestions, emptyInput } = this.state;\n\n    if (!emptyInput) {\n      return (\n        <Announced\n          message={numberOfSuggestions === 1 ? `${numberOfSuggestions} Color Tag Found` : `${numberOfSuggestions} Color Tags Found`}\n        />\n      );\n    }\n  }\n\n  private _getTextFromItem = (item: ITag): string => {\n    return item.name;\n  };\n\n  private _onFilterChanged = (filterText: string, tagList: ITag[]): ITag[] => {\n    if (filterText && this.state.emptyInput) {\n      this.setState({ emptyInput: false });\n    } else if (!filterText && !this.state.emptyInput) {\n      this.setState({ emptyInput: true });\n    }\n\n    const filteredTags = filterText\n      ? _testTags\n          .filter(tag => tag.name.toLowerCase().indexOf(filterText.toLowerCase()) === 0)\n          .filter(tag => !this._listContainsDocument(tag, tagList))\n      : [];\n\n    if (filteredTags.length !== this.state.numberOfSuggestions) {\n      this.setState({ numberOfSuggestions: filteredTags.length });\n    }\n\n    return filteredTags;\n  };\n\n  private _listContainsDocument(tag: ITag, tagList: ITag[]) {\n    if (!tagList || !tagList.length || tagList.length === 0) {\n      return false;\n    }\n    return tagList.filter(compareTag => compareTag.key === tag.key).length > 0;\n  }\n}\n"]}
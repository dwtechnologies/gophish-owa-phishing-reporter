{"version":3,"file":"Panel.PreventDefault.Example.js","sourceRoot":"../src/","sources":["components/Panel/examples/Panel.PreventDefault.Example.tsx"],"names":[],"mappings":";;;AAAA,kEAAgE;AAChE,4DAAkE;AAClE,0DAAoE;AACpE,4DAA2D;AAC3D,6BAA+B;AAO/B;IAAgD,sDAAqD;IAArG;QAAA,qEA2CC;QA1CQ,WAAK,GAAG;YACb,SAAS,EAAE,KAAK;YAChB,QAAQ,EAAE,IAAI;SACf,CAAC;QAgBM,gBAAU,GAAG,UAAC,EAA4C;YAChE,IAAI,EAAE,CAAC,OAAO,KAAK,oBAAQ,CAAC,MAAM,EAAE;gBAClC,EAAE,CAAC,cAAc,EAAE,CAAC;gBACpB,EAAE,CAAC,eAAe,EAAE,CAAC;aACtB;QACH,CAAC,CAAC;QAEM,qBAAe,GAAG;YACxB,KAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAE,CAAC,KAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;QACpD,CAAC,CAAC;QAEM,gBAAU,GAAG,UAAC,EAAqC;YACzD,IAAI,EAAE,IAAI,EAAE,CAAC,OAAO,KAAK,oBAAQ,CAAC,MAAM,IAAI,CAAC,KAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;gBAChE,EAAE,CAAC,cAAc,EAAE,CAAC;gBACpB,OAAO;aACR;YAED,KAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;QACtC,CAAC,CAAC;QAEM,gBAAU,GAAG;YACnB,KAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;QACrC,CAAC,CAAC;;IACJ,CAAC;IArCQ,2CAAM,GAAb;QACE,OAAO,CACL;YACE,oBAAC,sBAAa,IAAC,aAAa,EAAC,wBAAwB,EAAC,OAAO,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,EAAC,YAAY,GAAG;YACpG,oBAAC,aAAK,IAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,IAAI,EAAE,iBAAS,CAAC,cAAc,EAAE,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE,UAAU,EAAC,OAAO;gBACjH,gGAAuE;gBACvE,kCAAU,SAAS,EAAE,IAAI,CAAC,UAAU,GAAI;gBAExC,oBAAC,eAAM,IAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,QAAQ,EAAE,IAAI,CAAC,eAAe,EAAE,KAAK,EAAC,8BAA8B,GAAG,CACvG,CACJ,CACP,CAAC;IACJ,CAAC;IAyBH,iCAAC;AAAD,CAAC,AA3CD,CAAgD,KAAK,CAAC,SAAS,GA2C9D;AA3CY,gEAA0B","sourcesContent":["import { KeyCodes } from 'office-ui-fabric-react/lib/Utilities';\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport { Panel, PanelType } from 'office-ui-fabric-react/lib/Panel';\nimport { Toggle } from 'office-ui-fabric-react/lib/Toggle';\nimport * as React from 'react';\n\nexport interface IPanelPreventDefaultExampleState {\n  showPanel: boolean;\n  allowEsc: boolean;\n}\n\nexport class PanelPreventDefaultExample extends React.Component<{}, IPanelPreventDefaultExampleState> {\n  public state = {\n    showPanel: false,\n    allowEsc: true\n  };\n\n  public render() {\n    return (\n      <div>\n        <DefaultButton secondaryText=\"Opens the Sample Panel\" onClick={this._showPanel} text=\"Open Panel\" />\n        <Panel isOpen={this.state.showPanel} type={PanelType.smallFixedNear} onDismiss={this._hidePanel} headerText=\"Panel\">\n          <div>Hitting escape inside the text area will not close the Panel</div>\n          <textarea onKeyDown={this._onKeyDown} />\n\n          <Toggle checked={this.state.allowEsc} onChange={this._toggleAllowEsc} label=\"Allow ESC key to close panel\" />\n        </Panel>\n      </div>\n    );\n  }\n\n  private _onKeyDown = (ev: React.KeyboardEvent<HTMLTextAreaElement>) => {\n    if (ev.keyCode === KeyCodes.escape) {\n      ev.preventDefault();\n      ev.stopPropagation();\n    }\n  };\n\n  private _toggleAllowEsc = () => {\n    this.setState({ allowEsc: !this.state.allowEsc });\n  };\n\n  private _hidePanel = (ev?: React.KeyboardEvent<HTMLElement>) => {\n    if (ev && ev.keyCode === KeyCodes.escape && !this.state.allowEsc) {\n      ev.preventDefault();\n      return;\n    }\n\n    this.setState({ showPanel: false });\n  };\n\n  private _showPanel = (): void => {\n    this.setState({ showPanel: true });\n  };\n}\n"]}
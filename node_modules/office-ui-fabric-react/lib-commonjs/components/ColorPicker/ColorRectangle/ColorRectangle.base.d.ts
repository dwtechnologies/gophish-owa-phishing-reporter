import * as React from 'react';
import { IColor } from '../../../utilities/color/interfaces';
import { IColorRectangleProps, IColorRectangle } from './ColorRectangle.types';
export interface IColorRectangleState {
    color: IColor;
}
/**
 * {@docCategory ColorPicker}
 */
export declare class ColorRectangleBase extends React.Component<IColorRectangleProps, IColorRectangleState> implements IColorRectangle {
    static defaultProps: {
        minSize: number;
    };
    private _events;
    private _root;
    constructor(props: IColorRectangleProps);
    readonly color: IColor;
    UNSAFE_componentWillReceiveProps(newProps: IColorRectangleProps): void;
    componentWillUnmount(): void;
    render(): JSX.Element;
    private _onMouseDown;
    private _onMouseMove;
    private _disableEvents;
}
/**
 * Exported for testing only.
 * @internal
 */
export declare function _getNewColor(ev: React.MouseEvent<HTMLElement>, prevColor: IColor, root: HTMLElement): IColor | undefined;

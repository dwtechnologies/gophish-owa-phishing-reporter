{"version":3,"file":"ColorPicker.types.js","sourceRoot":"../src/","sources":["components/ColorPicker/ColorPicker.types.ts"],"names":[],"mappings":"","sourcesContent":["import * as React from 'react';\nimport { ITheme, IStyle } from '../../Styling';\nimport { IRefObject, IStyleFunctionOrObject } from '../../Utilities';\nimport { IColor } from '../../utilities/color/interfaces';\n\n/**\n * {@docCategory ColorPicker}\n */\nexport interface IColorPicker {\n  /** The currently selected color. */\n  color: IColor;\n}\n\n/**\n * {@docCategory ColorPicker}\n */\nexport interface IColorPickerProps {\n  /**\n   * Gets the component ref.\n   */\n  componentRef?: IRefObject<IColorPicker>;\n\n  /**\n   * Object or CSS-compatible string to describe the color.\n   */\n  color: IColor | string;\n\n  /**\n   * Callback for when the user changes the color.\n   * (Not called when the color is changed via props.)\n   */\n  onChange?: (ev: React.SyntheticEvent<HTMLElement>, color: IColor) => void;\n\n  /**\n   * Whether to hide the alpha control slider.\n   */\n  alphaSliderHidden?: boolean;\n\n  /**\n   * Label for the hex text field.\n   * @defaultvalue Hex\n   */\n  hexLabel?: string;\n\n  /**\n   * Label for the red text field.\n   * @defaultvalue Red\n   */\n  redLabel?: string;\n\n  /**\n   * Label for the green text field.\n   * @defaultvalue Green\n   */\n  greenLabel?: string;\n\n  /**\n   * Label for the blue text field.\n   * @defaultvalue Blue\n   */\n  blueLabel?: string;\n\n  /**\n   * Label for the alpha textfield.\n   * @defaultvalue Alpha\n   */\n  alphaLabel?: string;\n\n  /**\n   * Additional CSS class(es) to apply to the ColorPicker.\n   */\n  className?: string;\n\n  /**\n   * Theme (provided through customization).\n   */\n  theme?: ITheme;\n\n  /**\n   * Call to provide customized styling that will layer on top of the variant rules.\n   */\n  styles?: IStyleFunctionOrObject<IColorPickerStyleProps, IColorPickerStyles>;\n\n  /**\n   * Whether to show color preview box.\n   * @defaultvalue false\n   */\n  showPreview?: boolean;\n}\n\n/**\n * {@docCategory ColorPicker}\n */\nexport interface IColorPickerStyleProps {\n  /**\n   * Theme (provided through customization).\n   */\n  theme: ITheme;\n\n  /**\n   * Additional CSS class(es) to apply to the ColorPicker.\n   */\n  className?: string;\n}\n\n/**\n * {@docCategory ColorPicker}\n */\nexport interface IColorPickerStyles {\n  /**\n   * Style set for the root element.\n   */\n  root?: IStyle;\n\n  /**\n   * Style set for the panel element that contains the color rectangle, color sliders and inputs .\n   */\n  panel?: IStyle;\n\n  /**\n   * Style set for the panel element that contains the color rectangle\n   */\n  colorRectangle?: IStyle;\n\n  /**\n   * Style set for the table element that contains the color sliders and inputs.\n   */\n  table?: IStyle;\n\n  /**\n   * Style set for the table header that contains the labels.\n   */\n  tableHeader?: IStyle;\n\n  /**\n   * Style set for the table cell that contains the hex label.\n   */\n  tableHexCell?: IStyle;\n\n  /**\n   * Style set for each text field input.\n   */\n  input?: IStyle;\n\n  /**\n   * Color Square\n   */\n  colorSquare?: IStyle;\n\n  /**\n   * flexContainer\n   */\n  flexContainer?: IStyle;\n\n  /**\n   * flexSlider\n   */\n  flexSlider?: IStyle;\n\n  /**\n   * flexPreviewBox\n   */\n  flexPreviewBox?: IStyle;\n}\n"]}
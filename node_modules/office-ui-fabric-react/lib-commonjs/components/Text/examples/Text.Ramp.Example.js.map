{"version":3,"file":"Text.Ramp.Example.js","sourceRoot":"../src/","sources":["components/Text/examples/Text.Ramp.Example.tsx"],"names":[],"mappings":";;;AAAA,wDAAuD;AAEvD,sEAOgD;AAChD,6BAA+B;AAE/B,IAAM,QAAQ,GAAG,+CAA+C,CAAC;AAMjE,IAAM,QAAQ,GAAkC;IAC9C,EAAE,IAAI,EAAE,MAAM,EAAE;IAChB,EAAE,IAAI,EAAE,QAAQ,EAAE;IAClB,EAAE,IAAI,EAAE,OAAO,EAAE;IACjB,EAAE,IAAI,EAAE,WAAW,EAAE;IACrB,EAAE,IAAI,EAAE,QAAQ,EAAE;IAClB,EAAE,IAAI,EAAE,YAAY,EAAE;IACtB,EAAE,IAAI,EAAE,OAAO,EAAE;IACjB,EAAE,IAAI,EAAE,QAAQ,EAAE;IAClB,EAAE,IAAI,EAAE,SAAS,EAAE;IACnB,EAAE,IAAI,EAAE,MAAM,EAAE;CACjB,CAAC;AAYF;IAAqC,2CAA0C;IAI7E,yBAAY,KAAS;QAArB,YACE,kBAAM,KAAK,CAAC,SAwBb;QAtBC,KAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QAEpB,QAAQ,CAAC,OAAO,CAAC,UAAC,OAAoC,EAAE,KAAa;YACnE,OAAA,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC;gBAClB,GAAG,EAAE,OAAO,CAAC,IAAI,GAAG,KAAK;gBACzB,OAAO,EAAE,OAAO,CAAC,IAAI;gBACrB,OAAO,EAAE,CACP,oBAAC,WAAI,IAAC,GAAG,EAAE,OAAO,CAAC,IAAI,GAAG,MAAM,GAAG,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC,IAAI,EAAE,MAAM,QAAC,KAAK,UAC1E,QAAQ,CACJ,CACR;aACF,CAAC;QARF,CAQE,CACH,CAAC;QAEF,KAAI,CAAC,QAAQ,GAAG;YACd,EAAE,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,EAAE,WAAW,EAAE,IAAI,EAAE;YAC1G,EAAE,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE;SAC5G,CAAC;QAEF,KAAI,CAAC,KAAK,GAAG;YACX,KAAK,EAAE,KAAI,CAAC,SAAS;SACtB,CAAC;;IACJ,CAAC;IAEM,gCAAM,GAAb;QACU,IAAA,wBAAK,CAAgB;QAE7B,OAAO,CACL,oBAAC,yBAAW,IACV,KAAK,EAAE,KAAK,EACZ,OAAO,EAAE,IAAI,CAAC,QAAQ,EACtB,MAAM,EAAC,KAAK,EACZ,aAAa,EAAE,2BAAa,CAAC,IAAI,EACjC,UAAU,EAAE,mCAAqB,CAAC,YAAY,EAC9C,WAAW,EAAE,IAAI,CAAC,iBAAiB,GACnC,CACH,CAAC;IACJ,CAAC;IAEO,2CAAiB,GAAzB,UAA0B,KAAuB;QAC/C,OAAO,oBAAC,wBAAU,uBAAK,KAAK,IAAE,MAAM,EAAE,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE,EAAE,IAAI,CAAC;IAC3E,CAAC;IACH,sBAAC;AAAD,CAAC,AAjDD,CAAqC,KAAK,CAAC,SAAS,GAiDnD;AAjDY,0CAAe","sourcesContent":["import { Text } from 'office-ui-fabric-react/lib/Text';\nimport { IFontStyles } from 'office-ui-fabric-react/lib/Styling';\nimport {\n  DetailsList,\n  IColumn,\n  DetailsListLayoutMode,\n  SelectionMode,\n  DetailsRow,\n  IDetailsRowProps\n} from 'office-ui-fabric-react/lib/DetailsList';\nimport * as React from 'react';\n\nconst TestText = 'The quick brown fox jumped over the lazy dog.';\n\ninterface ISetting<TType> {\n  name: TType;\n}\n\nconst Variants: ISetting<keyof IFontStyles>[] = [\n  { name: 'tiny' },\n  { name: 'xSmall' },\n  { name: 'small' },\n  { name: 'smallPlus' },\n  { name: 'medium' },\n  { name: 'mediumPlus' },\n  { name: 'large' },\n  { name: 'xLarge' },\n  { name: 'xxLarge' },\n  { name: 'mega' }\n];\n\nexport interface ITextRampExampleItem {\n  key: string;\n  variant: string;\n  example: JSX.Element;\n}\n\nexport interface ITextRampExampleState {\n  items: ITextRampExampleItem[];\n}\n\nexport class TextRampExample extends React.Component<{}, ITextRampExampleState> {\n  private _allItems: ITextRampExampleItem[];\n  private _columns: IColumn[];\n\n  constructor(props: {}) {\n    super(props);\n\n    this._allItems = [];\n\n    Variants.forEach((setting: ISetting<keyof IFontStyles>, index: number) =>\n      this._allItems.push({\n        key: setting.name + index,\n        variant: setting.name,\n        example: (\n          <Text key={setting.name + 'text' + index} variant={setting.name} nowrap block>\n            {TestText}\n          </Text>\n        )\n      })\n    );\n\n    this._columns = [\n      { key: 'column1', name: 'Variant', fieldName: 'variant', minWidth: 100, maxWidth: 150, isResizable: true },\n      { key: 'column2', name: 'Example', fieldName: 'example', minWidth: 200, maxWidth: 1600, isResizable: true }\n    ];\n\n    this.state = {\n      items: this._allItems\n    };\n  }\n\n  public render(): JSX.Element {\n    const { items } = this.state;\n\n    return (\n      <DetailsList\n        items={items}\n        columns={this._columns}\n        setKey=\"set\"\n        selectionMode={SelectionMode.none}\n        layoutMode={DetailsListLayoutMode.fixedColumns}\n        onRenderRow={this._renderDetailsRow}\n      />\n    );\n  }\n\n  private _renderDetailsRow(props: IDetailsRowProps): JSX.Element {\n    return <DetailsRow {...props} styles={{ root: { color: 'inherit' } }} />;\n  }\n}\n"]}
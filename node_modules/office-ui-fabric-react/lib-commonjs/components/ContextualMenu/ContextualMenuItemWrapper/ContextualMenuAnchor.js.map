{"version":3,"file":"ContextualMenuAnchor.js","sourceRoot":"../src/","sources":["components/ContextualMenu/ContextualMenuItemWrapper/ContextualMenuAnchor.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,gDAAuF;AACvF,yEAAwE;AACxE,kDAAiD;AACjD,iEAAqF;AACrF,4DAA2D;AAI3D;IAA0C,gDAAyB;IAAnE;QAAA,qEAmGC;QAlGS,aAAO,GAAG,KAAK,CAAC,SAAS,EAAqB,CAAC;QAE/C,uCAAiC,GAAG,2BAAe,CAAC,UAAC,WAAyB;YACpF,4BACK,WAAW,IACd,OAAO,EAAE,IAAI,IACb;QACJ,CAAC,CAAC,CAAC;QAiFO,uBAAiB,GAAG;YAC5B,OAAO,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC;QACjE,CAAC,CAAC;QAEQ,kBAAY,GAAG,UAAC,EAAiC;YACnD,IAAA,gBAAkC,EAAhC,cAAI,EAAE,4BAA0B,CAAC;YACzC,IAAI,WAAW,EAAE;gBACf,WAAW,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;aACvB;QACH,CAAC,CAAC;;IACJ,CAAC;IAzFQ,qCAAM,GAAb;QAAA,iBA6EC;QA5EO,IAAA,eAcQ,EAbZ,cAAI,EACJ,0BAAU,EACV,gBAAK,EACL,gDAAqB,EACrB,kCAAc,EACd,gCAAa,EACb,sBAAQ,EACR,4BAA2D,EAA3D,+EAA2D,EAC3D,4CAAmB,EACnB,4BAAW,EACX,4BAAW,EACX,kCAAc,EACd,4BACY,CAAC;QAEf,IAAI,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC;QACzB,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,KAAK,QAAQ,EAAE;YACzD,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,8BAA8B,CAAC,CAAC,qCAAqC;SAC1G;QAED,IAAM,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAC3C,IAAM,cAAc,GAAG,kBAAU,CAAC,IAAI,CAAC,CAAC;QACxC,IAAM,WAAW,GAAG,0BAAc,CAA0C,IAAI,EAAE,4BAAgB,CAAC,CAAC;QACpG,IAAM,QAAQ,GAAG,sBAAc,CAAC,IAAI,CAAC,CAAC;QAC9B,IAAA,0BAAS,CAAU;QAErB,IAAA,8BAAW,CAAU;QAC3B,IAAI,WAAW,IAAI,cAAc,EAAE;YACjC,WAAW,GAAG,IAAI,CAAC,iCAAiC,CAAC,WAAW,CAAC,CAAC;SACnE;QAED,OAAO,CACL;YACE,oBAAC,uBAAU,IAAC,WAAW,EAAE,IAAI,CAAC,WAAW,EAAE,eAAe,EAAE,WAAW,CAAC,kBAAkB,CAAC,EAAE,QAAQ,EAAE,QAAQ,IAC5G,UAAC,gBAAkC,IAAkB,OAAA,CACpD,8CACM,WAAW,EACX,gBAAgB,IACpB,GAAG,EAAE,KAAI,CAAC,OAAO,EACjB,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,MAAM,EAAE,IAAI,CAAC,MAAM,EACnB,GAAG,EAAE,SAAS,EACd,SAAS,EAAE,UAAU,CAAC,IAAI,EAC1B,IAAI,EAAC,UAAU,eACJ,IAAI,CAAC,GAAG,KAAK,mBAAmB,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,mBACpD,cAAc,IAAI,SAAS,mBAC3B,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,KAAK,mBAAmB,CAAC,CAAC,CAAC,SAAS,mBAC7D,qBAAqB,GAAG,CAAC,kBAC1B,cAAc,mBACb,sBAAc,CAAC,IAAI,CAAC,EACnC,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,OAAO,EAAE,KAAI,CAAC,YAAY,EAC1B,YAAY,EAAE,KAAI,CAAC,iBAAiB,EACpC,YAAY,EAAE,KAAI,CAAC,iBAAiB,EACpC,WAAW,EAAE,KAAI,CAAC,gBAAgB,EAClC,SAAS,EAAE,cAAc,CAAC,CAAC,CAAC,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC,SAAS;gBAE3D,oBAAC,gBAAgB,qBACf,YAAY,EAAE,IAAI,CAAC,YAAY,EAC/B,IAAI,EAAE,IAAI,EACV,UAAU,EAAE,UAAU,EACtB,KAAK,EAAE,KAAK,EACZ,gBAAgB,EAAE,aAAa,IAAI,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,EACxE,QAAQ,EAAE,QAAQ,EAClB,WAAW,EAAE,WAAW,EACxB,cAAc,EAAE,cAAc,EAC9B,WAAW,EAAE,WAAW,EACxB,gBAAgB,EAAE,KAAI,CAAC,iBAAiB,IACpC,SAAS,EACb,CACA,CACL,EArCqD,CAqCrD,CACU,CACT,CACP,CAAC;IACJ,CAAC;IAYH,2BAAC;AAAD,CAAC,AAnGD,CAA0C,qDAAyB,GAmGlE;AAnGY,oDAAoB","sourcesContent":["import * as React from 'react';\nimport { anchorProperties, getNativeProps, memoizeFunction } from '../../../Utilities';\nimport { ContextualMenuItemWrapper } from './ContextualMenuItemWrapper';\nimport { KeytipData } from '../../../KeytipData';\nimport { isItemDisabled, hasSubmenu } from '../../../utilities/contextualMenu/index';\nimport { ContextualMenuItem } from '../ContextualMenuItem';\nimport { IKeytipDataProps } from '../../KeytipData/KeytipData.types';\nimport { IKeytipProps } from '../../Keytip/Keytip.types';\n\nexport class ContextualMenuAnchor extends ContextualMenuItemWrapper {\n  private _anchor = React.createRef<HTMLAnchorElement>();\n\n  private _getMemoizedMenuButtonKeytipProps = memoizeFunction((keytipProps: IKeytipProps) => {\n    return {\n      ...keytipProps,\n      hasMenu: true\n    };\n  });\n\n  public render() {\n    const {\n      item,\n      classNames,\n      index,\n      focusableElementIndex,\n      totalItemCount,\n      hasCheckmarks,\n      hasIcons,\n      contextualMenuItemAs: ChildrenRenderer = ContextualMenuItem,\n      expandedMenuItemKey,\n      onItemClick,\n      openSubMenu,\n      dismissSubMenu,\n      dismissMenu\n    } = this.props;\n\n    let anchorRel = item.rel;\n    if (item.target && item.target.toLowerCase() === '_blank') {\n      anchorRel = anchorRel ? anchorRel : 'nofollow noopener noreferrer'; // Safe default to prevent tabjacking\n    }\n\n    const subMenuId = this._getSubMenuId(item);\n    const itemHasSubmenu = hasSubmenu(item);\n    const nativeProps = getNativeProps<React.HTMLAttributes<HTMLAnchorElement>>(item, anchorProperties);\n    const disabled = isItemDisabled(item);\n    const { itemProps } = item;\n\n    let { keytipProps } = item;\n    if (keytipProps && itemHasSubmenu) {\n      keytipProps = this._getMemoizedMenuButtonKeytipProps(keytipProps);\n    }\n\n    return (\n      <div>\n        <KeytipData keytipProps={item.keytipProps} ariaDescribedBy={nativeProps['aria-describedby']} disabled={disabled}>\n          {(keytipAttributes: IKeytipDataProps): JSX.Element => (\n            <a\n              {...nativeProps}\n              {...keytipAttributes}\n              ref={this._anchor}\n              href={item.href}\n              target={item.target}\n              rel={anchorRel}\n              className={classNames.root}\n              role=\"menuitem\"\n              aria-owns={item.key === expandedMenuItemKey ? subMenuId : undefined}\n              aria-haspopup={itemHasSubmenu || undefined}\n              aria-expanded={itemHasSubmenu ? item.key === expandedMenuItemKey : undefined}\n              aria-posinset={focusableElementIndex + 1}\n              aria-setsize={totalItemCount}\n              aria-disabled={isItemDisabled(item)}\n              style={item.style}\n              onClick={this._onItemClick}\n              onMouseEnter={this._onItemMouseEnter}\n              onMouseLeave={this._onItemMouseLeave}\n              onMouseMove={this._onItemMouseMove}\n              onKeyDown={itemHasSubmenu ? this._onItemKeyDown : undefined}\n            >\n              <ChildrenRenderer\n                componentRef={item.componentRef}\n                item={item}\n                classNames={classNames}\n                index={index}\n                onCheckmarkClick={hasCheckmarks && onItemClick ? onItemClick : undefined}\n                hasIcons={hasIcons}\n                openSubMenu={openSubMenu}\n                dismissSubMenu={dismissSubMenu}\n                dismissMenu={dismissMenu}\n                getSubmenuTarget={this._getSubmenuTarget}\n                {...itemProps}\n              />\n            </a>\n          )}\n        </KeytipData>\n      </div>\n    );\n  }\n\n  protected _getSubmenuTarget = (): HTMLElement | undefined => {\n    return this._anchor.current ? this._anchor.current : undefined;\n  };\n\n  protected _onItemClick = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { item, onItemClick } = this.props;\n    if (onItemClick) {\n      onItemClick(item, ev);\n    }\n  };\n}\n"]}
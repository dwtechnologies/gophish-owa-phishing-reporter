{"version":3,"file":"ContextualMenu.Checkmarks.Example.js","sourceRoot":"../src/","sources":["components/ContextualMenu/examples/ContextualMenu.Checkmarks.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { IContextualMenuItem, ContextualMenuItemType, DirectionalHint } from 'office-ui-fabric-react/lib/ContextualMenu';\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport './ContextualMenuExample.scss';\n\nexport interface IContextualMenuMultiselectExampleState {\n  selection?: { [key: string]: boolean };\n}\n\nconst keys: string[] = [\n  'newItem',\n  'share',\n  'mobile',\n  'enablePrint',\n  'enableMusic',\n  'newSub',\n  'emailMessage',\n  'calendarEvent',\n  'disabledNewSub',\n  'disabledEmailMessage',\n  'disabledCalendarEvent',\n  'splitButtonSubMenuLeftDirection',\n  'emailMessageLeft',\n  'calendarEventLeft',\n  'disabledPrimarySplit'\n];\n\nexport class ContextualMenuCheckmarksExample extends React.Component<{}, IContextualMenuMultiselectExampleState> {\n  constructor(props: {}) {\n    super(props);\n\n    this._onToggleSelect = this._onToggleSelect.bind(this);\n\n    this.state = {\n      selection: {}\n    };\n  }\n\n  public render(): JSX.Element {\n    const { selection } = this.state;\n\n    return (\n      <DefaultButton\n        text=\"Click for ContextualMenu\"\n        menuProps={{\n          shouldFocusOnMount: true,\n          items: [\n            {\n              key: keys[0],\n              text: 'New',\n              canCheck: true,\n              isChecked: selection![keys[0]],\n              onClick: this._onToggleSelect\n            },\n            {\n              key: keys[1],\n              text: 'Share',\n              canCheck: true,\n              isChecked: selection![keys[1]],\n              onClick: this._onToggleSelect\n            },\n            {\n              key: keys[2],\n              text: 'Mobile',\n              canCheck: true,\n              isChecked: selection![keys[2]],\n              onClick: this._onToggleSelect\n            },\n            {\n              key: 'divider_1',\n              itemType: ContextualMenuItemType.Divider\n            },\n\n            {\n              key: keys[3],\n              text: 'Print',\n              canCheck: true,\n              isChecked: selection![keys[3]],\n              onClick: this._onToggleSelect\n            },\n            {\n              key: keys[4],\n              text: 'Music',\n              canCheck: true,\n              isChecked: selection![keys[4]],\n              onClick: this._onToggleSelect\n            },\n            {\n              key: keys[5],\n              iconProps: {\n                iconName: 'MusicInCollectionFill'\n              },\n              subMenuProps: {\n                items: [\n                  {\n                    key: keys[6],\n                    text: 'Email message',\n                    canCheck: true,\n                    isChecked: selection![keys[6]],\n                    onClick: this._onToggleSelect\n                  },\n                  {\n                    key: keys[7],\n                    text: 'Calendar event',\n                    canCheck: true,\n                    isChecked: selection![keys[7]],\n                    onClick: this._onToggleSelect\n                  }\n                ]\n              },\n              text: 'Split Button',\n              canCheck: true,\n              isChecked: selection![keys[5]],\n              split: true,\n              onClick: this._onToggleSelect\n            },\n            {\n              key: keys[8],\n              iconProps: {\n                iconName: 'MusicInCollectionFill'\n              },\n              subMenuProps: {\n                items: [\n                  {\n                    key: keys[9],\n                    text: 'Email message',\n                    canCheck: true,\n                    isChecked: selection![keys[9]],\n                    onClick: this._onToggleSelect\n                  },\n                  {\n                    key: keys[10],\n                    text: 'Calendar event',\n                    canCheck: true,\n                    isChecked: selection![keys[10]],\n                    onClick: this._onToggleSelect\n                  }\n                ]\n              },\n              text: 'Split Button',\n              canCheck: true,\n              isChecked: selection![keys[8]],\n              split: true,\n              onClick: this._onToggleSelect,\n              disabled: true\n            },\n            {\n              key: keys[11],\n              iconProps: {\n                iconName: 'MusicInCollectionFill'\n              },\n              subMenuProps: {\n                directionalHint: DirectionalHint.leftCenter,\n                items: [\n                  {\n                    key: keys[12],\n                    text: 'Email message',\n                    canCheck: true,\n                    isChecked: selection![keys[12]],\n                    onClick: this._onToggleSelect\n                  },\n                  {\n                    key: keys[13],\n                    text: 'Calendar event',\n                    canCheck: true,\n                    isChecked: selection![keys[13]],\n                    onClick: this._onToggleSelect\n                  }\n                ]\n              },\n              text: 'Split Button Left Menu',\n              canCheck: true,\n              isChecked: selection![keys[11]],\n              split: true,\n              onClick: this._onToggleSelect\n            },\n            {\n              key: keys[12],\n              iconProps: {\n                iconName: 'MusicInCollectionFill'\n              },\n              subMenuProps: {\n                items: [\n                  {\n                    key: keys[12],\n                    name: 'Email message',\n                    canCheck: true,\n                    isChecked: selection![keys[12]],\n                    onClick: this._onToggleSelect\n                  }\n                ]\n              },\n              name: 'Split Button Disabled Primary',\n              split: true,\n              primaryDisabled: true\n            }\n          ]\n        }}\n      />\n    );\n  }\n\n  private _onToggleSelect(ev?: React.MouseEvent<HTMLButtonElement>, item?: IContextualMenuItem): void {\n    const { selection } = this.state;\n    ev!.preventDefault();\n    selection![item!.key] = !selection![item!.key];\n\n    this.setState({\n      selection: selection\n    });\n  }\n}\n"]}
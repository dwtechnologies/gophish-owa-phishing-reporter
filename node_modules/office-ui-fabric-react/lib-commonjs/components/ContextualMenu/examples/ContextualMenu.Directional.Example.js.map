{"version":3,"file":"ContextualMenu.Directional.Example.js","sourceRoot":"../src/","sources":["components/ContextualMenu/examples/ContextualMenu.Directional.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport { Checkbox } from 'office-ui-fabric-react/lib/Checkbox';\nimport { DirectionalHint, ContextualMenuItemType } from 'office-ui-fabric-react/lib/ContextualMenu';\nimport { Dropdown, IDropdownOption } from 'office-ui-fabric-react/lib/Dropdown';\nimport { getRTL } from 'office-ui-fabric-react/lib/Utilities';\nimport './ContextualMenuExample.scss';\n\nexport interface IContextualMenuDirectionalExampleState {\n  directionalHint?: DirectionalHint;\n  directionalHintForRTL?: DirectionalHint;\n  useDirectionalHintForRtl?: boolean;\n  isBeakVisible?: boolean;\n  gapSpace?: number;\n  beakWidth?: number;\n  edgeFixed?: boolean;\n}\n\nconst DIRECTION_OPTIONS = [\n  { key: DirectionalHint.topLeftEdge, text: 'Top Left Edge' },\n  { key: DirectionalHint.topCenter, text: 'Top Center' },\n  { key: DirectionalHint.topRightEdge, text: 'Top Right Edge' },\n  { key: DirectionalHint.topAutoEdge, text: 'Top Auto Edge' },\n  { key: DirectionalHint.bottomLeftEdge, text: 'Bottom Left Edge' },\n  { key: DirectionalHint.bottomCenter, text: 'Bottom Center' },\n  { key: DirectionalHint.bottomRightEdge, text: 'Bottom Right Edge' },\n  { key: DirectionalHint.bottomAutoEdge, text: 'Bottom Auto Edge' },\n  { key: DirectionalHint.leftTopEdge, text: 'Left Top Edge' },\n  { key: DirectionalHint.leftCenter, text: 'Left Center' },\n  { key: DirectionalHint.leftBottomEdge, text: 'Left Bottom Edge' },\n  { key: DirectionalHint.rightTopEdge, text: 'Right Top Edge' },\n  { key: DirectionalHint.rightCenter, text: 'Right Center' },\n  { key: DirectionalHint.rightBottomEdge, text: 'Right Bottom Edge' }\n];\n\nexport class ContextualMenuDirectionalExample extends React.Component<{}, IContextualMenuDirectionalExampleState> {\n  public constructor(props: {}) {\n    super(props);\n\n    this.state = {\n      isBeakVisible: false,\n      directionalHint: DirectionalHint.bottomLeftEdge,\n      directionalHintForRTL: DirectionalHint.bottomLeftEdge,\n      useDirectionalHintForRtl: false,\n      gapSpace: 0,\n      beakWidth: 20,\n      edgeFixed: false\n    };\n  }\n\n  public render(): JSX.Element {\n    const { beakWidth, directionalHint, directionalHintForRTL, edgeFixed, gapSpace, isBeakVisible, useDirectionalHintForRtl } = this.state;\n\n    return (\n      <div className=\"ms-ContextualMenuDirectionalExample\">\n        <div className=\"ms-ContextualMenuDirectionalExample-configArea\">\n          <Checkbox styles={{ root: { margin: '10px 0' } }} label=\"Show beak\" checked={isBeakVisible} onChange={this._onShowBeakChange} />\n          <Dropdown\n            label=\"Directional hint\"\n            selectedKey={directionalHint!}\n            options={DIRECTION_OPTIONS}\n            onChange={this._onDirectionalChanged}\n          />\n          {getRTL() && <Checkbox label=\"Use RTL directional hint\" checked={useDirectionalHintForRtl} onChange={this._onUseRtlHintChange} />}\n          {getRTL() && (\n            <Dropdown\n              label=\"Directional hint for RTL\"\n              selectedKey={directionalHintForRTL!}\n              options={DIRECTION_OPTIONS}\n              onChange={this._onDirectionalRtlChanged}\n              disabled={!useDirectionalHintForRtl}\n            />\n          )}\n        </div>\n        <div className=\"ms-ContextualMenuDirectionalExample-buttonArea\">\n          <DefaultButton\n            text=\"Show context menu\"\n            menuProps={{\n              isBeakVisible: isBeakVisible,\n              directionalHint: directionalHint,\n              directionalHintForRTL: useDirectionalHintForRtl ? directionalHintForRTL : undefined,\n              gapSpace: gapSpace,\n              beakWidth: beakWidth,\n              directionalHintFixed: edgeFixed,\n              items: [\n                {\n                  key: 'newItem',\n                  text: 'New'\n                },\n                {\n                  key: 'divider_1',\n                  itemType: ContextualMenuItemType.Divider\n                },\n                {\n                  key: 'rename',\n                  text: 'Rename'\n                },\n                {\n                  key: 'edit',\n                  text: 'Edit'\n                },\n                {\n                  key: 'properties',\n                  text: 'Properties'\n                },\n                {\n                  key: 'disabled',\n                  text: 'Disabled item',\n                  disabled: true\n                }\n              ]\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  private _onShowBeakChange = (event: React.FormEvent<HTMLElement>, isVisible: boolean): void => {\n    this.setState({\n      isBeakVisible: isVisible\n    });\n  };\n\n  private _onUseRtlHintChange = (event: React.FormEvent<HTMLElement>, isVisible: boolean): void => {\n    this.setState({\n      useDirectionalHintForRtl: isVisible\n    });\n  };\n\n  private _onDirectionalChanged = (event: React.FormEvent<HTMLDivElement>, option: IDropdownOption): void => {\n    this.setState({\n      directionalHint: option.key as DirectionalHint\n    });\n  };\n\n  private _onDirectionalRtlChanged = (event: React.FormEvent<HTMLDivElement>, option: IDropdownOption): void => {\n    this.setState({\n      directionalHintForRTL: option.key as DirectionalHint\n    });\n  };\n}\n"]}
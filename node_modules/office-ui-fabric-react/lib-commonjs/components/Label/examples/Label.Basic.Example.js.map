{"version":3,"file":"Label.Basic.Example.js","sourceRoot":"../src/","sources":["components/Label/examples/Label.Basic.Example.tsx"],"names":[],"mappings":";;AAAA,6BAA+B;AAE/B,0DAAyD;AACzD,kEAAiE;AACjE,kEAA6D;AAEhD,QAAA,iBAAiB,GAAG;IAC/B,2DAA2D;IAC3D,yFAAyF;IACzF,IAAM,WAAW,GAAG,iBAAK,CAAC,SAAS,CAAC,CAAC;IAErC,OAAO,CACL;QACE,oBAAC,aAAK,sBAAoB;QAC1B,oBAAC,aAAK,IAAC,QAAQ,EAAE,IAAI,2BAA8B;QACnD,oBAAC,aAAK,IAAC,QAAQ,EAAE,IAAI,2BAA8B;QACnD,oBAAC,aAAK,IAAC,OAAO,EAAE,WAAW,2BAA8B;QACzD,oBAAC,qBAAS,IAAC,EAAE,EAAE,WAAW,GAAI,CAC1B,CACP,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\n\nimport { Label } from 'office-ui-fabric-react/lib/Label';\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport { getId } from 'office-ui-fabric-react/lib/Utilities';\n\nexport const LabelBasicExample = () => {\n  // Use getId() to ensure that the ID is unique on the page.\n  // (It's also okay to use a plain string without getId() and manually ensure uniqueness.)\n  const textFieldId = getId('anInput');\n\n  return (\n    <div>\n      <Label>I'm a Label</Label>\n      <Label disabled={true}>I'm a disabled Label</Label>\n      <Label required={true}>I'm a required Label</Label>\n      <Label htmlFor={textFieldId}>A Label for An Input</Label>\n      <TextField id={textFieldId} />\n    </div>\n  );\n};\n"]}
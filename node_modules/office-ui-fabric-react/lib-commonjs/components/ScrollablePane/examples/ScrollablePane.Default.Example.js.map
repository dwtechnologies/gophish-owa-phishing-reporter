{"version":3,"file":"ScrollablePane.Default.Example.js","sourceRoot":"../src/","sources":["components/ScrollablePane/examples/ScrollablePane.Default.Example.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,8DAA8E;AAC9E,uDAA+C;AAC/C,4EAA2E;AAC3E,4DAA+E;AAE/E,IAAM,KAAK,GAAG,kBAAQ,EAAE,CAAC;AACzB,IAAM,UAAU,GAAG,wBAAc,CAAC;IAChC,OAAO,EAAE;QACP,MAAM,EAAE,MAAM;QACd,QAAQ,EAAE,UAAU;QACpB,SAAS,EAAE,SAAS;KACrB;IACD,IAAI,EAAE;QACJ,QAAQ,EAAE,GAAG;QACb,MAAM,EAAE,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC,YAAY;KAClD;IACD,MAAM,EAAE;QACN,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,WAAW;QAChC,OAAO,EAAE,mBAAmB;QAC5B,QAAQ,EAAE,MAAM;QAChB,SAAS,EAAE,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK;QAC7C,YAAY,EAAE,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK;KACjD;IACD,WAAW,EAAE;QACX,OAAO,EAAE,WAAW;KACrB;CACF,CAAC,CAAC;AAQH;IAAkD,wDAAe;IAG/D,sCAAY,KAAU;QAAtB,YACE,kBAAM,KAAK,CAAC,SAYb;QAYO,wBAAkB,GAAG,UAAC,IAAgC;YAC5D,OAAO,CACL,6BACE,GAAG,EAAE,IAAI,CAAC,KAAK,EACf,KAAK,EAAE;oBACL,eAAe,EAAE,IAAI,CAAC,KAAK;iBAC5B;gBAED,oBAAC,eAAM,IAAC,cAAc,EAAE,2BAAkB,CAAC,IAAI;oBAC7C,6BAAK,SAAS,EAAE,UAAU,CAAC,MAAM;;wBAAqB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAO,CACpE;gBACT,6BAAK,SAAS,EAAE,UAAU,CAAC,WAAW,IAAG,IAAI,CAAC,IAAI,CAAO,CACrD,CACP,CAAC;QACJ,CAAC,CAAC;QApCA,IAAM,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;QACnH,KAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,yDAAyD;QACzD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YAC1B,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC;gBACf,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;gBACrE,IAAI,EAAE,oBAAK,CAAC,GAAG,CAAC;gBAChB,KAAK,EAAE,CAAC;aACT,CAAC,CAAC;SACJ;;IACH,CAAC;IAEM,6CAAM,GAAb;QACE,IAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAE9D,OAAO,CACL,6BAAK,SAAS,EAAE,UAAU,CAAC,OAAO;YAChC,oBAAC,+BAAc,IAAC,MAAM,EAAE,EAAE,IAAI,EAAE,UAAU,CAAC,IAAI,EAAE,IAAM,YAAY,CAAkB,CACjF,CACP,CAAC;IACJ,CAAC;IAiBH,mCAAC;AAAD,CAAC,AA3CD,CAAkD,KAAK,CAAC,SAAS,GA2ChE;AA3CY,oEAA4B","sourcesContent":["import * as React from 'react';\nimport { getTheme, mergeStyleSets } from 'office-ui-fabric-react/lib/Styling';\nimport { lorem } from '@uifabric/example-data';\nimport { ScrollablePane } from 'office-ui-fabric-react/lib/ScrollablePane';\nimport { Sticky, StickyPositionType } from 'office-ui-fabric-react/lib/Sticky';\n\nconst theme = getTheme();\nconst classNames = mergeStyleSets({\n  wrapper: {\n    height: '40vh',\n    position: 'relative',\n    maxHeight: 'inherit'\n  },\n  pane: {\n    maxWidth: 400,\n    border: '1px solid ' + theme.palette.neutralLight\n  },\n  sticky: {\n    color: theme.palette.neutralDark,\n    padding: '5px 20px 5px 10px',\n    fontSize: '13px',\n    borderTop: '1px solid ' + theme.palette.black,\n    borderBottom: '1px solid ' + theme.palette.black\n  },\n  textContent: {\n    padding: '15px 10px'\n  }\n});\n\nexport interface IScrollablePaneExampleItem {\n  color: string;\n  text: string;\n  index: number;\n}\n\nexport class ScrollablePaneDefaultExample extends React.Component {\n  private _items: IScrollablePaneExampleItem[];\n\n  constructor(props: any) {\n    super(props);\n\n    const colors = ['#eaeaea', '#dadada', '#d0d0d0', '#c8c8c8', '#a6a6a6', '#c7e0f4', '#71afe5', '#eff6fc', '#deecf9'];\n    this._items = [];\n    // Using splice prevents the colors from being duplicated\n    for (let i = 0; i < 5; i++) {\n      this._items.push({\n        color: colors.splice(Math.floor(Math.random() * colors.length), 1)[0],\n        text: lorem(200),\n        index: i\n      });\n    }\n  }\n\n  public render() {\n    const contentAreas = this._items.map(this._createContentArea);\n\n    return (\n      <div className={classNames.wrapper}>\n        <ScrollablePane styles={{ root: classNames.pane }}>{...contentAreas}</ScrollablePane>\n      </div>\n    );\n  }\n\n  private _createContentArea = (item: IScrollablePaneExampleItem) => {\n    return (\n      <div\n        key={item.index}\n        style={{\n          backgroundColor: item.color\n        }}\n      >\n        <Sticky stickyPosition={StickyPositionType.Both}>\n          <div className={classNames.sticky}>Sticky Component #{item.index + 1}</div>\n        </Sticky>\n        <div className={classNames.textContent}>{item.text}</div>\n      </div>\n    );\n  };\n}\n"]}
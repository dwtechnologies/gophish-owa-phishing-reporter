{"version":3,"file":"FocusTrapZone.Box.Click.Example.js","sourceRoot":"../src/","sources":["components/FocusTrapZone/examples/FocusTrapZone.Box.Click.Example.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAE/B,0EAAyE;AACzE,wDAAuD;AACvD,kEAAiE;AACjE,4DAAoE;AACpE,0DAAyD;AAMzD;IAAkD,wDAAuD;IAAzG;QAAA,qEAqCC;QApCQ,WAAK,GAAuC,EAAE,WAAW,EAAE,KAAK,EAAE,CAAC;QAElE,aAAO,GAAG,KAAK,CAAC,SAAS,EAAW,CAAC;QA+BrC,mCAA6B,GAAG,UAAC,EAAiC,EAAE,OAAiB;YAC3F,KAAI,CAAC,QAAQ,CAAC,EAAE,WAAW,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;QAC5C,CAAC,CAAC;;IACJ,CAAC;IAhCQ,6CAAM,GAAb;QACU,IAAA,oCAAW,CAAgB;QAEnC,OAAO,CACL,oBAAC,6BAAa,IAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,2BAA2B,EAAE,IAAI,EAAE,oBAAoB,EAAE,KAAK;YACnG,oBAAC,aAAK,IACJ,eAAe,EAAC,OAAO,EACvB,MAAM,EAAE,EAAE,WAAW,EAAE,EAAE,EAAE,EAC3B,MAAM,EAAE;oBACN,IAAI,EAAE,EAAE,MAAM,EAAE,iBAAc,WAAW,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,aAAa,CAAE,EAAE,OAAO,EAAE,EAAE,EAAE;iBACvF;gBAED,oBAAC,eAAM,IACL,KAAK,EAAC,eAAe,EACrB,YAAY,EAAE,IAAI,CAAC,OAAO,EAC1B,OAAO,EAAE,WAAW,EACpB,QAAQ,EAAE,IAAI,CAAC,6BAA6B,EAC5C,MAAM,EAAC,qBAAqB,EAC5B,OAAO,EAAC,KAAK,GACb;gBACF,oBAAC,qBAAS,IAAC,KAAK,EAAC,wBAAwB,EAAC,MAAM,EAAE,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,EAAE,GAAI;gBAC9E,oBAAC,WAAI,IAAC,IAAI,EAAC,kBAAkB,EAAC,MAAM,EAAC,QAAQ,iCAEtC,CACD,CACM,CACjB,CAAC;IACJ,CAAC;IAKH,mCAAC;AAAD,CAAC,AArCD,CAAkD,KAAK,CAAC,SAAS,GAqChE;AArCY,oEAA4B","sourcesContent":["import * as React from 'react';\n\nimport { FocusTrapZone } from 'office-ui-fabric-react/lib/FocusTrapZone';\nimport { Link } from 'office-ui-fabric-react/lib/Link';\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport { Toggle, IToggle } from 'office-ui-fabric-react/lib/Toggle';\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\n\nexport interface IFocusTrapZoneBoxClickExampleState {\n  useTrapZone: boolean;\n}\n\nexport class FocusTrapZoneBoxClickExample extends React.Component<{}, IFocusTrapZoneBoxClickExampleState> {\n  public state: IFocusTrapZoneBoxClickExampleState = { useTrapZone: false };\n\n  private _toggle = React.createRef<IToggle>();\n\n  public render() {\n    const { useTrapZone } = this.state;\n\n    return (\n      <FocusTrapZone disabled={!useTrapZone} isClickableOutsideFocusTrap={true} forceFocusInsideTrap={false}>\n        <Stack\n          horizontalAlign=\"start\"\n          tokens={{ childrenGap: 15 }}\n          styles={{\n            root: { border: `2px dashed ${useTrapZone ? '#ababab' : 'transparent'}`, padding: 10 }\n          }}\n        >\n          <Toggle\n            label=\"Use trap zone\"\n            componentRef={this._toggle}\n            checked={useTrapZone}\n            onChange={this._onFocusTrapZoneToggleChanged}\n            onText=\"On (toggle to exit)\"\n            offText=\"Off\"\n          />\n          <TextField label=\"Input inside trap zone\" styles={{ root: { width: 300 } }} />\n          <Link href=\"https://bing.com\" target=\"_blank\">\n            Hyperlink inside trap zone\n          </Link>\n        </Stack>\n      </FocusTrapZone>\n    );\n  }\n\n  private _onFocusTrapZoneToggleChanged = (ev: React.MouseEvent<HTMLElement>, checked?: boolean): void => {\n    this.setState({ useTrapZone: !!checked });\n  };\n}\n"]}
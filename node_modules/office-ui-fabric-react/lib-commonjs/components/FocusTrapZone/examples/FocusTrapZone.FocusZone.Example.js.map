{"version":3,"file":"FocusTrapZone.FocusZone.Example.js","sourceRoot":"../src/","sources":["components/FocusTrapZone/examples/FocusTrapZone.FocusZone.Example.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAE/B,4DAAkE;AAClE,0EAAyE;AACzE,kEAAqF;AACrF,4DAAoE;AACpE,0DAAuE;AAMvE;IAAmD,yDAAwD;IAA3G;QAAA,qEAsDC;QArDQ,WAAK,GAAwC;YAClD,WAAW,EAAE,KAAK;SACnB,CAAC;QAEM,aAAO,GAAG,KAAK,CAAC,SAAS,EAAW,CAAC;QA2CrC,mCAA6B,GAAG,UAAC,EAAiC,EAAE,OAAiB;YAC3F,KAAI,CAAC,QAAQ,CAAC,EAAE,WAAW,EAAE,CAAC,CAAC,OAAO,EAAE,EAAE;gBACxC,6CAA6C;gBAC7C,KAAI,CAAC,OAAO,CAAC,OAAQ,CAAC,KAAK,EAAE,CAAC;YAChC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;;IACJ,CAAC;IA/CQ,8CAAM,GAAb;QACU,IAAA,oCAAW,CAAgB;QACnC,IAAM,OAAO,GAAG,EAAE,CAAC;QACnB,IAAM,MAAM,GAAG,oBAAoB,CAAC;QACpC,IAAM,UAAU,GAAG,gBAAa,WAAW,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,aAAa,CAAE,CAAC;QAC1E,IAAM,MAAM,GAAiB,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC;QAEjD,OAAO,CACL,oBAAC,6BAAa,IAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,oBAAoB,EAAE,IAAI,EAAE,kCAAkC,EAAE,IAAI;YACzG,oBAAC,aAAK,IAAC,MAAM,EAAE,MAAM,EAAE,eAAe,EAAC,OAAO,EAAC,MAAM,EAAE,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,SAAA,EAAE,EAAE;gBAC9F,oBAAC,eAAM,IACL,KAAK,EAAC,eAAe,EACrB,YAAY,EAAE,IAAI,CAAC,OAAO,EAC1B,OAAO,EAAE,WAAW,EACpB,QAAQ,EAAE,IAAI,CAAC,6BAA6B,EAC5C,MAAM,EAAC,qBAAqB,EAC5B,OAAO,EAAC,KAAK,GACb;gBAEF,oBAAC,qBAAS,IAAC,SAAS,EAAE,8BAAkB,CAAC,UAAU,qBAAmB,IAAI;oBACxE,oBAAC,aAAK,IAAC,UAAU,QAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,EAAE,IAAI,EAAE,EAAE,MAAM,QAAA,EAAE,OAAO,SAAA,EAAE,EAAE;wBACrE,oBAAC,sBAAa,IAAC,IAAI,EAAC,KAAK,GAAG;wBAC5B,oBAAC,sBAAa,IAAC,IAAI,EAAC,KAAK,GAAG;wBAC5B,oBAAC,sBAAa,IAAC,IAAI,EAAC,KAAK,GAAG,CACtB,CACE;gBAEZ,oBAAC,sBAAa,IAAC,IAAI,EAAC,OAAO,GAAG;gBAE9B,oBAAC,qBAAS,IAAC,SAAS,EAAE,8BAAkB,CAAC,UAAU,qBAAmB,IAAI;oBACxE,oBAAC,aAAK,IAAC,UAAU,QAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,EAAE,IAAI,EAAE,EAAE,MAAM,QAAA,EAAE,OAAO,SAAA,EAAE,EAAE;wBACrE,oBAAC,sBAAa,IAAC,IAAI,EAAC,KAAK,GAAG;wBAC5B,oBAAC,sBAAa,IAAC,IAAI,EAAC,KAAK,GAAG;wBAC5B,oBAAC,sBAAa,IAAC,IAAI,EAAC,KAAK,GAAG,CACtB,CACE,CACN,CACM,CACjB,CAAC;IACJ,CAAC;IAQH,oCAAC;AAAD,CAAC,AAtDD,CAAmD,KAAK,CAAC,SAAS,GAsDjE;AAtDY,sEAA6B","sourcesContent":["import * as React from 'react';\n\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport { FocusTrapZone } from 'office-ui-fabric-react/lib/FocusTrapZone';\nimport { FocusZone, FocusZoneDirection } from 'office-ui-fabric-react/lib/FocusZone';\nimport { Toggle, IToggle } from 'office-ui-fabric-react/lib/Toggle';\nimport { Stack, IStackTokens } from 'office-ui-fabric-react/lib/Stack';\n\nexport interface IFocusTrapZoneFocusZoneExampleState {\n  useTrapZone: boolean;\n}\n\nexport class FocusTrapZoneFocusZoneExample extends React.Component<{}, IFocusTrapZoneFocusZoneExampleState> {\n  public state: IFocusTrapZoneFocusZoneExampleState = {\n    useTrapZone: false\n  };\n\n  private _toggle = React.createRef<IToggle>();\n\n  public render() {\n    const { useTrapZone } = this.state;\n    const padding = 10;\n    const border = '2px dashed #ababab';\n    const rootBorder = `2px solid ${useTrapZone ? '#ababab' : 'transparent'}`;\n    const tokens: IStackTokens = { childrenGap: 10 };\n\n    return (\n      <FocusTrapZone disabled={!useTrapZone} forceFocusInsideTrap={true} focusPreviouslyFocusedInnerElement={true}>\n        <Stack tokens={tokens} horizontalAlign=\"start\" styles={{ root: { border: rootBorder, padding } }}>\n          <Toggle\n            label=\"Use trap zone\"\n            componentRef={this._toggle}\n            checked={useTrapZone}\n            onChange={this._onFocusTrapZoneToggleChanged}\n            onText=\"On (toggle to exit)\"\n            offText=\"Off\"\n          />\n\n          <FocusZone direction={FocusZoneDirection.horizontal} data-is-visible={true}>\n            <Stack horizontal tokens={tokens} styles={{ root: { border, padding } }}>\n              <DefaultButton text=\"FZ1\" />\n              <DefaultButton text=\"FZ1\" />\n              <DefaultButton text=\"FZ1\" />\n            </Stack>\n          </FocusZone>\n\n          <DefaultButton text=\"No FZ\" />\n\n          <FocusZone direction={FocusZoneDirection.horizontal} data-is-visible={true}>\n            <Stack horizontal tokens={tokens} styles={{ root: { border, padding } }}>\n              <DefaultButton text=\"FZ2\" />\n              <DefaultButton text=\"FZ2\" />\n              <DefaultButton text=\"FZ2\" />\n            </Stack>\n          </FocusZone>\n        </Stack>\n      </FocusTrapZone>\n    );\n  }\n\n  private _onFocusTrapZoneToggleChanged = (ev: React.MouseEvent<HTMLElement>, checked?: boolean): void => {\n    this.setState({ useTrapZone: !!checked }, () => {\n      // Restore focus to toggle after re-rendering\n      this._toggle.current!.focus();\n    });\n  };\n}\n"]}
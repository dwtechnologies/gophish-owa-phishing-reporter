{"version":3,"file":"Dialog.LargeHeader.Example.js","sourceRoot":"../src/","sources":["components/Dialog/examples/Dialog.LargeHeader.Example.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,4DAAqF;AACrF,4DAAiF;AACjF,sEAAqE;AAMrE;IAA8C,oDAAmD;IAAjG;QAAA,qEAsDC;QArDQ,WAAK,GAAmC,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC;QA8C5D,iBAAW,GAAG;YACpB,KAAI,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,CAAC;QACvC,CAAC,CAAC;QAEM,kBAAY,GAAG;YACrB,KAAI,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;QACtC,CAAC,CAAC;;IACJ,CAAC;IAnDQ,yCAAM,GAAb;QACE,OAAO,CACL;YACE,oBAAC,sBAAa,IAAC,aAAa,EAAC,yBAAyB,EAAC,OAAO,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,EAAC,aAAa,GAAG;YACvG,oBAAC,eAAM,IACL,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,EAC7B,SAAS,EAAE,IAAI,CAAC,YAAY,EAC5B,kBAAkB,EAAE;oBAClB,IAAI,EAAE,mBAAU,CAAC,WAAW;oBAC5B,KAAK,EAAE,qBAAqB;oBAC5B,OAAO,EAAE,4GAA4G;iBACtH,EACD,UAAU,EAAE;oBACV,UAAU,EAAE,KAAK;oBACjB,MAAM,EAAE,EAAE,IAAI,EAAE,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE;iBACpC;gBAED,oBAAC,yBAAW,IACV,OAAO,EAAE;wBACP;4BACE,GAAG,EAAE,GAAG;4BACR,IAAI,EAAE,UAAU;yBACjB;wBACD;4BACE,GAAG,EAAE,GAAG;4BACR,IAAI,EAAE,UAAU;4BAChB,OAAO,EAAE,IAAI;yBACd;wBACD;4BACE,GAAG,EAAE,GAAG;4BACR,IAAI,EAAE,UAAU;4BAChB,QAAQ,EAAE,IAAI;yBACf;qBACF,GACD;gBACF,oBAAC,qBAAY;oBACX,oBAAC,sBAAa,IAAC,OAAO,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,EAAC,MAAM,GAAG;oBACzD,oBAAC,sBAAa,IAAC,OAAO,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,EAAC,QAAQ,GAAG,CAC9C,CACR,CACL,CACP,CAAC;IACJ,CAAC;IASH,+BAAC;AAAD,CAAC,AAtDD,CAA8C,KAAK,CAAC,SAAS,GAsD5D;AAtDY,4DAAwB","sourcesContent":["import * as React from 'react';\nimport { Dialog, DialogType, DialogFooter } from 'office-ui-fabric-react/lib/Dialog';\nimport { PrimaryButton, DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport { ChoiceGroup } from 'office-ui-fabric-react/lib/ChoiceGroup';\n\nexport interface IDialogLargeHeaderExampleState {\n  hideDialog: boolean;\n}\n\nexport class DialogLargeHeaderExample extends React.Component<{}, IDialogLargeHeaderExampleState> {\n  public state: IDialogLargeHeaderExampleState = { hideDialog: true };\n\n  public render() {\n    return (\n      <div>\n        <DefaultButton secondaryText=\"Opens the Sample Dialog\" onClick={this._showDialog} text=\"Open Dialog\" />\n        <Dialog\n          hidden={this.state.hideDialog}\n          onDismiss={this._closeDialog}\n          dialogContentProps={{\n            type: DialogType.largeHeader,\n            title: 'All emails together',\n            subText: 'Your Inbox has changed. No longer does it include favorites, it is a singular destination for your emails.'\n          }}\n          modalProps={{\n            isBlocking: false,\n            styles: { main: { maxWidth: 450 } }\n          }}\n        >\n          <ChoiceGroup\n            options={[\n              {\n                key: 'A',\n                text: 'Option A'\n              },\n              {\n                key: 'B',\n                text: 'Option B',\n                checked: true\n              },\n              {\n                key: 'C',\n                text: 'Option C',\n                disabled: true\n              }\n            ]}\n          />\n          <DialogFooter>\n            <PrimaryButton onClick={this._closeDialog} text=\"Save\" />\n            <DefaultButton onClick={this._closeDialog} text=\"Cancel\" />\n          </DialogFooter>\n        </Dialog>\n      </div>\n    );\n  }\n\n  private _showDialog = (): void => {\n    this.setState({ hideDialog: false });\n  };\n\n  private _closeDialog = (): void => {\n    this.setState({ hideDialog: true });\n  };\n}\n"]}
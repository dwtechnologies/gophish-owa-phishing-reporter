{"version":3,"file":"Overlay.Dark.Example.js","sourceRoot":"../src/","sources":["components/Overlay/examples/Overlay.Dark.Example.tsx"],"names":[],"mappings":";;;IAOA,IAAM,aAAa,GAA0B;QAC3C,IAAI,EAAE;YACJ,wBAAwB;YACxB;gBACE,UAAU,EAAE,MAAM;gBAClB,MAAM,EAAE,GAAG;gBACX,KAAK,EAAE,OAAO;gBACd,IAAI,EAAE,GAAG;gBACT,OAAO,EAAE,MAAM;gBACf,QAAQ,EAAE,UAAU;gBACpB,KAAK,EAAE,GAAG;aACX;SACF;KACF,CAAC;IAEF;QAAwC,8CAKvC;QACC,4BAAY,KAAS;YAArB,YACE,kBAAM,KAAK,CAAC,SAGb;YAqBO,yBAAmB,GAAG;gBAC5B,KAAI,CAAC,QAAQ,CAAC,EAAE,gBAAgB,EAAE,KAAK,EAAE,CAAC,CAAC;YAC7C,CAAC,CAAC;YAEM,oBAAc,GAAG;gBACvB,KAAI,CAAC,QAAQ,CAAC,EAAE,gBAAgB,EAAE,CAAC,KAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE,CAAC,CAAC;YACpE,CAAC,CAAC;YA5BA,KAAI,CAAC,KAAK,GAAG,EAAE,gBAAgB,EAAE,KAAK,EAAE,CAAC;;QAC3C,CAAC;QAEM,mCAAM,GAAb;YACU,IAAA,8CAAgB,CAAgB;YACxC,IAAM,aAAa,GAAG,2CAAkB,EAA6B,CAAC;YACtE,IAAM,UAAU,GAAG,aAAa,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC;YAEpD,OAAO,CACL;gBACE,oBAAC,sCAAa,IAAC,OAAO,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,EAAC,kBAAkB,GAAG;gBACtE,gBAAgB,IAAI,CACnB,oBAAC,gCAAO,IAAC,YAAY,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,mBAAmB;oBAC5D,6BAAK,SAAS,EAAE,UAAU,CAAC,IAAI;wBAC7B,kEAAuC,CACnC,CACE,CACX,CACG,CACP,CAAC;QACJ,CAAC;QASH,yBAAC;IAAD,CAAC,AAtCD,CAAwC,KAAK,CAAC,SAAS,GAsCtD;IAtCY,gDAAkB","sourcesContent":["import * as React from 'react';\nimport { classNamesFunction, DefaultButton, IStyle, Overlay } from 'office-ui-fabric-react';\n\ninterface IOverlayExampleStyles {\n  root: IStyle;\n}\n\nconst exampleStyles: IOverlayExampleStyles = {\n  root: [\n    'OverlayExample-content',\n    {\n      background: 'blue',\n      bottom: '0',\n      color: 'white',\n      left: '0',\n      padding: '10px',\n      position: 'absolute',\n      right: '0'\n    }\n  ]\n};\n\nexport class OverlayDarkExample extends React.Component<\n  {},\n  {\n    isOverlayVisible: boolean;\n  }\n> {\n  constructor(props: {}) {\n    super(props);\n\n    this.state = { isOverlayVisible: false };\n  }\n\n  public render(): JSX.Element {\n    const { isOverlayVisible } = this.state;\n    const getClassNames = classNamesFunction<{}, IOverlayExampleStyles>();\n    const classNames = getClassNames(exampleStyles, {});\n\n    return (\n      <div>\n        <DefaultButton onClick={this._toggleOverlay} text=\"Show the overlay\" />\n        {isOverlayVisible && (\n          <Overlay isDarkThemed={true} onClick={this._setVisibilityFalse}>\n            <div className={classNames.root}>\n              <p>I am content within the overlay.</p>\n            </div>\n          </Overlay>\n        )}\n      </div>\n    );\n  }\n\n  private _setVisibilityFalse = (): void => {\n    this.setState({ isOverlayVisible: false });\n  };\n\n  private _toggleOverlay = (): void => {\n    this.setState({ isOverlayVisible: !this.state.isOverlayVisible });\n  };\n}\n"]}
{"version":3,"file":"List.Grid.Example.js","sourceRoot":"../src/","sources":["components/List/examples/List.Grid.Example.tsx"],"names":[],"mappings":";;;IAoBA,IAAM,KAAK,GAAW,kBAAQ,EAAE,CAAC;IACzB,IAAA,uBAAO,EAAE,mBAAK,CAAW;IAEjC,IAAM,UAAU,GAAgC,wBAAc,CAAC;QAC7D,eAAe,EAAE;YACf,QAAQ,EAAE,QAAQ;YAClB,QAAQ,EAAE,CAAC;YACX,QAAQ,EAAE,UAAU;SACrB;QACD,mBAAmB,EAAE;YACnB,SAAS,EAAE,QAAQ;YACnB,OAAO,EAAE,MAAM;YACf,QAAQ,EAAE,UAAU;YACpB,KAAK,EAAE,MAAM;YACb,UAAU,EAAE,OAAO,CAAC,cAAc;YAClC,SAAS,EAAE;gBACT,aAAa,EAAE;oBACb,OAAO,EAAE,EAAE;oBACX,QAAQ,EAAE,UAAU;oBACpB,IAAI,EAAE,CAAC;oBACP,KAAK,EAAE,CAAC;oBACR,GAAG,EAAE,CAAC;oBACN,MAAM,EAAE,CAAC;oBACT,SAAS,EAAE,YAAY;oBACvB,MAAM,EAAE,eAAa,OAAO,CAAC,KAAO;iBACrC;aACF;SACF;QACD,oBAAoB,EAAE;YACpB,aAAa,EAAE,MAAM;SACtB;QACD,qBAAqB,EAAE;YACrB,QAAQ,EAAE,UAAU;YACpB,IAAI,EAAE,CAAC;YACP,GAAG,EAAE,CAAC;YACN,KAAK,EAAE,CAAC;YACR,MAAM,EAAE,CAAC;SACV;QACD,oBAAoB,EAAE;YACpB,UAAU,EAAE,oBAAoB;YAChC,KAAK,EAAE,SAAS;YAChB,QAAQ,EAAE,UAAU;YACpB,OAAO,EAAE,EAAE;YACX,MAAM,EAAE,CAAC;YACT,IAAI,EAAE,CAAC;YACP,KAAK,EAAE,MAAM;YACb,QAAQ,EAAE,KAAK,CAAC,KAAK,CAAC,QAAQ;YAC9B,SAAS,EAAE,YAAY;SACxB;QACD,oBAAoB,EAAE;YACpB,QAAQ,EAAE,UAAU;YACpB,GAAG,EAAE,CAAC;YACN,IAAI,EAAE,CAAC;YACP,KAAK,EAAE,MAAM;SACd;KACF,CAAC,CAAC;IAEH,IAAM,aAAa,GAAG,CAAC,CAAC;IACxB,IAAM,cAAc,GAAG,GAAG,CAAC;IAE3B;QAAqC,2CAAsC;QAMzE,yBAAY,KAA4B;YAAxC,YACE,kBAAM,KAAK,CAAC,SAEb;YAiBO,0BAAoB,GAAG,UAAC,SAAiB,EAAE,WAAuB;gBACxE,IAAI,SAAS,KAAK,CAAC,EAAE;oBACnB,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,cAAc,CAAC,CAAC;oBAClE,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,GAAG,KAAI,CAAC,YAAY,CAAC,CAAC;oBACtE,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,YAAY,CAAC;iBACrC;gBAED,OAAO,KAAI,CAAC,YAAY,GAAG,aAAa,CAAC;YAC3C,CAAC,CAAC;YAEM,oBAAc,GAAG;gBACvB,OAAO,KAAI,CAAC,UAAU,GAAG,aAAa,CAAC;YACzC,CAAC,CAAC;YAEM,mBAAa,GAAG,UAAC,IAAS,EAAE,KAAyB;gBAC3D,OAAO,CACL,6BACE,SAAS,EAAE,UAAU,CAAC,mBAAmB,uBACtB,IAAI,EACvB,KAAK,EAAE;wBACL,KAAK,EAAE,GAAG,GAAG,KAAI,CAAC,YAAY,GAAG,GAAG;qBACrC;oBAED,6BAAK,SAAS,EAAE,UAAU,CAAC,oBAAoB;wBAC7C,6BAAK,SAAS,EAAE,UAAU,CAAC,qBAAqB;4BAC9C,6BAAK,GAAG,EAAE,IAAI,CAAC,SAAS,EAAE,SAAS,EAAE,UAAU,CAAC,oBAAoB,GAAI;4BACxE,8BAAM,SAAS,EAAE,UAAU,CAAC,oBAAoB,IAAG,UAAQ,KAAO,CAAQ,CACtE,CACF,CACF,CACP,CAAC;YACJ,CAAC,CAAC;YAjDA,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,IAAI,8BAAe,CAAC,IAAI,CAAC,CAAC;;QACrD,CAAC;QAEM,gCAAM,GAAb;YACE,OAAO,CACL,oBAAC,qBAAS;gBACR,oBAAC,WAAI,IACH,SAAS,EAAE,UAAU,CAAC,eAAe,EACrC,KAAK,EAAE,IAAI,CAAC,MAAM,EAClB,mBAAmB,EAAE,IAAI,CAAC,oBAAoB,EAC9C,aAAa,EAAE,IAAI,CAAC,cAAc,EAClC,oBAAoB,EAAE,CAAC,EACvB,YAAY,EAAE,IAAI,CAAC,aAAa,GAChC,CACQ,CACb,CAAC;QACJ,CAAC;QAkCH,sBAAC;IAAD,CAAC,AA1DD,CAAqC,KAAK,CAAC,SAAS,GA0DnD;IA1DY,0CAAe","sourcesContent":["import * as React from 'react';\nimport { FocusZone } from 'office-ui-fabric-react/lib/FocusZone';\nimport { List } from 'office-ui-fabric-react/lib/List';\nimport { IRectangle } from 'office-ui-fabric-react/lib/Utilities';\nimport { ITheme, getTheme, mergeStyleSets } from 'office-ui-fabric-react/lib/Styling';\nimport { createListItems, IExampleItem } from '@uifabric/example-data';\n\nexport interface IListGridExampleProps {\n  items?: IExampleItem[];\n}\n\ninterface IListGridExampleClassObject {\n  listGridExample: string;\n  listGridExampleTile: string;\n  listGridExampleSizer: string;\n  listGridExamplePadder: string;\n  listGridExampleLabel: string;\n  listGridExampleImage: string;\n}\n\nconst theme: ITheme = getTheme();\nconst { palette, fonts } = theme;\n\nconst classNames: IListGridExampleClassObject = mergeStyleSets({\n  listGridExample: {\n    overflow: 'hidden',\n    fontSize: 0,\n    position: 'relative'\n  },\n  listGridExampleTile: {\n    textAlign: 'center',\n    outline: 'none',\n    position: 'relative',\n    float: 'left',\n    background: palette.neutralLighter,\n    selectors: {\n      'focus:after': {\n        content: '',\n        position: 'absolute',\n        left: 2,\n        right: 2,\n        top: 2,\n        bottom: 2,\n        boxSizing: 'border-box',\n        border: `1px solid ${palette.white}`\n      }\n    }\n  },\n  listGridExampleSizer: {\n    paddingBottom: '100%'\n  },\n  listGridExamplePadder: {\n    position: 'absolute',\n    left: 2,\n    top: 2,\n    right: 2,\n    bottom: 2\n  },\n  listGridExampleLabel: {\n    background: 'rgba(0, 0, 0, 0.3)',\n    color: '#FFFFFF',\n    position: 'absolute',\n    padding: 10,\n    bottom: 0,\n    left: 0,\n    width: '100%',\n    fontSize: fonts.small.fontSize,\n    boxSizing: 'border-box'\n  },\n  listGridExampleImage: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%'\n  }\n});\n\nconst ROWS_PER_PAGE = 3;\nconst MAX_ROW_HEIGHT = 250;\n\nexport class ListGridExample extends React.Component<IListGridExampleProps> {\n  private _columnCount: number;\n  private _columnWidth: number;\n  private _rowHeight: number;\n  private _items: IExampleItem[];\n\n  constructor(props: IListGridExampleProps) {\n    super(props);\n    this._items = props.items || createListItems(5000);\n  }\n\n  public render(): JSX.Element {\n    return (\n      <FocusZone>\n        <List\n          className={classNames.listGridExample}\n          items={this._items}\n          getItemCountForPage={this._getItemCountForPage}\n          getPageHeight={this._getPageHeight}\n          renderedWindowsAhead={4}\n          onRenderCell={this._onRenderCell}\n        />\n      </FocusZone>\n    );\n  }\n\n  private _getItemCountForPage = (itemIndex: number, surfaceRect: IRectangle): number => {\n    if (itemIndex === 0) {\n      this._columnCount = Math.ceil(surfaceRect.width / MAX_ROW_HEIGHT);\n      this._columnWidth = Math.floor(surfaceRect.width / this._columnCount);\n      this._rowHeight = this._columnWidth;\n    }\n\n    return this._columnCount * ROWS_PER_PAGE;\n  };\n\n  private _getPageHeight = (): number => {\n    return this._rowHeight * ROWS_PER_PAGE;\n  };\n\n  private _onRenderCell = (item: any, index: number | undefined): JSX.Element => {\n    return (\n      <div\n        className={classNames.listGridExampleTile}\n        data-is-focusable={true}\n        style={{\n          width: 100 / this._columnCount + '%'\n        }}\n      >\n        <div className={classNames.listGridExampleSizer}>\n          <div className={classNames.listGridExamplePadder}>\n            <img src={item.thumbnail} className={classNames.listGridExampleImage} />\n            <span className={classNames.listGridExampleLabel}>{`item ${index}`}</span>\n          </div>\n        </div>\n      </div>\n    );\n  };\n}\n"]}
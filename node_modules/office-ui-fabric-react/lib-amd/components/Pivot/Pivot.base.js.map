{"version":3,"file":"Pivot.base.js","sourceRoot":"../src/","sources":["components/Pivot/Pivot.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { BaseComponent, KeyCodes, getId, getNativeProps, divProperties, classNamesFunction, warn } from '../../Utilities';\nimport { CommandButton } from '../../Button';\nimport { IPivotProps, IPivotStyleProps, IPivotStyles } from './Pivot.types';\nimport { IPivotItemProps } from './PivotItem.types';\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\nimport { PivotItem } from './PivotItem';\nimport { PivotLinkFormat } from './Pivot.types';\nimport { PivotLinkSize } from './Pivot.types';\nimport { Icon } from '../../Icon';\n\nconst getClassNames = classNamesFunction<IPivotStyleProps, IPivotStyles>();\n\nexport interface IPivotState {\n  selectedKey: string | undefined;\n}\n\nconst PivotItemType = (<PivotItem /> as React.ReactElement<IPivotItemProps>).type;\n\ntype PivotLinkCollection = {\n  links: IPivotItemProps[];\n  keyToIndexMapping: { [key: string]: number };\n  keyToTabIdMapping: { [key: string]: string };\n};\n\n/**\n *  Usage:\n *\n *     <Pivot>\n *       <PivotItem headerText=\"Foo\">\n *         <Label>Pivot #1</Label>\n *       </PivotItem>\n *       <PivotItem headerText=\"Bar\">\n *         <Label>Pivot #2</Label>\n *       </PivotItem>\n *       <PivotItem headerText=\"Bas\">\n *         <Label>Pivot #3</Label>\n *       </PivotItem>\n *     </Pivot>\n */\nexport class PivotBase extends BaseComponent<IPivotProps, IPivotState> {\n  private _pivotId: string;\n  private _focusZone = React.createRef<FocusZone>();\n  private _classNames: { [key in keyof IPivotStyles]: string };\n\n  constructor(props: IPivotProps) {\n    super(props);\n\n    this._warnDeprecations({\n      initialSelectedKey: 'defaultSelectedKey',\n      initialSelectedIndex: 'defaultSelectedIndex'\n    });\n\n    this._pivotId = getId('Pivot');\n    const links: IPivotItemProps[] = this._getPivotLinks(props).links;\n\n    const { defaultSelectedKey = props.initialSelectedKey, defaultSelectedIndex = props.initialSelectedIndex } = props;\n\n    let selectedKey: string | undefined;\n\n    if (defaultSelectedKey) {\n      selectedKey = defaultSelectedKey;\n    } else if (typeof defaultSelectedIndex === 'number') {\n      selectedKey = links[defaultSelectedIndex].itemKey!;\n    } else if (links.length) {\n      selectedKey = links[0].itemKey!;\n    }\n\n    this.state = {\n      selectedKey\n    };\n  }\n\n  /**\n   * Sets focus to the first pivot tab.\n   */\n  public focus(): void {\n    if (this._focusZone.current) {\n      this._focusZone.current.focus();\n    }\n  }\n\n  public render(): JSX.Element {\n    const linkCollection = this._getPivotLinks(this.props);\n    const selectedKey = this._getSelectedKey(linkCollection);\n\n    const divProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(this.props, divProperties);\n\n    this._classNames = this._getClassNames(this.props);\n\n    return (\n      <div {...divProps}>\n        {this._renderPivotLinks(linkCollection, selectedKey)}\n        {selectedKey && this._renderPivotItem(linkCollection, selectedKey)}\n      </div>\n    );\n  }\n\n  private _getSelectedKey(linkCollection: PivotLinkCollection) {\n    const { selectedKey: propsSelectedKey } = this.props;\n\n    if (this._isKeyValid(linkCollection, propsSelectedKey) || propsSelectedKey === null) {\n      return propsSelectedKey;\n    }\n\n    const { selectedKey: stateSelectedKey } = this.state;\n    if (this._isKeyValid(linkCollection, stateSelectedKey)) {\n      return stateSelectedKey;\n    }\n\n    if (linkCollection.links.length) {\n      return linkCollection.links[0].itemKey;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Renders the set of links to route between pivots\n   */\n  private _renderPivotLinks(linkCollection: PivotLinkCollection, selectedKey: string | null | undefined): JSX.Element {\n    const items = linkCollection.links.map(l => this._renderPivotLink(linkCollection, l, selectedKey));\n\n    return (\n      <FocusZone componentRef={this._focusZone} direction={FocusZoneDirection.horizontal}>\n        <div className={this._classNames.root} role=\"tablist\">\n          {items}\n        </div>\n      </FocusZone>\n    );\n  }\n\n  private _renderPivotLink = (\n    linkCollection: PivotLinkCollection,\n    link: IPivotItemProps,\n    selectedKey: string | null | undefined\n  ): JSX.Element => {\n    const { itemKey, headerButtonProps } = link;\n    const tabId = linkCollection.keyToTabIdMapping[itemKey!];\n    const { onRenderItemLink } = link;\n    let linkContent: JSX.Element | null;\n    const isSelected: boolean = selectedKey === itemKey;\n\n    if (onRenderItemLink) {\n      linkContent = onRenderItemLink(link, this._renderLinkContent);\n    } else {\n      linkContent = this._renderLinkContent(link);\n    }\n\n    let contentString = link.headerText || '';\n    contentString += link.itemCount ? ' (' + link.itemCount + ')' : '';\n    // Adding space supplementary for icon\n    contentString += link.itemIcon ? ' xx' : '';\n\n    return (\n      <CommandButton\n        {...headerButtonProps}\n        id={tabId}\n        key={itemKey}\n        className={isSelected ? this._classNames.linkIsSelected : this._classNames.link}\n        onClick={this._onLinkClick.bind(this, itemKey)}\n        onKeyPress={this._onKeyPress.bind(this, itemKey)}\n        ariaLabel={link.ariaLabel}\n        role=\"tab\"\n        aria-selected={isSelected}\n        name={link.headerText}\n        keytipProps={link.keytipProps}\n        data-content={contentString}\n      >\n        {linkContent}\n      </CommandButton>\n    );\n  };\n\n  private _renderLinkContent = (link: IPivotItemProps): JSX.Element => {\n    const { itemCount, itemIcon, headerText } = link;\n    const classNames = this._classNames;\n\n    return (\n      <span className={classNames.linkContent}>\n        {itemIcon !== undefined && (\n          <span className={classNames.icon}>\n            <Icon iconName={itemIcon} />\n          </span>\n        )}\n        {headerText !== undefined && <span className={classNames.text}> {link.headerText}</span>}\n        {itemCount !== undefined && <span className={classNames.count}> ({itemCount})</span>}\n      </span>\n    );\n  };\n\n  /**\n   * Renders the current Pivot Item\n   */\n  private _renderPivotItem(linkCollection: PivotLinkCollection, itemKey: string | undefined): JSX.Element | null {\n    if (this.props.headersOnly || !itemKey) {\n      return null;\n    }\n\n    const index = linkCollection.keyToIndexMapping[itemKey];\n    const selectedTabId = linkCollection.keyToTabIdMapping[itemKey];\n\n    return (\n      <div role=\"tabpanel\" aria-labelledby={selectedTabId} className={this._classNames.itemContainer}>\n        {React.Children.toArray(this.props.children)[index]}\n      </div>\n    );\n  }\n\n  /**\n   * Gets the set of PivotLinks as array of IPivotItemProps\n   * The set of Links is determined by child components of type PivotItem\n   */\n  private _getPivotLinks(props: IPivotProps): PivotLinkCollection {\n    const result: PivotLinkCollection = {\n      links: [],\n      keyToIndexMapping: {},\n      keyToTabIdMapping: {}\n    };\n\n    React.Children.map(React.Children.toArray(props.children), (child: any, index: number) => {\n      if (typeof child === 'object' && child.type === PivotItemType) {\n        const pivotItem = child as PivotItem;\n        const { linkText, ...pivotItemProps } = pivotItem.props;\n        const itemKey = pivotItem.props.itemKey || index.toString();\n\n        result.links.push({\n          // Use linkText (deprecated) if headerText is not provided\n          headerText: linkText,\n          ...pivotItemProps,\n          itemKey: itemKey\n        });\n        result.keyToIndexMapping[itemKey] = index;\n        result.keyToTabIdMapping[itemKey] = this._getTabId(itemKey, index);\n      } else {\n        warn('The children of a Pivot component must be of type PivotItem to be rendered.');\n      }\n    });\n\n    return result;\n  }\n\n  /**\n   * Generates the Id for the tab button.\n   */\n  private _getTabId(itemKey: string, index: number): string {\n    if (this.props.getTabId) {\n      return this.props.getTabId(itemKey, index);\n    }\n\n    return this._pivotId + `-Tab${index}`;\n  }\n\n  /**\n   * whether the key exists in the pivot items.\n   */\n  private _isKeyValid(linkCollection: PivotLinkCollection, itemKey: string | null | undefined): boolean {\n    return itemKey !== undefined && itemKey !== null && linkCollection.keyToIndexMapping[itemKey] !== undefined;\n  }\n\n  /**\n   * Handles the onClick event on PivotLinks\n   */\n  private _onLinkClick(itemKey: string, ev: React.MouseEvent<HTMLElement>): void {\n    ev.preventDefault();\n    this._updateSelectedItem(itemKey, ev);\n  }\n\n  /**\n   * Handle the onKeyPress eventon the PivotLinks\n   */\n  private _onKeyPress(itemKey: string, ev: React.KeyboardEvent<HTMLElement>): void {\n    if (ev.which === KeyCodes.enter) {\n      ev.preventDefault();\n      this._updateSelectedItem(itemKey);\n    }\n  }\n\n  /**\n   * Updates the state with the new selected index\n   */\n  private _updateSelectedItem(itemKey: string, ev?: React.MouseEvent<HTMLElement>): void {\n    this.setState({\n      selectedKey: itemKey\n    });\n\n    const linkCollection = this._getPivotLinks(this.props);\n\n    if (this.props.onLinkClick && linkCollection.keyToIndexMapping[itemKey] >= 0) {\n      const index = linkCollection.keyToIndexMapping[itemKey];\n\n      // React.Element<any> cannot directly convert to PivotItem.\n      const item = React.Children.toArray(this.props.children)[index] as any;\n\n      if (typeof item === 'object' && item.type === PivotItemType) {\n        this.props.onLinkClick(item as PivotItem, ev);\n      }\n    }\n  }\n\n  private _getClassNames(props: IPivotProps): { [key in keyof IPivotStyles]: string } {\n    const { theme } = props;\n    const rootIsLarge: boolean = props.linkSize === PivotLinkSize.large;\n    const rootIsTabs: boolean = props.linkFormat === PivotLinkFormat.tabs;\n\n    return getClassNames(props.styles!, {\n      theme: theme!,\n      rootIsLarge,\n      rootIsTabs\n    });\n  }\n}\n"]}
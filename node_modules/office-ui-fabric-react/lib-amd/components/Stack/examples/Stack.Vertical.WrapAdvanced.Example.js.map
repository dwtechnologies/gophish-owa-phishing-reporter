{"version":3,"file":"Stack.Vertical.WrapAdvanced.Example.js","sourceRoot":"../src/","sources":["components/Stack/examples/Stack.Vertical.WrapAdvanced.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Dropdown, IDropdownOption } from 'office-ui-fabric-react/lib/Dropdown';\nimport { Slider } from 'office-ui-fabric-react/lib/Slider';\nimport { Stack, IStackStyles, IStackTokens, IStackProps } from 'office-ui-fabric-react/lib/Stack';\nimport { DefaultPalette } from 'office-ui-fabric-react/lib/Styling';\n\nexport type Overflow = 'visible' | 'auto' | 'hidden';\n\nexport interface IExampleOptions {\n  stackWidth: number;\n  containerHeight: number;\n  horizontalAlignment: IStackProps['horizontalAlign'];\n  verticalAlignment: IStackProps['verticalAlign'];\n  overflow: Overflow;\n}\n\n// Non-mutating styles definition\nconst itemStyles: React.CSSProperties = {\n  alignItems: 'center',\n  background: DefaultPalette.themePrimary,\n  color: DefaultPalette.white,\n  display: 'flex',\n  height: 50,\n  justifyContent: 'center',\n  width: 50\n};\n\nconst VerticalStackWrapAdvancedExampleContent: React.FunctionComponent<IExampleOptions> = props => {\n  const { stackWidth, containerHeight, overflow, horizontalAlignment, verticalAlignment } = props;\n\n  // Mutating styles definition\n  const stackStyles: IStackStyles = {\n    root: {\n      background: DefaultPalette.themeTertiary,\n      overflow,\n      width: `${stackWidth}%`\n    }\n  };\n  const containerStyles: React.CSSProperties = { height: containerHeight };\n\n  return (\n    <div style={containerStyles}>\n      <Stack wrap horizontalAlign={horizontalAlignment} verticalAlign={verticalAlignment} styles={stackStyles} tokens={wrapStackTokens}>\n        <span style={itemStyles}>1</span>\n        <span style={itemStyles}>2</span>\n        <span style={itemStyles}>3</span>\n        <span style={itemStyles}>4</span>\n        <span style={itemStyles}>5</span>\n      </Stack>\n    </div>\n  );\n};\n\n// Tokens definition\nconst sectionStackTokens: IStackTokens = { childrenGap: 10 };\nconst wrapStackTokens: IStackTokens = { childrenGap: 20 };\n\nexport class VerticalStackWrapAdvancedExample extends React.Component<{}, IExampleOptions> {\n  public state: IExampleOptions = {\n    stackWidth: 100,\n    containerHeight: 420,\n    horizontalAlignment: 'start',\n    verticalAlignment: 'start',\n    overflow: 'visible'\n  };\n  private _horizontalAlignmentOptions: IDropdownOption[] = [\n    { key: 'start', text: 'Left' },\n    { key: 'center', text: 'Center' },\n    { key: 'end', text: 'Right' }\n  ];\n  private _verticalAlignmentOptions: IDropdownOption[] = [\n    { key: 'start', text: 'Top' },\n    { key: 'center', text: 'Center' },\n    { key: 'end', text: 'Bottom' },\n    { key: 'space-around', text: 'Space around' },\n    { key: 'space-between', text: 'Space between' },\n    { key: 'space-evenly', text: 'Space evenly' }\n  ];\n  private _overflowOptions: IDropdownOption[] = [\n    { key: 'visible', text: 'Visible' },\n    { key: 'auto', text: 'Auto' },\n    { key: 'hidden', text: 'Hidden' }\n  ];\n\n  public render(): JSX.Element {\n    const { overflow, horizontalAlignment, verticalAlignment } = this.state;\n\n    return (\n      <Stack tokens={sectionStackTokens}>\n        <Stack horizontal>\n          <Stack.Item grow>\n            <Slider label=\"Stack height:\" min={1} max={420} step={1} defaultValue={420} showValue={true} onChange={this._onHeightChange} />\n          </Stack.Item>\n          <Stack.Item grow>\n            <Slider\n              label=\"Container width:\"\n              min={1}\n              max={100}\n              step={1}\n              defaultValue={100}\n              showValue={true}\n              onChange={this._onWidthChange}\n            />\n          </Stack.Item>\n        </Stack>\n\n        <Stack horizontal tokens={wrapStackTokens}>\n          <Stack.Item grow>\n            <Dropdown\n              selectedKey={horizontalAlignment}\n              placeholder=\"Select Horizontal Alignment\"\n              label=\"Horizontal alignment:\"\n              options={this._horizontalAlignmentOptions}\n              onChange={this._onHorizontalAlignChange}\n            />\n          </Stack.Item>\n          <Stack.Item grow>\n            <Dropdown\n              selectedKey={verticalAlignment}\n              placeholder=\"Select Vertical Alignment\"\n              label=\"Vertical alignment:\"\n              options={this._verticalAlignmentOptions}\n              onChange={this._onVerticalAlignChange}\n            />\n          </Stack.Item>\n          <Stack.Item grow>\n            <Dropdown\n              selectedKey={overflow}\n              placeholder=\"Select Overflow\"\n              label=\"Overflow:\"\n              options={this._overflowOptions}\n              onChange={this._onOverflowChange}\n            />\n          </Stack.Item>\n        </Stack>\n\n        <VerticalStackWrapAdvancedExampleContent {...this.state} />\n      </Stack>\n    );\n  }\n\n  private _onWidthChange = (value: number): void => {\n    this.setState({ stackWidth: value });\n  };\n\n  private _onHeightChange = (value: number): void => {\n    this.setState({ containerHeight: value });\n  };\n\n  private _onHorizontalAlignChange = (ev: React.FormEvent<HTMLDivElement>, option: IDropdownOption): void => {\n    this.setState({ horizontalAlignment: option.key as IStackProps['horizontalAlign'] });\n  };\n\n  private _onVerticalAlignChange = (ev: React.FormEvent<HTMLDivElement>, option: IDropdownOption): void => {\n    this.setState({ verticalAlignment: option.key as IStackProps['verticalAlign'] });\n  };\n\n  private _onOverflowChange = (ev: React.FormEvent<HTMLDivElement>, option: IDropdownOption): void => {\n    this.setState({ overflow: option.key as Overflow });\n  };\n}\n"]}
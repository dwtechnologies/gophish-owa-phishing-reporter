{"version":3,"file":"ContextualMenu.Checkmarks.Example.js","sourceRoot":"../src/","sources":["components/ContextualMenu/examples/ContextualMenu.Checkmarks.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { IContextualMenuItem, ContextualMenuItemType, DirectionalHint } from 'office-ui-fabric-react/lib/ContextualMenu';\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport './ContextualMenuExample.scss';\n\nexport interface IContextualMenuMultiselectExampleState {\n  selection?: { [key: string]: boolean };\n}\n\nconst keys: string[] = [\n  'newItem',\n  'share',\n  'mobile',\n  'enablePrint',\n  'enableMusic',\n  'newSub',\n  'emailMessage',\n  'calendarEvent',\n  'disabledNewSub',\n  'disabledEmailMessage',\n  'disabledCalendarEvent',\n  'splitButtonSubMenuLeftDirection',\n  'emailMessageLeft',\n  'calendarEventLeft',\n  'disabledPrimarySplit'\n];\n\nexport class ContextualMenuCheckmarksExample extends React.Component<{}, IContextualMenuMultiselectExampleState> {\n  constructor(props: {}) {\n    super(props);\n\n    this._onToggleSelect = this._onToggleSelect.bind(this);\n\n    this.state = {\n      selection: {}\n    };\n  }\n\n  public render(): JSX.Element {\n    const { selection } = this.state;\n\n    return (\n      <DefaultButton\n        text=\"Click for ContextualMenu\"\n        menuProps={{\n          shouldFocusOnMount: true,\n          items: [\n            {\n              key: keys[0],\n              text: 'New',\n              canCheck: true,\n              isChecked: selection![keys[0]],\n              onClick: this._onToggleSelect\n            },\n            {\n              key: keys[1],\n              text: 'Share',\n              canCheck: true,\n              isChecked: selection![keys[1]],\n              onClick: this._onToggleSelect\n            },\n            {\n              key: keys[2],\n              text: 'Mobile',\n              canCheck: true,\n              isChecked: selection![keys[2]],\n              onClick: this._onToggleSelect\n            },\n            {\n              key: 'divider_1',\n              itemType: ContextualMenuItemType.Divider\n            },\n\n            {\n              key: keys[3],\n              text: 'Print',\n              canCheck: true,\n              isChecked: selection![keys[3]],\n              onClick: this._onToggleSelect\n            },\n            {\n              key: keys[4],\n              text: 'Music',\n              canCheck: true,\n              isChecked: selection![keys[4]],\n              onClick: this._onToggleSelect\n            },\n            {\n              key: keys[5],\n              iconProps: {\n                iconName: 'MusicInCollectionFill'\n              },\n              subMenuProps: {\n                items: [\n                  {\n                    key: keys[6],\n                    text: 'Email message',\n                    canCheck: true,\n                    isChecked: selection![keys[6]],\n                    onClick: this._onToggleSelect\n                  },\n                  {\n                    key: keys[7],\n                    text: 'Calendar event',\n                    canCheck: true,\n                    isChecked: selection![keys[7]],\n                    onClick: this._onToggleSelect\n                  }\n                ]\n              },\n              text: 'Split Button',\n              canCheck: true,\n              isChecked: selection![keys[5]],\n              split: true,\n              onClick: this._onToggleSelect\n            },\n            {\n              key: keys[8],\n              iconProps: {\n                iconName: 'MusicInCollectionFill'\n              },\n              subMenuProps: {\n                items: [\n                  {\n                    key: keys[9],\n                    text: 'Email message',\n                    canCheck: true,\n                    isChecked: selection![keys[9]],\n                    onClick: this._onToggleSelect\n                  },\n                  {\n                    key: keys[10],\n                    text: 'Calendar event',\n                    canCheck: true,\n                    isChecked: selection![keys[10]],\n                    onClick: this._onToggleSelect\n                  }\n                ]\n              },\n              text: 'Split Button',\n              canCheck: true,\n              isChecked: selection![keys[8]],\n              split: true,\n              onClick: this._onToggleSelect,\n              disabled: true\n            },\n            {\n              key: keys[11],\n              iconProps: {\n                iconName: 'MusicInCollectionFill'\n              },\n              subMenuProps: {\n                directionalHint: DirectionalHint.leftCenter,\n                items: [\n                  {\n                    key: keys[12],\n                    text: 'Email message',\n                    canCheck: true,\n                    isChecked: selection![keys[12]],\n                    onClick: this._onToggleSelect\n                  },\n                  {\n                    key: keys[13],\n                    text: 'Calendar event',\n                    canCheck: true,\n                    isChecked: selection![keys[13]],\n                    onClick: this._onToggleSelect\n                  }\n                ]\n              },\n              text: 'Split Button Left Menu',\n              canCheck: true,\n              isChecked: selection![keys[11]],\n              split: true,\n              onClick: this._onToggleSelect\n            },\n            {\n              key: keys[12],\n              iconProps: {\n                iconName: 'MusicInCollectionFill'\n              },\n              subMenuProps: {\n                items: [\n                  {\n                    key: keys[12],\n                    name: 'Email message',\n                    canCheck: true,\n                    isChecked: selection![keys[12]],\n                    onClick: this._onToggleSelect\n                  }\n                ]\n              },\n              name: 'Split Button Disabled Primary',\n              split: true,\n              primaryDisabled: true\n            }\n          ]\n        }}\n      />\n    );\n  }\n\n  private _onToggleSelect(ev?: React.MouseEvent<HTMLButtonElement>, item?: IContextualMenuItem): void {\n    const { selection } = this.state;\n    ev!.preventDefault();\n    selection![item!.key] = !selection![item!.key];\n\n    this.setState({\n      selection: selection\n    });\n  }\n}\n"]}
{"version":3,"file":"ContextualMenu.Directional.Example.js","sourceRoot":"../src/","sources":["components/ContextualMenu/examples/ContextualMenu.Directional.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport { Checkbox } from 'office-ui-fabric-react/lib/Checkbox';\nimport { DirectionalHint, ContextualMenuItemType } from 'office-ui-fabric-react/lib/ContextualMenu';\nimport { Dropdown, IDropdownOption } from 'office-ui-fabric-react/lib/Dropdown';\nimport { getRTL } from 'office-ui-fabric-react/lib/Utilities';\nimport './ContextualMenuExample.scss';\n\nexport interface IContextualMenuDirectionalExampleState {\n  directionalHint?: DirectionalHint;\n  directionalHintForRTL?: DirectionalHint;\n  useDirectionalHintForRtl?: boolean;\n  isBeakVisible?: boolean;\n  gapSpace?: number;\n  beakWidth?: number;\n  edgeFixed?: boolean;\n}\n\nconst DIRECTION_OPTIONS = [\n  { key: DirectionalHint.topLeftEdge, text: 'Top Left Edge' },\n  { key: DirectionalHint.topCenter, text: 'Top Center' },\n  { key: DirectionalHint.topRightEdge, text: 'Top Right Edge' },\n  { key: DirectionalHint.topAutoEdge, text: 'Top Auto Edge' },\n  { key: DirectionalHint.bottomLeftEdge, text: 'Bottom Left Edge' },\n  { key: DirectionalHint.bottomCenter, text: 'Bottom Center' },\n  { key: DirectionalHint.bottomRightEdge, text: 'Bottom Right Edge' },\n  { key: DirectionalHint.bottomAutoEdge, text: 'Bottom Auto Edge' },\n  { key: DirectionalHint.leftTopEdge, text: 'Left Top Edge' },\n  { key: DirectionalHint.leftCenter, text: 'Left Center' },\n  { key: DirectionalHint.leftBottomEdge, text: 'Left Bottom Edge' },\n  { key: DirectionalHint.rightTopEdge, text: 'Right Top Edge' },\n  { key: DirectionalHint.rightCenter, text: 'Right Center' },\n  { key: DirectionalHint.rightBottomEdge, text: 'Right Bottom Edge' }\n];\n\nexport class ContextualMenuDirectionalExample extends React.Component<{}, IContextualMenuDirectionalExampleState> {\n  public constructor(props: {}) {\n    super(props);\n\n    this.state = {\n      isBeakVisible: false,\n      directionalHint: DirectionalHint.bottomLeftEdge,\n      directionalHintForRTL: DirectionalHint.bottomLeftEdge,\n      useDirectionalHintForRtl: false,\n      gapSpace: 0,\n      beakWidth: 20,\n      edgeFixed: false\n    };\n  }\n\n  public render(): JSX.Element {\n    const { beakWidth, directionalHint, directionalHintForRTL, edgeFixed, gapSpace, isBeakVisible, useDirectionalHintForRtl } = this.state;\n\n    return (\n      <div className=\"ms-ContextualMenuDirectionalExample\">\n        <div className=\"ms-ContextualMenuDirectionalExample-configArea\">\n          <Checkbox styles={{ root: { margin: '10px 0' } }} label=\"Show beak\" checked={isBeakVisible} onChange={this._onShowBeakChange} />\n          <Dropdown\n            label=\"Directional hint\"\n            selectedKey={directionalHint!}\n            options={DIRECTION_OPTIONS}\n            onChange={this._onDirectionalChanged}\n          />\n          {getRTL() && <Checkbox label=\"Use RTL directional hint\" checked={useDirectionalHintForRtl} onChange={this._onUseRtlHintChange} />}\n          {getRTL() && (\n            <Dropdown\n              label=\"Directional hint for RTL\"\n              selectedKey={directionalHintForRTL!}\n              options={DIRECTION_OPTIONS}\n              onChange={this._onDirectionalRtlChanged}\n              disabled={!useDirectionalHintForRtl}\n            />\n          )}\n        </div>\n        <div className=\"ms-ContextualMenuDirectionalExample-buttonArea\">\n          <DefaultButton\n            text=\"Show context menu\"\n            menuProps={{\n              isBeakVisible: isBeakVisible,\n              directionalHint: directionalHint,\n              directionalHintForRTL: useDirectionalHintForRtl ? directionalHintForRTL : undefined,\n              gapSpace: gapSpace,\n              beakWidth: beakWidth,\n              directionalHintFixed: edgeFixed,\n              items: [\n                {\n                  key: 'newItem',\n                  text: 'New'\n                },\n                {\n                  key: 'divider_1',\n                  itemType: ContextualMenuItemType.Divider\n                },\n                {\n                  key: 'rename',\n                  text: 'Rename'\n                },\n                {\n                  key: 'edit',\n                  text: 'Edit'\n                },\n                {\n                  key: 'properties',\n                  text: 'Properties'\n                },\n                {\n                  key: 'disabled',\n                  text: 'Disabled item',\n                  disabled: true\n                }\n              ]\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  private _onShowBeakChange = (event: React.FormEvent<HTMLElement>, isVisible: boolean): void => {\n    this.setState({\n      isBeakVisible: isVisible\n    });\n  };\n\n  private _onUseRtlHintChange = (event: React.FormEvent<HTMLElement>, isVisible: boolean): void => {\n    this.setState({\n      useDirectionalHintForRtl: isVisible\n    });\n  };\n\n  private _onDirectionalChanged = (event: React.FormEvent<HTMLDivElement>, option: IDropdownOption): void => {\n    this.setState({\n      directionalHint: option.key as DirectionalHint\n    });\n  };\n\n  private _onDirectionalRtlChanged = (event: React.FormEvent<HTMLDivElement>, option: IDropdownOption): void => {\n    this.setState({\n      directionalHintForRTL: option.key as DirectionalHint\n    });\n  };\n}\n"]}
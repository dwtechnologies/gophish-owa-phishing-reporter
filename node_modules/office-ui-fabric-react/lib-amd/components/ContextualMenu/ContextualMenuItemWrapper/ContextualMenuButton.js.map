{"version":3,"file":"ContextualMenuButton.js","sourceRoot":"../src/","sources":["components/ContextualMenu/ContextualMenuItemWrapper/ContextualMenuButton.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { buttonProperties, getNativeProps, memoizeFunction } from '../../../Utilities';\nimport { ContextualMenuItemWrapper } from './ContextualMenuItemWrapper';\nimport { KeytipData } from '../../../KeytipData';\nimport { getIsChecked, isItemDisabled, hasSubmenu } from '../../../utilities/contextualMenu/index';\nimport { ContextualMenuItem } from '../ContextualMenuItem';\nimport { IKeytipDataProps } from '../../KeytipData/KeytipData.types';\nimport { IKeytipProps } from '../../Keytip/Keytip.types';\n\nexport class ContextualMenuButton extends ContextualMenuItemWrapper {\n  private _btn = React.createRef<HTMLButtonElement>();\n\n  private _getMemoizedMenuButtonKeytipProps = memoizeFunction((keytipProps: IKeytipProps) => {\n    return {\n      ...keytipProps,\n      hasMenu: true\n    };\n  });\n\n  public render() {\n    const {\n      item,\n      classNames,\n      index,\n      focusableElementIndex,\n      totalItemCount,\n      hasCheckmarks,\n      hasIcons,\n      contextualMenuItemAs: ChildrenRenderer = ContextualMenuItem,\n      expandedMenuItemKey,\n      onItemMouseDown,\n      onItemClick,\n      openSubMenu,\n      dismissSubMenu,\n      dismissMenu\n    } = this.props;\n\n    const subMenuId = this._getSubMenuId(item);\n\n    const isChecked: boolean | null | undefined = getIsChecked(item);\n    const canCheck: boolean = isChecked !== null;\n    const defaultRole = canCheck ? 'menuitemcheckbox' : 'menuitem';\n    const itemHasSubmenu = hasSubmenu(item);\n    const { itemProps, ariaLabel } = item;\n\n    const buttonNativeProperties = getNativeProps<React.ButtonHTMLAttributes<HTMLButtonElement>>(item, buttonProperties);\n    // Do not add the disabled attribute to the button so that it is focusable\n    delete buttonNativeProperties.disabled;\n\n    const itemButtonProperties = {\n      className: classNames.root,\n      onClick: this._onItemClick,\n      onKeyDown: itemHasSubmenu ? this._onItemKeyDown : undefined,\n      onMouseEnter: this._onItemMouseEnter,\n      onMouseLeave: this._onItemMouseLeave,\n      onMouseDown: (ev: React.MouseEvent<HTMLButtonElement>) => (onItemMouseDown ? onItemMouseDown(item, ev) : undefined),\n      onMouseMove: this._onItemMouseMove,\n      href: item.href,\n      title: item.title,\n      'aria-label': ariaLabel,\n      'aria-haspopup': itemHasSubmenu || undefined,\n      'aria-owns': item.key === expandedMenuItemKey ? subMenuId : undefined,\n      'aria-expanded': itemHasSubmenu ? item.key === expandedMenuItemKey : undefined,\n      'aria-checked': canCheck ? !!isChecked : undefined,\n      'aria-posinset': focusableElementIndex + 1,\n      'aria-setsize': totalItemCount,\n      'aria-disabled': isItemDisabled(item),\n      role: item.role || defaultRole,\n      style: item.style\n    };\n\n    let { keytipProps } = item;\n    if (keytipProps && itemHasSubmenu) {\n      keytipProps = this._getMemoizedMenuButtonKeytipProps(keytipProps);\n    }\n\n    return (\n      <KeytipData keytipProps={keytipProps} ariaDescribedBy={buttonNativeProperties['aria-describedby']} disabled={isItemDisabled(item)}>\n        {(keytipAttributes: IKeytipDataProps): JSX.Element => (\n          <button ref={this._btn} {...buttonNativeProperties} {...itemButtonProperties} {...keytipAttributes}>\n            <ChildrenRenderer\n              componentRef={item.componentRef}\n              item={item}\n              classNames={classNames}\n              index={index}\n              onCheckmarkClick={hasCheckmarks && onItemClick ? onItemClick : undefined}\n              hasIcons={hasIcons}\n              openSubMenu={openSubMenu}\n              dismissSubMenu={dismissSubMenu}\n              dismissMenu={dismissMenu}\n              getSubmenuTarget={this._getSubmenuTarget}\n              {...itemProps}\n            />\n          </button>\n        )}\n      </KeytipData>\n    );\n  }\n\n  protected _getSubmenuTarget = (): HTMLElement | undefined => {\n    return this._btn.current ? this._btn.current : undefined;\n  };\n}\n"]}
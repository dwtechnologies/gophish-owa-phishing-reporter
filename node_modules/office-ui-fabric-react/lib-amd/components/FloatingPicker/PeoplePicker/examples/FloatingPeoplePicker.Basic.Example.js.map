{"version":3,"file":"FloatingPeoplePicker.Basic.Example.js","sourceRoot":"../src/","sources":["components/FloatingPicker/PeoplePicker/examples/FloatingPeoplePicker.Basic.Example.tsx"],"names":[],"mappings":";;;IAiBA;QAAsD,4DAA8C;QAIlG,0CAAY,KAAS;YAArB,YACE,kBAAM,KAAK,CAAC,SAMb;YAVO,aAAO,GAAG,KAAK,CAAC,SAAS,EAAuB,CAAC;YAuDjD,cAAQ,GAAG;gBACjB,IAAI,KAAI,CAAC,OAAO,CAAC,OAAO,EAAE;oBACxB,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC;iBACnC;YACH,CAAC,CAAC;YAEM,yBAAmB,GAAG,UAAC,GAA0B;gBACvD,IAAM,aAAa,GAAG,GAAG,IAAI,GAAG,CAAC,sBAAsB,CAAC,oBAAoB,CAAC,CAAC;gBAC9E,IAAI,aAAa,IAAI,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC7C,KAAI,CAAC,aAAa,GAAG,aAAa,CAAC,CAAC,CAAqB,CAAC;iBAC3D;YACH,CAAC,CAAC;YAEM,qBAAe,GAAG,UAAC,EAAuC,EAAE,QAAgB;gBAClF,IAAI,QAAQ,KAAK,KAAI,CAAC,KAAK,CAAC,WAAW,IAAI,KAAI,CAAC,OAAO,CAAC,OAAO,EAAE;oBAC/D,KAAI,CAAC,QAAQ,CAAC,EAAE,WAAW,EAAE,QAAQ,EAAE,CAAC,CAAC;oBACzC,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;iBACrD;YACH,CAAC,CAAC;YAEM,qBAAe,GAAG,UAAC,kBAAiC;gBAC1D,KAAI,CAAC,QAAQ,CAAC,EAAE,WAAW,EAAE,kBAAkB,CAAC,IAAI,IAAI,EAAE,EAAE,CAAC,CAAC;gBAC9D,IAAI,KAAI,CAAC,OAAO,CAAC,OAAO,EAAE;oBACxB,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC;iBACnC;YACH,CAAC,CAAC;YAEM,yBAAmB,GAAG,UAAC,IAAmB;gBACxC,IAAA,mCAAU,CAAgB;gBAClC,IAAM,SAAS,GAAG,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBAE3C,IAAI,SAAS,IAAI,CAAC,EAAE;oBAClB,KAAI,CAAC,QAAQ,CAAC;wBACZ,UAAU,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;qBACnF,CAAC,CAAC;iBACJ;YACH,CAAC,CAAC;YAEM,sBAAgB,GAAG,UAAC,UAAkB,EAAE,eAAiC;gBAC/E,IAAI,UAAU,EAAE;oBACd,gFAAgF;oBAChF,OAAO,KAAI,CAAC,KAAK,CAAC,UAAU;yBACzB,MAAM,CAAC,UAAC,IAAmB,IAAK,OAAA,WAAW,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE,EAAE,UAAU,CAAC,EAAxC,CAAwC,CAAC;yBACzE,MAAM,CAAC,UAAC,OAAsB,IAAK,OAAA,CAAC,KAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,eAAe,CAAC,EAApD,CAAoD,CAAC,CAAC;iBAC7F;gBACD,OAAO,EAAE,CAAC;YACZ,CAAC,CAAC;YAEM,sBAAgB,GAAG,UAAC,OAAsB;gBAChD,OAAO,OAAO,CAAC,IAAI,IAAI,EAAE,CAAC;YAC5B,CAAC,CAAC;YAMM,oBAAc,GAAG,UAAC,KAAa;gBACrC,OAAO,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;YACnC,CAAC,CAAC;YA3GA,KAAI,CAAC,KAAK,GAAG;gBACX,UAAU,EAAE,qBAAM;gBAClB,WAAW,EAAE,EAAE;aAChB,CAAC;;QACJ,CAAC;QAEM,iDAAM,GAAb;YAAA,iBAyCC;YAxCC,IAAM,eAAe,GAAuC;gBAC1D,gBAAgB,EAAE;oBAChB;wBACE,UAAU,EAAE;4BACV,IAAM,MAAM,GAAG,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC;4BACpC,OAAO;;gCAAc,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;2CAAe,CAAC;wBAC7E,CAAC;wBACD,UAAU,EAAE;4BACV,IAAM,MAAM,GAAG,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC;4BACpC,OAAO,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC;wBACnD,CAAC;qBACF;iBACF;aACF,CAAC;YAEF,OAAO,CACL;gBACE,6BAAK,KAAK,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,mBAAmB;oBACvD,oBAAC,qBAAS,IACR,WAAW,EAAC,mBAAmB,EAC/B,QAAQ,EAAE,IAAI,CAAC,eAAe,EAC9B,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,EAC7B,OAAO,EAAE,IAAI,CAAC,QAAQ,GACtB,CACE;gBACN,oBAAC,qCAAoB,IACnB,gBAAgB,EAAE,IAAI,iCAAgB,EAAiB,EACvD,oBAAoB,EAAE,IAAI,CAAC,gBAAgB,EAC3C,eAAe,EAAE,IAAI,CAAC,gBAAgB,EACtC,sBAAsB,EAAE,eAAe,EACvC,GAAG,EAAC,QAAQ,EACZ,kBAAkB,EAAE,IAAI,CAAC,mBAAmB,EAC5C,eAAe,EAAE,IAAI,CAAC,cAAc,EACpC,YAAY,EAAE,IAAI,CAAC,OAAO,EAC1B,QAAQ,EAAE,IAAI,CAAC,eAAe,EAC9B,YAAY,EAAE,IAAI,CAAC,aAAa,EAChC,YAAY,EAAE,GAAG,GACjB,CACE,CACP,CAAC;QACJ,CAAC;QAsDO,+DAAoB,GAA5B,UAA6B,OAAsB,EAAE,QAA0B;YAC7E,OAAO,CAAC,CAAC,QAAQ,IAAI,QAAQ,CAAC,IAAI,CAAC,UAAC,IAAmB,IAAK,OAAA,IAAI,CAAC,IAAI,KAAK,OAAO,CAAC,IAAI,EAA1B,CAA0B,CAAC,CAAC;QAC1F,CAAC;QAKH,uCAAC;IAAD,CAAC,AAnHD,CAAsD,KAAK,CAAC,SAAS,GAmHpE;IAnHY,4EAAgC;IAqH7C,SAAS,WAAW,CAAC,IAAY,EAAE,UAAkB;QACnD,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC;IACpE,CAAC","sourcesContent":["import * as React from 'react';\n\nimport { IPersonaProps } from 'office-ui-fabric-react/lib/Persona';\nimport {\n  IBaseFloatingPicker,\n  IBaseFloatingPickerSuggestionProps,\n  FloatingPeoplePicker,\n  SuggestionsStore\n} from 'office-ui-fabric-react/lib/FloatingPicker';\nimport { SearchBox } from 'office-ui-fabric-react/lib/SearchBox';\nimport { people } from '@uifabric/example-data';\n\nexport interface IPeoplePickerExampleState {\n  peopleList: IPersonaProps[];\n  searchValue: string;\n}\n\nexport class FloatingPeoplePickerTypesExample extends React.Component<{}, IPeoplePickerExampleState> {\n  private _picker = React.createRef<IBaseFloatingPicker>();\n  private _inputElement: HTMLInputElement;\n\n  constructor(props: {}) {\n    super(props);\n\n    this.state = {\n      peopleList: people,\n      searchValue: ''\n    };\n  }\n\n  public render(): JSX.Element {\n    const suggestionProps: IBaseFloatingPickerSuggestionProps = {\n      footerItemsProps: [\n        {\n          renderItem: () => {\n            const picker = this._picker.current;\n            return <div>Showing {picker ? picker.suggestions.length : 0} results</div>;\n          },\n          shouldShow: () => {\n            const picker = this._picker.current;\n            return !!picker && picker.suggestions.length > 0;\n          }\n        }\n      ]\n    };\n\n    return (\n      <div>\n        <div style={{ width: 208 }} ref={this._setInputElementRef}>\n          <SearchBox\n            placeholder=\"Search for person\"\n            onChange={this._onSearchChange}\n            value={this.state.searchValue}\n            onFocus={this._onFocus}\n          />\n        </div>\n        <FloatingPeoplePicker\n          suggestionsStore={new SuggestionsStore<IPersonaProps>()}\n          onResolveSuggestions={this._onFilterChanged}\n          getTextFromItem={this._getTextFromItem}\n          pickerSuggestionsProps={suggestionProps}\n          key=\"normal\"\n          onRemoveSuggestion={this._onRemoveSuggestion}\n          onValidateInput={this._validateInput}\n          componentRef={this._picker}\n          onChange={this._onPickerChange}\n          inputElement={this._inputElement}\n          resolveDelay={300}\n        />\n      </div>\n    );\n  }\n\n  private _onFocus = (): void => {\n    if (this._picker.current) {\n      this._picker.current.showPicker();\n    }\n  };\n\n  private _setInputElementRef = (ref: HTMLDivElement | null) => {\n    const inputElements = ref && ref.getElementsByClassName('ms-SearchBox-field');\n    if (inputElements && inputElements.length > 0) {\n      this._inputElement = inputElements[0] as HTMLInputElement;\n    }\n  };\n\n  private _onSearchChange = (ev: React.ChangeEvent<HTMLInputElement>, newValue: string): void => {\n    if (newValue !== this.state.searchValue && this._picker.current) {\n      this.setState({ searchValue: newValue });\n      this._picker.current.onQueryStringChanged(newValue);\n    }\n  };\n\n  private _onPickerChange = (selectedSuggestion: IPersonaProps): void => {\n    this.setState({ searchValue: selectedSuggestion.text || '' });\n    if (this._picker.current) {\n      this._picker.current.hidePicker();\n    }\n  };\n\n  private _onRemoveSuggestion = (item: IPersonaProps): void => {\n    const { peopleList } = this.state;\n    const itemIndex = peopleList.indexOf(item);\n\n    if (itemIndex >= 0) {\n      this.setState({\n        peopleList: peopleList.slice(0, itemIndex).concat(peopleList.slice(itemIndex + 1))\n      });\n    }\n  };\n\n  private _onFilterChanged = (filterText: string, currentPersonas?: IPersonaProps[]): IPersonaProps[] => {\n    if (filterText) {\n      // Filter by items starting with the current filter text, then remove duplicates\n      return this.state.peopleList\n        .filter((item: IPersonaProps) => _startsWith(item.text || '', filterText))\n        .filter((persona: IPersonaProps) => !this._listContainsPersona(persona, currentPersonas));\n    }\n    return [];\n  };\n\n  private _getTextFromItem = (persona: IPersonaProps): string => {\n    return persona.text || '';\n  };\n\n  private _listContainsPersona(persona: IPersonaProps, personas?: IPersonaProps[]): boolean {\n    return !!personas && personas.some((item: IPersonaProps) => item.text === persona.text);\n  }\n\n  private _validateInput = (input: string): boolean => {\n    return input.indexOf('@') !== -1;\n  };\n}\n\nfunction _startsWith(text: string, filterText: string): boolean {\n  return text.toLowerCase().indexOf(filterText.toLowerCase()) === 0;\n}\n"]}
{"version":3,"file":"FloatingPeoplePicker.js","sourceRoot":"../src/","sources":["components/FloatingPicker/PeoplePicker/FloatingPeoplePicker.tsx"],"names":[],"mappings":";;;IAaA;;OAEG;IACH;QAA8C,oDAA6D;QAA3G;;QAA6G,CAAC;QAAD,+BAAC;IAAD,CAAC,AAA9G,CAA8C,uCAAkB,GAA8C;IAAjG,4DAAwB;IAErC;QAA0C,gDAAwB;QAAlE;;QAOA,CAAC;QANC,kCAAkC;QACpB,iCAAY,GAAQ;YAChC,uBAAuB,EAAE,UAAC,KAAoB,EAAE,SAAuC;gBACrF,OAAA,4CAAoB,sBAAM,KAAK,wBAAS,SAAS,EAAG;YAApD,CAAoD;YACtD,iBAAiB,EAAE,UAAU;SAC9B,CAAC;QACJ,2BAAC;KAAA,AAPD,CAA0C,wBAAwB,GAOjE;IAPY,oDAAoB;IASjC,SAAgB,UAAU,CAAC,IAAY,EAAE,OAAgB;QACvD,kCAAkC;QAClC,IAAM,gBAAgB,GAAQ;YAC5B,GAAG,EAAE,IAAI;YACT,WAAW,EAAE,IAAI;YACjB,aAAa,EAAE,GAAG;YAClB,OAAO,EAAE,OAAO;SACjB,CAAC;QAEF,IAAI,CAAC,OAAO,EAAE;YACZ,gBAAgB,CAAC,aAAa,GAAG,uBAAW,CAAC,IAAI,EAAE,kBAAM,EAAE,CAAC,CAAC;SAC9D;QAED,OAAO,gBAAgB,CAAC;IAC1B,CAAC;IAdD,gCAcC","sourcesContent":["import { getRTL, getInitials } from '../../../Utilities';\nimport { BaseFloatingPicker } from '../BaseFloatingPicker';\nimport { IBaseFloatingPickerProps } from '../BaseFloatingPicker.types';\nimport { SuggestionItemNormal } from './PeoplePickerItems/SuggestionItemDefault';\nimport { IPersonaProps } from '../../../Persona';\nimport './PeoplePicker.scss';\nimport { IBasePickerSuggestionsProps, ISuggestionModel } from '../../../Pickers';\n\n/**\n * {@docCategory FloatingPeoplePicker}\n */\nexport interface IPeopleFloatingPickerProps extends IBaseFloatingPickerProps<IPersonaProps> {}\n\n/**\n * {@docCategory FloatingPeoplePicker}\n */\nexport class BaseFloatingPeoplePicker extends BaseFloatingPicker<IPersonaProps, IPeopleFloatingPickerProps> {}\n\nexport class FloatingPeoplePicker extends BaseFloatingPeoplePicker {\n  // tslint:disable-next-line:no-any\n  public static defaultProps: any = {\n    onRenderSuggestionsItem: (props: IPersonaProps, itemProps?: IBasePickerSuggestionsProps) =>\n      SuggestionItemNormal({ ...props }, { ...itemProps }),\n    createGenericItem: createItem\n  };\n}\n\nexport function createItem(name: string, isValid: boolean): ISuggestionModel<IPersonaProps> {\n  // tslint:disable-next-line:no-any\n  const personaToConvert: any = {\n    key: name,\n    primaryText: name,\n    imageInitials: '!',\n    isValid: isValid\n  };\n\n  if (!isValid) {\n    personaToConvert.imageInitials = getInitials(name, getRTL());\n  }\n\n  return personaToConvert;\n}\n"]}
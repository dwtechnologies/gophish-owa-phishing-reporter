{"version":3,"file":"SearchBox.base.js","sourceRoot":"../src/","sources":["components/SearchBox/SearchBox.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { ISearchBoxProps, ISearchBoxStyleProps, ISearchBoxStyles } from './SearchBox.types';\nimport {\n  initializeComponentRef,\n  warnDeprecations,\n  EventGroup,\n  getId,\n  KeyCodes,\n  classNamesFunction,\n  getNativeProps,\n  inputProperties\n} from '../../Utilities';\n\nimport { IconButton } from '../../Button';\nimport { Icon } from '../../Icon';\n\nconst getClassNames = classNamesFunction<ISearchBoxStyleProps, ISearchBoxStyles>();\nconst COMPONENT_NAME = 'SearchBox';\n\nexport interface ISearchBoxState {\n  value?: string;\n  hasFocus?: boolean;\n}\n\nexport class SearchBoxBase extends React.Component<ISearchBoxProps, ISearchBoxState> {\n  public static defaultProps: Pick<ISearchBoxProps, 'disableAnimation' | 'clearButtonProps'> = {\n    disableAnimation: false,\n    clearButtonProps: { ariaLabel: 'Clear text' }\n  };\n\n  private _rootElement = React.createRef<HTMLDivElement>();\n  private _inputElement = React.createRef<HTMLInputElement>();\n  private _latestValue: string;\n  private _fallbackId: string;\n  private _events: EventGroup | undefined;\n\n  public constructor(props: ISearchBoxProps) {\n    super(props);\n\n    initializeComponentRef(this);\n\n    warnDeprecations(COMPONENT_NAME, props, {\n      labelText: 'placeholder',\n      defaultValue: 'value'\n    });\n\n    this._latestValue = props.value || '';\n    this._fallbackId = getId(COMPONENT_NAME);\n\n    this.state = {\n      value: this._latestValue,\n      hasFocus: false\n    };\n  }\n\n  // tslint:disable-next-line function-name\n  public UNSAFE_componentWillReceiveProps(newProps: ISearchBoxProps): void {\n    if (newProps.value !== undefined) {\n      this._latestValue = newProps.value;\n      // If the user passes in null, substitute an empty string\n      // (passing null is not allowed per typings, but users might do it anyway)\n      this.setState({\n        value: newProps.value || ''\n      });\n    }\n  }\n\n  // tslint:disable-next-line function-name\n  public UNSAFE_componentWillMount() {\n    if (this._events) {\n      this._events.dispose();\n    }\n  }\n\n  public render() {\n    const {\n      ariaLabel,\n      placeholder,\n      className,\n      disabled,\n      underlined,\n      styles,\n      labelText,\n      theme,\n      clearButtonProps,\n      disableAnimation,\n      iconProps,\n      id = this._fallbackId\n    } = this.props;\n    const { value, hasFocus } = this.state;\n    const placeholderValue = labelText === undefined ? placeholder : labelText;\n\n    const classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n      underlined,\n      hasFocus,\n      disabled,\n      hasInput: value!.length > 0,\n      disableAnimation\n    });\n\n    const nativeProps = getNativeProps<React.InputHTMLAttributes<HTMLInputElement>>(this.props, inputProperties, [\n      'className',\n      'placeholder',\n      'onFocus',\n      'onBlur',\n      'value'\n    ]);\n\n    return (\n      <div ref={this._rootElement} className={classNames.root} onFocusCapture={this._onFocusCapture}>\n        <div className={classNames.iconContainer} onClick={this._onClickFocus} aria-hidden={true}>\n          <Icon iconName=\"Search\" {...iconProps} className={classNames.icon} />\n        </div>\n        <input\n          {...nativeProps}\n          id={id}\n          className={classNames.field}\n          placeholder={placeholderValue}\n          onChange={this._onInputChange}\n          onInput={this._onInputChange}\n          onKeyDown={this._onKeyDown}\n          value={value}\n          disabled={disabled}\n          aria-label={ariaLabel ? ariaLabel : placeholder}\n          ref={this._inputElement}\n        />\n        {value!.length > 0 && (\n          <div className={classNames.clearButton}>\n            <IconButton\n              styles={{ root: { height: 'auto' }, icon: { fontSize: '12px' } }}\n              iconProps={{ iconName: 'Clear' }}\n              {...clearButtonProps}\n              onClick={this._onClearClick}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  /**\n   * Sets focus to the search box input field\n   */\n  public focus() {\n    if (this._inputElement.current) {\n      this._inputElement.current.focus();\n    }\n  }\n\n  /**\n   * Returns whether or not the SearchBox has focus\n   */\n  public hasFocus(): boolean {\n    return !!this.state.hasFocus;\n  }\n\n  private _onClear(ev: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement> | React.KeyboardEvent<HTMLElement>) {\n    this.props.onClear && this.props.onClear(ev);\n    if (!ev.defaultPrevented) {\n      this._latestValue = '';\n      this.setState({\n        value: ''\n      });\n      this._callOnChange(undefined, '');\n      ev.stopPropagation();\n      ev.preventDefault();\n\n      this.focus();\n    }\n  }\n\n  private _onClickFocus = () => {\n    const inputElement = this._inputElement.current;\n    if (inputElement) {\n      this.focus();\n      inputElement.selectionStart = inputElement.selectionEnd = 0;\n    }\n  };\n\n  private _onFocusCapture = (ev: React.FocusEvent<HTMLElement>) => {\n    this.setState({\n      hasFocus: true\n    });\n\n    if (!this._events) {\n      this._events = new EventGroup(this);\n    }\n    this._events.on(ev.currentTarget, 'blur', this._onBlur, true);\n\n    if (this.props.onFocus) {\n      this.props.onFocus(ev as React.FocusEvent<HTMLInputElement>);\n    }\n  };\n\n  private _onClearClick = (ev: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement>) => {\n    const { clearButtonProps } = this.props;\n\n    if (clearButtonProps && clearButtonProps.onClick) {\n      clearButtonProps.onClick(ev);\n    }\n\n    if (!ev.defaultPrevented) {\n      this._onClear(ev);\n    }\n  };\n\n  private _onKeyDown = (ev: React.KeyboardEvent<HTMLInputElement>) => {\n    switch (ev.which) {\n      case KeyCodes.escape:\n        this.props.onEscape && this.props.onEscape(ev);\n        if (!ev.defaultPrevented) {\n          this._onClear(ev);\n        }\n        break;\n\n      case KeyCodes.enter:\n        if (this.props.onSearch) {\n          this.props.onSearch(this.state.value);\n          break;\n        }\n        // if we don't handle the enter press then we shouldn't prevent default\n        return;\n\n      default:\n        this.props.onKeyDown && this.props.onKeyDown(ev);\n        if (!ev.defaultPrevented) {\n          return;\n        }\n    }\n\n    // We only get here if the keypress has been handled,\n    // or preventDefault was called in case of default keyDown handler\n    ev.preventDefault();\n    ev.stopPropagation();\n  };\n\n  private _onBlur = (ev: React.FocusEvent<HTMLInputElement>): void => {\n    if (this._events) {\n      this._events.off();\n    }\n    this.setState({\n      hasFocus: false\n    });\n\n    if (this.props.onBlur) {\n      this.props.onBlur(ev);\n    }\n  };\n\n  private _onInputChange = (ev: React.ChangeEvent<HTMLInputElement>) => {\n    const value = ev.target.value;\n\n    if (value === this._latestValue) {\n      return;\n    }\n    this._latestValue = value;\n\n    this.setState({ value });\n    this._callOnChange(ev, value);\n  };\n\n  private _callOnChange(ev?: React.ChangeEvent<HTMLInputElement>, newValue?: string): void {\n    const { onChange, onChanged } = this.props;\n\n    // Call @deprecated method.\n    if (onChanged) {\n      onChanged(newValue);\n    }\n\n    if (onChange) {\n      onChange(ev, newValue);\n    }\n  }\n}\n"]}
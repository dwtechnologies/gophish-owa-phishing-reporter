{"version":3,"file":"ThemeRulesStandard.js","sourceRoot":"../src/","sources":["components/ThemeGenerator/ThemeRulesStandard.ts"],"names":[],"mappings":";;;IAMA;;;;;6EAKyE;IAEzE;;kDAE8C;IAC9C,IAAY,SAIX;IAJD,WAAY,SAAS;QACnB,yDAAY,CAAA;QACZ,+DAAe,CAAA;QACf,+DAAe,CAAA;IACjB,CAAC,EAJW,SAAS,GAAT,iBAAS,KAAT,iBAAS,QAIpB;IAED,wDAAwD;IACxD,IAAY,WA0BX;IA1BD,WAAY,WAAW;QACrB,6DAAY,CAAA;QACZ,mEAAe,CAAA;QACf,6DAAY,CAAA;QACZ,yDAAU,CAAA;QACV,+DAAa,CAAA;QACb,iEAAc,CAAA;QACd,6DAAY,CAAA;QACZ,uDAAS,CAAA;QACT,2DAAW,CAAA;QAEX,uEAAiB,CAAA;QACjB,kEAAc,CAAA;QACd,8DAAY,CAAA;QACZ,8EAAoB,CAAA;QACpB,wEAAiB,CAAA;QACjB,0EAAkB,CAAA;QAClB,oEAAe,CAAA;QACf,uFAAuF;QACvF,sEAAgB,CAAA;QAChB,wEAAiB,CAAA;QACjB,kEAAc,CAAA;QACd,4DAAW,CAAA;QAEX,gDAAK,CAAA;QACL,gDAAK,CAAA,CAAC,qDAAqD;IAC7D,CAAC,EA1BW,WAAW,GAAX,mBAAW,KAAX,mBAAW,QA0BtB;IAED;gGAC4F;IAC5F,IAAY,kBAKX;IALD,WAAY,kBAAkB;QAC5B,+EAAc,CAAA;QACd,mEAAQ,CAAA;QACR,uFAAkB,CAAA;QAClB,2EAAY,CAAA;IACd,CAAC,EALW,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAK7B;IAED,SAAgB,yBAAyB;QACvC,IAAM,SAAS,GAAgB,EAAE,CAAC;QAElC,oCAAoC;QACpC,kEAAkE;QAClE,yBAAa,CAAC,SAAS,EAAE,UAAC,QAAgB;YACxC,sDAAsD;YACtD,SAAS,CAAC,QAAQ,CAAC,GAAG;gBACpB,IAAI,EAAE,QAAQ;gBACd,YAAY,EAAE,IAAI;gBAClB,cAAc,EAAE,EAAE;aACnB,CAAC;YAEF,wEAAwE;YACxE,yBAAa,CAAC,cAAK,EAAE,UAAC,SAAiB,EAAE,UAAiB;gBACxD,IAAI,SAAS,KAAK,cAAK,CAAC,cAAK,CAAC,QAAQ,CAAC,EAAE;oBACvC,OAAO;iBACR;gBACD,IAAM,QAAQ,GAAG,SAAS,CAAC,QAAQ,CAAC,CAAC;gBACrC,IAAM,YAAY,GAAG;oBACnB,IAAI,EAAE,QAAQ,GAAG,SAAS;oBAC1B,QAAQ,EAAE,SAAS,CAAC,QAAQ,CAAC;oBAC7B,OAAO,EAAE,UAAU;oBACnB,YAAY,EAAE,KAAK;oBACnB,iBAAiB,EAAE,QAAQ,KAAK,SAAS,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK;oBACnF,cAAc,EAAE,EAAE;iBACnB,CAAC;gBACF,SAAS,CAAC,QAAQ,GAAG,SAAS,CAAC,GAAG,YAAY,CAAC;gBAC/C,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBAE3C,OAAO,KAAK,CAAC,CAAC;YAChB,CAAC,CAAC,CAAC;YAEH,OAAO,KAAK,CAAC,CAAC;QAChB,CAAC,CAAC,CAAC;QAEH,yCAAyC;QACzC,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,GAAG,uCAAkB,CAAC,SAAS,CAAC,CAAC;QACnF,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,CAAC,KAAK,GAAG,uCAAkB,CAAC,MAAM,CAAC,CAAC;QACnF,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,CAAC,KAAK,GAAG,uCAAkB,CAAC,MAAM,CAAC,CAAC;QAEnF,4HAA4H;QAC5H,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,YAAY,CAAC,GAAG,cAAK,CAAC,cAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,uCAAkB,CAAC,SAAS,CAAC,CAAC;QACzG,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,YAAY,CAAC,GAAG,cAAK,CAAC,cAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,uCAAkB,CAAC,SAAS,CAAC,CAAC;QACzG,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,YAAY,CAAC,GAAG,cAAK,CAAC,cAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,uCAAkB,CAAC,SAAS,CAAC,CAAC;QACzG,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,YAAY,CAAC,GAAG,cAAK,CAAC,cAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,uCAAkB,CAAC,SAAS,CAAC,CAAC;QACzG,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,YAAY,CAAC,GAAG,cAAK,CAAC,cAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,uCAAkB,CAAC,SAAS,CAAC,CAAC;QACzG,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,YAAY,CAAC,GAAG,cAAK,CAAC,cAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,uCAAkB,CAAC,SAAS,CAAC,CAAC;QACzG,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,YAAY,CAAC,GAAG,cAAK,CAAC,cAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,uCAAkB,CAAC,SAAS,CAAC,CAAC;QACzG,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,YAAY,CAAC,GAAG,cAAK,CAAC,cAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,uCAAkB,CAAC,SAAS,CAAC,CAAC;QAEzG,4HAA4H;QAC5H,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,eAAe,CAAC,GAAG,cAAK,CAAC,cAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,uCAAkB,CAAC,SAAS,CAAC,CAAC;QAC5G,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,eAAe,CAAC,GAAG,cAAK,CAAC,cAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,uCAAkB,CAAC,SAAS,CAAC,CAAC;QAC5G,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,eAAe,CAAC,GAAG,cAAK,CAAC,cAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,uCAAkB,CAAC,SAAS,CAAC,CAAC;QAC5G,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,eAAe,CAAC,GAAG,cAAK,CAAC,cAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,uCAAkB,CAAC,SAAS,CAAC,CAAC;QAC5G,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,eAAe,CAAC,GAAG,cAAK,CAAC,cAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,uCAAkB,CAAC,SAAS,CAAC,CAAC;QAC5G,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,eAAe,CAAC,GAAG,cAAK,CAAC,cAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,uCAAkB,CAAC,SAAS,CAAC,CAAC;QAC5G,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,eAAe,CAAC,GAAG,cAAK,CAAC,cAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,uCAAkB,CAAC,SAAS,CAAC,CAAC;QAC5G,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,eAAe,CAAC,GAAG,cAAK,CAAC,cAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,uCAAkB,CAAC,SAAS,CAAC,CAAC;QAE5G,SAAS,mBAAmB,CAAC,QAAgB,EAAE,aAAwB,EAAE,cAAqB,EAAE,iBAAyB;YAAzB,kCAAA,EAAA,yBAAyB;YACvH,IAAM,QAAQ,GAAG,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC;YACrD,IAAM,YAAY,GAAG;gBACnB,IAAI,EAAE,QAAQ;gBACd,QAAQ,EAAE,QAAQ;gBAClB,OAAO,EAAE,cAAc;gBACvB,YAAY,EAAE,KAAK;gBACnB,iBAAiB,EAAE,iBAAiB;gBACpC,cAAc,EAAE,EAAE;aACnB,CAAC;YACF,SAAS,CAAC,QAAQ,CAAC,GAAG,YAAY,CAAC;YACnC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC7C,CAAC;QACD,mBAAmB,CAAC,WAAW,CAAC,WAAW,CAAC,YAAY,CAAC,EAAE,SAAS,CAAC,YAAY,EAAE,cAAK,CAAC,QAAQ,CAAC,CAAC;QACnG,mBAAmB,CAAC,WAAW,CAAC,WAAW,CAAC,eAAe,CAAC,EAAE,SAAS,CAAC,YAAY,EAAE,cAAK,CAAC,MAAM,CAAC,CAAC;QACpG,mBAAmB,CAAC,WAAW,CAAC,WAAW,CAAC,YAAY,CAAC,EAAE,SAAS,CAAC,YAAY,EAAE,cAAK,CAAC,MAAM,CAAC,CAAC;QACjG,mBAAmB,CAAC,WAAW,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,SAAS,CAAC,YAAY,EAAE,cAAK,CAAC,MAAM,CAAC,CAAC;QAC/F,mBAAmB,CAAC,WAAW,CAAC,WAAW,CAAC,aAAa,CAAC,EAAE,SAAS,CAAC,YAAY,EAAE,cAAK,CAAC,MAAM,CAAC,CAAC;QAClG,mBAAmB,CAAC,WAAW,CAAC,WAAW,CAAC,cAAc,CAAC,EAAE,SAAS,CAAC,YAAY,EAAE,cAAK,CAAC,MAAM,CAAC,CAAC;QACnG,mBAAmB,CAAC,WAAW,CAAC,WAAW,CAAC,YAAY,CAAC,EAAE,SAAS,CAAC,YAAY,EAAE,cAAK,CAAC,MAAM,CAAC,CAAC;QACjG,mBAAmB,CAAC,WAAW,CAAC,WAAW,CAAC,SAAS,CAAC,EAAE,SAAS,CAAC,YAAY,EAAE,cAAK,CAAC,MAAM,CAAC,CAAC;QAC9F,mBAAmB,CAAC,WAAW,CAAC,WAAW,CAAC,WAAW,CAAC,EAAE,SAAS,CAAC,YAAY,EAAE,cAAK,CAAC,MAAM,CAAC,CAAC;QAEhG,mBAAmB,CAAC,WAAW,CAAC,WAAW,CAAC,iBAAiB,CAAC,EAAE,SAAS,CAAC,eAAe,EAAE,cAAK,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAC/G,mBAAmB,CAAC,WAAW,CAAC,WAAW,CAAC,cAAc,CAAC,EAAE,SAAS,CAAC,eAAe,EAAE,cAAK,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAC5G,mBAAmB,CAAC,WAAW,CAAC,WAAW,CAAC,YAAY,CAAC,EAAE,SAAS,CAAC,eAAe,EAAE,cAAK,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAC1G,mBAAmB,CAAC,WAAW,CAAC,WAAW,CAAC,oBAAoB,CAAC,EAAE,SAAS,CAAC,eAAe,EAAE,cAAK,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAClH,mBAAmB,CAAC,WAAW,CAAC,WAAW,CAAC,iBAAiB,CAAC,EAAE,SAAS,CAAC,eAAe,EAAE,cAAK,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAC/G,mBAAmB,CAAC,WAAW,CAAC,WAAW,CAAC,kBAAkB,CAAC,EAAE,SAAS,CAAC,eAAe,EAAE,cAAK,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,aAAa;QAC9H,mBAAmB,CAAC,WAAW,CAAC,WAAW,CAAC,eAAe,CAAC,EAAE,SAAS,CAAC,eAAe,EAAE,cAAK,CAAC,MAAM,CAAC,CAAC;QACvG,mBAAmB,CAAC,WAAW,CAAC,WAAW,CAAC,gBAAgB,CAAC,EAAE,SAAS,CAAC,eAAe,EAAE,cAAK,CAAC,MAAM,CAAC,CAAC;QACxG,mBAAmB,CAAC,WAAW,CAAC,WAAW,CAAC,iBAAiB,CAAC,EAAE,SAAS,CAAC,eAAe,EAAE,cAAK,CAAC,MAAM,CAAC,CAAC;QACzG,mBAAmB,CAAC,WAAW,CAAC,WAAW,CAAC,cAAc,CAAC,EAAE,SAAS,CAAC,eAAe,EAAE,cAAK,CAAC,QAAQ,CAAC,CAAC;QACxG,mBAAmB,CAAC,WAAW,CAAC,WAAW,CAAC,WAAW,CAAC,EAAE,SAAS,CAAC,eAAe,EAAE,cAAK,CAAC,MAAM,CAAC,CAAC;QAEnG,mBAAmB,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,SAAS,CAAC,eAAe,EAAE,cAAK,CAAC,MAAM,CAAC,CAAC;QAC7F,mBAAmB,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,SAAS,CAAC,eAAe,EAAE,cAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QAErG,4FAA4F;QAC5F,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC,KAAK,GAAG,uCAAkB,CAAC,SAAS,CAAC,CAAC;QAC1F,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,GAAG,uCAAkB,CAAC,SAAS,CAAC,CAAC;QACvF,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,GAAG,uCAAkB,CAAC,SAAS,CAAC,CAAC;QACrF,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC,KAAK,GAAG,uCAAkB,CAAC,SAAS,CAAC,CAAC;QACxF,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,CAAC,KAAK,GAAG,uCAAkB,CAAC,SAAS,CAAC,CAAC;QACzF,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,GAAG,uCAAkB,CAAC,SAAS,CAAC,CAAC;QACvF,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,GAAG,uCAAkB,CAAC,SAAS,CAAC,CAAC;QACpF,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,GAAG,uCAAkB,CAAC,SAAS,CAAC,CAAC;QACtF,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC,YAAY,GAAG,IAAI,CAAC;QACxE,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC,YAAY,GAAG,IAAI,CAAC;QACrE,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,YAAY,GAAG,IAAI,CAAC;QACnE,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC,YAAY,GAAG,IAAI,CAAC;QACtE,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,CAAC,YAAY,GAAG,IAAI,CAAC;QACvE,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC,YAAY,GAAG,IAAI,CAAC;QACrE,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,YAAY,GAAG,IAAI,CAAC;QAClE,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,YAAY,GAAG,IAAI,CAAC;QAEpE,sBAAsB;QACtB,uFAAuF;QACvF,0CAA0C;QAC1C,6GAA6G;QAC7G,kEAAkE;QAClE,2BAA2B;QAC3B,8CAA8C;QAC9C,6DAA6D;QAC7D,2BAA2B;QAC3B,yBAAyB;QACzB,OAAO;QACP,gEAAgE;QAChE,gDAAgD;QAChD,IAAI;QAEJ,qBAAqB;QACrB,+EAA+E;QAC/E,kFAAkF;QAElF,OAAO,SAAS,CAAC;IACnB,CAAC;IAzID,8DAyIC","sourcesContent":["import { Shade } from '../../utilities/color/shades';\nimport { getColorFromString } from '../../utilities/color/getColorFromString';\nimport { mapEnumByName } from '../../Utilities';\n\nimport { IThemeRules } from './IThemeRules';\n\n/* This is the set of rules for our default theme.\n   We start with three base slots, defining the background, foreground (text), and\n   primary color (sometimes called theme color). Each Fabric slot is generated from\n   shades (or tints) of one of those three, creating the Fabric palette.\n   Then, we have semantic slots, the new thing intended to eventually replace the\n   Fabric palette. The semantic slots inherit from the Fabric palette. */\n\n/* The most minimal set of slots we start with. All other ones can be generated based on rules.\n * This is not so much an enum as it is a list. The enum is used to insure \"type\"-safety.\n * For now, we are only dealing with color. */\nexport enum BaseSlots {\n  primaryColor,\n  backgroundColor,\n  foregroundColor\n}\n\n/* The original Fabric palette, only for back-compat. */\nexport enum FabricSlots {\n  themePrimary, // BaseSlots.primaryColor, Shade[Shade.Unshaded]);\n  themeLighterAlt, // BaseSlots.primaryColor, Shade[Shade.Shade1]);\n  themeLighter, // BaseSlots.primaryColor, Shade[Shade.Shade2]);\n  themeLight, // BaseSlots.primaryColor, Shade[Shade.Shade3]);\n  themeTertiary, // BaseSlots.primaryColor, Shade[Shade.Shade4]);\n  themeSecondary, // BaseSlots.primaryColor, Shade[Shade.Shade5]);\n  themeDarkAlt, // BaseSlots.primaryColor, Shade[Shade.Shade6]);\n  themeDark, // BaseSlots.primaryColor, Shade[Shade.Shade7]);\n  themeDarker, // BaseSlots.primaryColor, Shade[Shade.Shade8]);\n\n  neutralLighterAlt, // BaseSlots.backgroundColor, Shade[Shade.Shade1]);\n  neutralLighter, // BaseSlots.backgroundColor, Shade[Shade.Shade2]);\n  neutralLight, // BaseSlots.backgroundColor, Shade[Shade.Shade3]);\n  neutralQuaternaryAlt, // BaseSlots.backgroundColor, Shade[Shade.Shade4]);\n  neutralQuaternary, // BaseSlots.backgroundColor, Shade[Shade.Shade5]);\n  neutralTertiaryAlt, // BaseSlots.backgroundColor, Shade[Shade.Shade6]); // bg6 or fg2\n  neutralTertiary, // BaseSlots.foregroundColor, Shade[Shade.Shade3]);\n  // deprecated: neutralSecondaryAlt, // BaseSlots.foregroundColor, Shade[Shade.Shade4]);\n  neutralSecondary, // BaseSlots.foregroundColor, Shade[Shade.Shade5]);\n  neutralPrimaryAlt, // BaseSlots.foregroundColor, Shade[Shade.Shade6]);\n  neutralPrimary, // BaseSlots.foregroundColor, Shade[Shade.Unshaded]);\n  neutralDark, // BaseSlots.foregroundColor, Shade[Shade.Shade7]);\n\n  black, // BaseSlots.foregroundColor, Shade[Shade.Shade8]);\n  white // BaseSlots.backgroundColor, Shade[Shade.Unshaded]);\n}\n\n/* List of all the semantic color slots for this theme.\n * This is not so much an enum as it is a list. The enum is used to insure \"type\"-safety. */\nexport enum SemanticColorSlots {\n  bodyBackground,\n  bodyText,\n  disabledBackground,\n  disabledText\n}\n\nexport function themeRulesStandardCreator(): IThemeRules {\n  const slotRules: IThemeRules = {};\n\n  /*** BASE COLORS and their SHADES */\n  // iterate through each base slot and make the SlotRules for those\n  mapEnumByName(BaseSlots, (baseSlot: string) => {\n    // first make the SlotRule for the unshaded base Color\n    slotRules[baseSlot] = {\n      name: baseSlot,\n      isCustomized: true,\n      dependentRules: []\n    };\n\n    // then make a rule for each shade of this base color, but skip unshaded\n    mapEnumByName(Shade, (shadeName: string, shadeValue: Shade) => {\n      if (shadeName === Shade[Shade.Unshaded]) {\n        return;\n      }\n      const inherits = slotRules[baseSlot];\n      const thisSlotRule = {\n        name: baseSlot + shadeName,\n        inherits: slotRules[baseSlot],\n        asShade: shadeValue,\n        isCustomized: false,\n        isBackgroundShade: baseSlot === BaseSlots[BaseSlots.backgroundColor] ? true : false,\n        dependentRules: []\n      };\n      slotRules[baseSlot + shadeName] = thisSlotRule;\n      inherits.dependentRules.push(thisSlotRule);\n\n      return void 0;\n    });\n\n    return void 0;\n  });\n\n  // set default colors for the base colors\n  slotRules[BaseSlots[BaseSlots.primaryColor]].color = getColorFromString('#0078d4');\n  slotRules[BaseSlots[BaseSlots.backgroundColor]].color = getColorFromString('#fff');\n  slotRules[BaseSlots[BaseSlots.foregroundColor]].color = getColorFromString('#333');\n\n  // set default colors for shades (the slot rules were already created above and will be used if the base colors ever change)\n  slotRules[BaseSlots[BaseSlots.primaryColor] + Shade[Shade.Shade1]].color = getColorFromString('#eff6fc');\n  slotRules[BaseSlots[BaseSlots.primaryColor] + Shade[Shade.Shade2]].color = getColorFromString('#deecf9');\n  slotRules[BaseSlots[BaseSlots.primaryColor] + Shade[Shade.Shade3]].color = getColorFromString('#c7e0f4');\n  slotRules[BaseSlots[BaseSlots.primaryColor] + Shade[Shade.Shade4]].color = getColorFromString('#71afe5');\n  slotRules[BaseSlots[BaseSlots.primaryColor] + Shade[Shade.Shade5]].color = getColorFromString('#2b88d8');\n  slotRules[BaseSlots[BaseSlots.primaryColor] + Shade[Shade.Shade6]].color = getColorFromString('#106ebe');\n  slotRules[BaseSlots[BaseSlots.primaryColor] + Shade[Shade.Shade7]].color = getColorFromString('#005a9e');\n  slotRules[BaseSlots[BaseSlots.primaryColor] + Shade[Shade.Shade8]].color = getColorFromString('#004578');\n\n  // set default colors for shades (the slot rules were already created above and will be used if the base colors ever change)\n  slotRules[BaseSlots[BaseSlots.foregroundColor] + Shade[Shade.Shade1]].color = getColorFromString('#eaeaea');\n  slotRules[BaseSlots[BaseSlots.foregroundColor] + Shade[Shade.Shade2]].color = getColorFromString('#c8c8c8');\n  slotRules[BaseSlots[BaseSlots.foregroundColor] + Shade[Shade.Shade3]].color = getColorFromString('#a6a6a6');\n  slotRules[BaseSlots[BaseSlots.foregroundColor] + Shade[Shade.Shade4]].color = getColorFromString('#767676');\n  slotRules[BaseSlots[BaseSlots.foregroundColor] + Shade[Shade.Shade5]].color = getColorFromString('#666666');\n  slotRules[BaseSlots[BaseSlots.foregroundColor] + Shade[Shade.Shade6]].color = getColorFromString('#3c3c3c');\n  slotRules[BaseSlots[BaseSlots.foregroundColor] + Shade[Shade.Shade7]].color = getColorFromString('#212121');\n  slotRules[BaseSlots[BaseSlots.foregroundColor] + Shade[Shade.Shade8]].color = getColorFromString('#000000');\n\n  function _makeFabricSlotRule(slotName: string, inheritedBase: BaseSlots, inheritedShade: Shade, isBackgroundShade = false): void {\n    const inherits = slotRules[BaseSlots[inheritedBase]];\n    const thisSlotRule = {\n      name: slotName,\n      inherits: inherits,\n      asShade: inheritedShade,\n      isCustomized: false,\n      isBackgroundShade: isBackgroundShade,\n      dependentRules: []\n    };\n    slotRules[slotName] = thisSlotRule;\n    inherits.dependentRules.push(thisSlotRule);\n  }\n  _makeFabricSlotRule(FabricSlots[FabricSlots.themePrimary], BaseSlots.primaryColor, Shade.Unshaded);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.themeLighterAlt], BaseSlots.primaryColor, Shade.Shade1);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.themeLighter], BaseSlots.primaryColor, Shade.Shade2);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.themeLight], BaseSlots.primaryColor, Shade.Shade3);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.themeTertiary], BaseSlots.primaryColor, Shade.Shade4);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.themeSecondary], BaseSlots.primaryColor, Shade.Shade5);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.themeDarkAlt], BaseSlots.primaryColor, Shade.Shade6);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.themeDark], BaseSlots.primaryColor, Shade.Shade7);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.themeDarker], BaseSlots.primaryColor, Shade.Shade8);\n\n  _makeFabricSlotRule(FabricSlots[FabricSlots.neutralLighterAlt], BaseSlots.backgroundColor, Shade.Shade1, true);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.neutralLighter], BaseSlots.backgroundColor, Shade.Shade2, true);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.neutralLight], BaseSlots.backgroundColor, Shade.Shade3, true);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.neutralQuaternaryAlt], BaseSlots.backgroundColor, Shade.Shade4, true);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.neutralQuaternary], BaseSlots.backgroundColor, Shade.Shade5, true);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.neutralTertiaryAlt], BaseSlots.backgroundColor, Shade.Shade6, true); // bg6 or fg2\n  _makeFabricSlotRule(FabricSlots[FabricSlots.neutralTertiary], BaseSlots.foregroundColor, Shade.Shade3);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.neutralSecondary], BaseSlots.foregroundColor, Shade.Shade4);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.neutralPrimaryAlt], BaseSlots.foregroundColor, Shade.Shade5);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.neutralPrimary], BaseSlots.foregroundColor, Shade.Unshaded);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.neutralDark], BaseSlots.foregroundColor, Shade.Shade7);\n\n  _makeFabricSlotRule(FabricSlots[FabricSlots.black], BaseSlots.foregroundColor, Shade.Shade8);\n  _makeFabricSlotRule(FabricSlots[FabricSlots.white], BaseSlots.backgroundColor, Shade.Unshaded, true);\n\n  // manually set initial colors for the primary-based Fabric slots to match the default theme\n  slotRules[FabricSlots[FabricSlots.themeLighterAlt]].color = getColorFromString('#eff6fc');\n  slotRules[FabricSlots[FabricSlots.themeLighter]].color = getColorFromString('#deecf9');\n  slotRules[FabricSlots[FabricSlots.themeLight]].color = getColorFromString('#c7e0f4');\n  slotRules[FabricSlots[FabricSlots.themeTertiary]].color = getColorFromString('#71afe5');\n  slotRules[FabricSlots[FabricSlots.themeSecondary]].color = getColorFromString('#2b88d8');\n  slotRules[FabricSlots[FabricSlots.themeDarkAlt]].color = getColorFromString('#106ebe');\n  slotRules[FabricSlots[FabricSlots.themeDark]].color = getColorFromString('#005a9e');\n  slotRules[FabricSlots[FabricSlots.themeDarker]].color = getColorFromString('#004578');\n  slotRules[FabricSlots[FabricSlots.themeLighterAlt]].isCustomized = true;\n  slotRules[FabricSlots[FabricSlots.themeLighter]].isCustomized = true;\n  slotRules[FabricSlots[FabricSlots.themeLight]].isCustomized = true;\n  slotRules[FabricSlots[FabricSlots.themeTertiary]].isCustomized = true;\n  slotRules[FabricSlots[FabricSlots.themeSecondary]].isCustomized = true;\n  slotRules[FabricSlots[FabricSlots.themeDarkAlt]].isCustomized = true;\n  slotRules[FabricSlots[FabricSlots.themeDark]].isCustomized = true;\n  slotRules[FabricSlots[FabricSlots.themeDarker]].isCustomized = true;\n\n  /*** SEMANTIC SLOTS */\n  // This code is commented out for now but left for future semantic color customization.\n  // create the SlotRule for a semantic slot\n  // function _makeSemanticSlotRule(semanticSlot: SemanticColorSlots, inheritedFabricSlot: FabricSlots): void {\n  //   const inherits = slotRules[FabricSlots[inheritedFabricSlot]];\n  //   const thisSlotRule = {\n  //     name: SemanticColorSlots[semanticSlot],\n  //     inherits: slotRules[FabricSlots[inheritedFabricSlot]],\n  //     isCustomized: false,\n  //     dependentRules: []\n  //   };\n  //   slotRules[SemanticColorSlots[semanticSlot]] = thisSlotRule;\n  //   inherits.dependentRules.push(thisSlotRule);\n  // }\n\n  // Basic simple slots\n  // _makeSemanticSlotRule(SemanticColorSlots.bodyBackground, FabricSlots.white);\n  // _makeSemanticSlotRule(SemanticColorSlots.bodyText, FabricSlots.neutralPrimary);\n\n  return slotRules;\n}\n"]}
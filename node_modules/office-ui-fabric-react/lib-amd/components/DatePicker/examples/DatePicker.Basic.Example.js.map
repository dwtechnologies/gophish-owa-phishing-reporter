{"version":3,"file":"DatePicker.Basic.Example.js","sourceRoot":"../src/","sources":["components/DatePicker/examples/DatePicker.Basic.Example.tsx"],"names":[],"mappings":";;;IAKA,IAAM,gBAAgB,GAAuB;QAC3C,MAAM,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CAAC;QAElI,WAAW,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;QAEjG,IAAI,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,CAAC;QAEpF,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QAE9C,SAAS,EAAE,aAAa;QACxB,kBAAkB,EAAE,sBAAsB;QAC1C,kBAAkB,EAAE,kBAAkB;QACtC,iBAAiB,EAAE,qBAAqB;QACxC,iBAAiB,EAAE,iBAAiB;QACpC,oBAAoB,EAAE,mBAAmB;KAC1C,CAAC;IAMF;QAA4C,kDAAiD;QAC3F,gCAAmB,KAAS;YAA5B,YACE,kBAAM,KAAK,CAAC,SAKb;YA+CO,uBAAiB,GAAG,UAAC,KAAsC,EAAE,MAAuB;gBAC1F,KAAI,CAAC,QAAQ,CAAC;oBACZ,cAAc,EAAG,kCAAiB,CAAC,MAAM,CAAC,GAAG,CAAC;iBAC/C,CAAC,CAAC;YACL,CAAC,CAAC;YAtDA,KAAI,CAAC,KAAK,GAAG;gBACX,cAAc,EAAE,kCAAS,CAAC,MAAM;aACjC,CAAC;;QACJ,CAAC;QAEM,uCAAM,GAAb;YACU,IAAA,0CAAc,CAAgB;YAEtC,OAAO,CACL,6BAAK,SAAS,EAAC,wBAAwB;gBACrC,oBAAC,mCAAU,IAAC,cAAc,EAAE,cAAc,EAAE,OAAO,EAAE,gBAAgB,EAAE,WAAW,EAAC,kBAAkB,EAAC,SAAS,EAAC,eAAe,GAAG;gBAClI,oBAAC,mBAAQ,IACP,KAAK,EAAC,kCAAkC,EACxC,OAAO,EAAE;wBACP;4BACE,IAAI,EAAE,QAAQ;4BACd,GAAG,EAAE,kCAAS,CAAC,kCAAS,CAAC,MAAM,CAAC;yBACjC;wBACD;4BACE,IAAI,EAAE,QAAQ;4BACd,GAAG,EAAE,kCAAS,CAAC,kCAAS,CAAC,MAAM,CAAC;yBACjC;wBACD;4BACE,IAAI,EAAE,SAAS;4BACf,GAAG,EAAE,kCAAS,CAAC,kCAAS,CAAC,OAAO,CAAC;yBAClC;wBACD;4BACE,IAAI,EAAE,WAAW;4BACjB,GAAG,EAAE,kCAAS,CAAC,kCAAS,CAAC,SAAS,CAAC;yBACpC;wBACD;4BACE,IAAI,EAAE,UAAU;4BAChB,GAAG,EAAE,kCAAS,CAAC,kCAAS,CAAC,QAAQ,CAAC;yBACnC;wBACD;4BACE,IAAI,EAAE,QAAQ;4BACd,GAAG,EAAE,kCAAS,CAAC,kCAAS,CAAC,MAAM,CAAC;yBACjC;wBACD;4BACE,IAAI,EAAE,UAAU;4BAChB,GAAG,EAAE,kCAAS,CAAC,kCAAS,CAAC,QAAQ,CAAC;yBACnC;qBACF,EACD,WAAW,EAAE,kCAAS,CAAC,cAAe,CAAC,EACvC,QAAQ,EAAE,IAAI,CAAC,iBAAiB,GAChC,CACE,CACP,CAAC;QACJ,CAAC;QAOH,6BAAC;IAAD,CAAC,AA3DD,CAA4C,KAAK,CAAC,SAAS,GA2D1D;IA3DY,wDAAsB","sourcesContent":["import * as React from 'react';\nimport { Dropdown, IDropdownOption } from 'office-ui-fabric-react/lib/Dropdown';\nimport { DatePicker, DayOfWeek, IDatePickerStrings } from 'office-ui-fabric-react';\nimport './DatePicker.Examples.scss';\n\nconst DayPickerStrings: IDatePickerStrings = {\n  months: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n\n  shortMonths: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n\n  days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n\n  shortDays: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n\n  goToToday: 'Go to today',\n  prevMonthAriaLabel: 'Go to previous month',\n  nextMonthAriaLabel: 'Go to next month',\n  prevYearAriaLabel: 'Go to previous year',\n  nextYearAriaLabel: 'Go to next year',\n  closeButtonAriaLabel: 'Close date picker'\n};\n\nexport interface IDatePickerBasicExampleState {\n  firstDayOfWeek?: DayOfWeek;\n}\n\nexport class DatePickerBasicExample extends React.Component<{}, IDatePickerBasicExampleState> {\n  public constructor(props: {}) {\n    super(props);\n\n    this.state = {\n      firstDayOfWeek: DayOfWeek.Sunday\n    };\n  }\n\n  public render() {\n    const { firstDayOfWeek } = this.state;\n\n    return (\n      <div className=\"docs-DatePickerExample\">\n        <DatePicker firstDayOfWeek={firstDayOfWeek} strings={DayPickerStrings} placeholder=\"Select a date...\" ariaLabel=\"Select a date\" />\n        <Dropdown\n          label=\"Select the first day of the week\"\n          options={[\n            {\n              text: 'Sunday',\n              key: DayOfWeek[DayOfWeek.Sunday]\n            },\n            {\n              text: 'Monday',\n              key: DayOfWeek[DayOfWeek.Monday]\n            },\n            {\n              text: 'Tuesday',\n              key: DayOfWeek[DayOfWeek.Tuesday]\n            },\n            {\n              text: 'Wednesday',\n              key: DayOfWeek[DayOfWeek.Wednesday]\n            },\n            {\n              text: 'Thursday',\n              key: DayOfWeek[DayOfWeek.Thursday]\n            },\n            {\n              text: 'Friday',\n              key: DayOfWeek[DayOfWeek.Friday]\n            },\n            {\n              text: 'Saturday',\n              key: DayOfWeek[DayOfWeek.Saturday]\n            }\n          ]}\n          selectedKey={DayOfWeek[firstDayOfWeek!]}\n          onChange={this._onDropdownChange}\n        />\n      </div>\n    );\n  }\n\n  private _onDropdownChange = (event: React.FormEvent<HTMLDivElement>, option: IDropdownOption): void => {\n    this.setState({\n      firstDayOfWeek: (DayOfWeek as any)[option.key]\n    });\n  };\n}\n"]}
{"version":3,"file":"DatePicker.Input.Example.js","sourceRoot":"../src/","sources":["components/DatePicker/examples/DatePicker.Input.Example.tsx"],"names":[],"mappings":";;;IAKA,IAAM,gBAAgB,GAAuB;QAC3C,MAAM,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CAAC;QAElI,WAAW,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;QAEjG,IAAI,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,CAAC;QAEpF,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QAE9C,SAAS,EAAE,aAAa;QACxB,kBAAkB,EAAE,sBAAsB;QAC1C,kBAAkB,EAAE,kBAAkB;QACtC,iBAAiB,EAAE,qBAAqB;QACxC,iBAAiB,EAAE,iBAAiB;QACpC,oBAAoB,EAAE,mBAAmB;QAEzC,sBAAsB,EAAE,yBAAyB;QAEjD,wBAAwB,EAAE,sBAAsB;KACjD,CAAC;IAOF;QAA4C,kDAAiD;QAC3F,gCAAY,KAAS;YAArB,YACE,kBAAM,KAAK,CAAC,SAMb;YA0BO,mBAAa,GAAG,UAAC,IAA6B;gBACpD,KAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;YACjC,CAAC,CAAC;YAEM,cAAQ,GAAG;gBACjB,KAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;YACjC,CAAC,CAAC;YApCA,KAAI,CAAC,KAAK,GAAG;gBACX,cAAc,EAAE,sBAAS,CAAC,MAAM;gBAChC,KAAK,EAAE,IAAI;aACZ,CAAC;;QACJ,CAAC;QAEM,uCAAM,GAAb;YACQ,IAAA,eAAsC,EAApC,kCAAc,EAAE,gBAAoB,CAAC;YAC7C,IAAM,IAAI,GAAG,uFAAuF,CAAC;YACrG,OAAO,CACL,6BAAK,SAAS,EAAC,wBAAwB;gBACrC,0NAGI;gBACJ,oBAAC,uBAAU,IACT,KAAK,EAAC,YAAY,EAClB,UAAU,EAAE,KAAK,EACjB,cAAc,EAAE,IAAI,EACpB,SAAS,EAAE,IAAI,EACf,cAAc,EAAE,cAAc,EAC9B,OAAO,EAAE,gBAAgB,EACzB,KAAK,EAAE,KAAM,EACb,YAAY,EAAE,IAAI,CAAC,aAAa,GAChC;gBACF,oBAAC,sBAAa,IAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAC,OAAO,GAAG,CAClD,CACP,CAAC;QACJ,CAAC;QASH,6BAAC;IAAD,CAAC,AAzCD,CAA4C,KAAK,CAAC,SAAS,GAyC1D;IAzCY,wDAAsB","sourcesContent":["import * as React from 'react';\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport { DatePicker, DayOfWeek, IDatePickerStrings } from 'office-ui-fabric-react/lib/DatePicker';\nimport './DatePicker.Examples.scss';\n\nconst DayPickerStrings: IDatePickerStrings = {\n  months: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n\n  shortMonths: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n\n  days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n\n  shortDays: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n\n  goToToday: 'Go to today',\n  prevMonthAriaLabel: 'Go to previous month',\n  nextMonthAriaLabel: 'Go to next month',\n  prevYearAriaLabel: 'Go to previous year',\n  nextYearAriaLabel: 'Go to next year',\n  closeButtonAriaLabel: 'Close date picker',\n\n  isRequiredErrorMessage: 'Start date is required.',\n\n  invalidInputErrorMessage: 'Invalid date format.'\n};\n\nexport interface IDatePickerInputExampleState {\n  firstDayOfWeek?: DayOfWeek;\n  value?: Date | null;\n}\n\nexport class DatePickerInputExample extends React.Component<{}, IDatePickerInputExampleState> {\n  constructor(props: {}) {\n    super(props);\n\n    this.state = {\n      firstDayOfWeek: DayOfWeek.Sunday,\n      value: null\n    };\n  }\n\n  public render(): JSX.Element {\n    const { firstDayOfWeek, value } = this.state;\n    const desc = 'This field is required. One of the support input formats is year dash month dash day.';\n    return (\n      <div className=\"docs-DatePickerExample\">\n        <p>\n          Text input allowed by default when use keyboard navigation. Mouse click the TextField will popup DatePicker, click the TextField\n          again will dismiss the DatePicker and allow text input.\n        </p>\n        <DatePicker\n          label=\"Start date\"\n          isRequired={false}\n          allowTextInput={true}\n          ariaLabel={desc}\n          firstDayOfWeek={firstDayOfWeek}\n          strings={DayPickerStrings}\n          value={value!}\n          onSelectDate={this._onSelectDate}\n        />\n        <DefaultButton onClick={this._onClick} text=\"Clear\" />\n      </div>\n    );\n  }\n\n  private _onSelectDate = (date: Date | null | undefined): void => {\n    this.setState({ value: date });\n  };\n\n  private _onClick = (): void => {\n    this.setState({ value: null });\n  };\n}\n"]}
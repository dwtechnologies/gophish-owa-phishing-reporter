{"version":3,"file":"TextField.ErrorMessage.Example.js","sourceRoot":"../src/","sources":["components/TextField/examples/TextField.ErrorMessage.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport { Stack, IStackTokens } from 'office-ui-fabric-react/lib/Stack';\nimport { Toggle } from 'office-ui-fabric-react/lib/Toggle';\n\nexport interface ITextFieldErrorMessageExampleState {\n  /**\n   * Screen readers will read all errors on a page as soon as they are present,\n   * making this demo potentially unpleasant when using a screen reader.\n   * Not rendering the controls by default makes for a more pleasant experience.\n   */\n  showFields: boolean;\n}\n\nexport class TextFieldErrorMessageExample extends React.Component<{}, ITextFieldErrorMessageExampleState> {\n  public state: ITextFieldErrorMessageExampleState = {\n    showFields: false\n  };\n\n  public render(): JSX.Element {\n    const { showFields } = this.state;\n\n    const stackTokens: IStackTokens = {\n      childrenGap: 20,\n      maxWidth: 350\n    };\n\n    return (\n      <Stack tokens={stackTokens}>\n        <Toggle label=\"Show text fields\" inlineLabel checked={showFields} onChange={this._toggleShowFields} />\n        {showFields && (\n          <>\n            <strong>Hint: the input length must be less than 3.</strong>\n\n            <TextField label=\"String-based validation\" onGetErrorMessage={this._getErrorMessage} />\n            <TextField label=\"Promise-based validation\" onGetErrorMessage={this._getErrorMessagePromise} />\n            <TextField\n              label=\"String-based validation on render\"\n              defaultValue=\"Shows an error message on render\"\n              onGetErrorMessage={this._getErrorMessage}\n            />\n            <TextField\n              label=\"String-based validation only on change\"\n              defaultValue=\"Validates only on input change, not on render\"\n              onGetErrorMessage={this._getErrorMessage}\n              validateOnLoad={false}\n            />\n            <TextField\n              label=\"Promise-based validation\"\n              defaultValue=\"Shows an error message 5 seconds after render\"\n              onGetErrorMessage={this._getErrorMessagePromise}\n            />\n            <TextField\n              label=\"Both description and error message\"\n              defaultValue=\"Shows description and error message on render\"\n              description=\"Field description\"\n              onGetErrorMessage={this._getErrorMessage}\n            />\n            <TextField\n              label=\"Deferred string-based validation\"\n              placeholder=\"Validates after user stops typing for 2 seconds\"\n              onGetErrorMessage={this._getErrorMessage}\n              deferredValidationTime={2000}\n            />\n            <TextField\n              label=\"Validates only on focus and blur\"\n              placeholder=\"Validates only on input focus and blur\"\n              onGetErrorMessage={this._getErrorMessage}\n              validateOnFocusIn\n              validateOnFocusOut\n            />\n            <TextField\n              label=\"Validates only on blur\"\n              placeholder=\"Validates only on input blur\"\n              onGetErrorMessage={this._getErrorMessage}\n              validateOnFocusOut\n            />\n            <TextField\n              label=\"Underlined field:\"\n              defaultValue=\"This value is too long\"\n              underlined\n              onGetErrorMessage={this._getErrorMessage}\n            />\n            <TextField\n              label=\"Uses the errorMessage property to set an error state\"\n              placeholder=\"This field always has an error\"\n              errorMessage=\"This is a statically set error message\"\n            />\n          </>\n        )}\n      </Stack>\n    );\n  }\n\n  private _toggleShowFields = (_: any, displayEnabled: boolean) => {\n    this.setState({ showFields: displayEnabled });\n  };\n\n  private _getErrorMessage = (value: string): string => {\n    return value.length < 3 ? '' : `Input value length must be less than 3. Actual length is ${value.length}.`;\n  };\n\n  private _getErrorMessagePromise = (value: string): Promise<string> => {\n    return new Promise(resolve => {\n      // resolve the promise after 3 second.\n      setTimeout(() => resolve(this._getErrorMessage(value)), 5000);\n    });\n  };\n}\n"]}
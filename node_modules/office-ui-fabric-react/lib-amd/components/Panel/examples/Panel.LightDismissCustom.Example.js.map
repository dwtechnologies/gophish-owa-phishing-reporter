{"version":3,"file":"Panel.LightDismissCustom.Example.js","sourceRoot":"../src/","sources":["components/Panel/examples/Panel.LightDismissCustom.Example.tsx"],"names":[],"mappings":";;;IAUA;QAAoD,0DAAyD;QAA7G;YAAA,qEA8DC;YA7DQ,WAAK,GAAyC;gBACnD,SAAS,EAAE,KAAK;gBAChB,UAAU,EAAE,IAAI;aACjB,CAAC;YAsCM,gBAAU,GAAG;gBACnB,KAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;YACrC,CAAC,CAAC;YAEM,gBAAU,GAAG;gBACnB,KAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;YACtC,CAAC,CAAC;YAEM,iBAAW,GAAG;gBACpB,KAAI,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,CAAC;YACvC,CAAC,CAAC;YAEM,kBAAY,GAAG;gBACrB,KAAI,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;YACtC,CAAC,CAAC;YAEM,8BAAwB,GAAG;gBACjC,KAAI,CAAC,UAAU,EAAE,CAAC;gBAClB,KAAI,CAAC,YAAY,EAAE,CAAC;YACtB,CAAC,CAAC;;QACJ,CAAC;QAxDQ,+CAAM,GAAb;YACE,OAAO,CACL;gBACE,oBAAC,sBAAa,IAAC,IAAI,EAAC,YAAY,EAAC,OAAO,EAAE,IAAI,CAAC,UAAU,GAAI;gBAC7D,oBAAC,aAAK,IACJ,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,EAC5B,cAAc,EAAE,IAAI,EACpB,UAAU,EAAC,qBAAqB,EAChC,SAAS,EAAE,IAAI,CAAC,UAAU,EAC1B,mBAAmB,EAAE,IAAI,CAAC,WAAW;oBAErC,sHAA8F,CACxF;gBACR,oBAAC,eAAM,IACL,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,EAC7B,SAAS,EAAE,IAAI,CAAC,YAAY,EAC5B,kBAAkB,EAAE;wBAClB,IAAI,EAAE,mBAAU,CAAC,MAAM;wBACvB,KAAK,EAAE,2CAA2C;qBACnD,EACD,UAAU,EAAE;wBACV,WAAW,EAAE,WAAW;wBACxB,cAAc,EAAE,aAAa;wBAC7B,UAAU,EAAE,IAAI;wBAChB,MAAM,EAAE,EAAE,IAAI,EAAE,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE;qBACpC;oBAED,oBAAC,qBAAY;wBACX,oBAAC,sBAAa,IAAC,OAAO,EAAE,IAAI,CAAC,wBAAwB,EAAE,IAAI,EAAC,KAAK,GAAG;wBACpE,oBAAC,sBAAa,IAAC,OAAO,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,EAAC,IAAI,GAAG,CAC1C,CACR,CACL,CACP,CAAC;QACJ,CAAC;QAsBH,qCAAC;IAAD,CAAC,AA9DD,CAAoD,KAAK,CAAC,SAAS,GA8DlE;IA9DY,wEAA8B","sourcesContent":["import { DefaultButton, PrimaryButton } from 'office-ui-fabric-react/lib/Button';\nimport { Dialog, DialogFooter, DialogType } from 'office-ui-fabric-react/lib/Dialog';\nimport { Panel } from 'office-ui-fabric-react/lib/Panel';\nimport * as React from 'react';\n\nexport interface IPanelLightDismissCustomExampleState {\n  showPanel: boolean;\n  hideDialog: boolean;\n}\n\nexport class PanelLightDismissCustomExample extends React.Component<{}, IPanelLightDismissCustomExampleState> {\n  public state: IPanelLightDismissCustomExampleState = {\n    showPanel: false,\n    hideDialog: true\n  };\n\n  public render() {\n    return (\n      <div>\n        <DefaultButton text=\"Open panel\" onClick={this._showPanel} />\n        <Panel\n          isOpen={this.state.showPanel}\n          isLightDismiss={true}\n          headerText=\"Light Dismiss Panel\"\n          onDismiss={this._hidePanel}\n          onLightDismissClick={this._showDialog}\n        >\n          <span>Light Dismiss usage is meant for the Contextual Menu on mobile sized breakpoints.</span>\n        </Panel>\n        <Dialog\n          hidden={this.state.hideDialog}\n          onDismiss={this._closeDialog}\n          dialogContentProps={{\n            type: DialogType.normal,\n            title: 'Are you sure you want to close the panel?'\n          }}\n          modalProps={{\n            titleAriaId: 'myLabelId',\n            subtitleAriaId: 'mySubTextId',\n            isBlocking: true,\n            styles: { main: { maxWidth: 450 } }\n          }}\n        >\n          <DialogFooter>\n            <PrimaryButton onClick={this._closeDialogAndHidePanel} text=\"Yes\" />\n            <DefaultButton onClick={this._closeDialog} text=\"No\" />\n          </DialogFooter>\n        </Dialog>\n      </div>\n    );\n  }\n\n  private _showPanel = () => {\n    this.setState({ showPanel: true });\n  };\n\n  private _hidePanel = () => {\n    this.setState({ showPanel: false });\n  };\n\n  private _showDialog = () => {\n    this.setState({ hideDialog: false });\n  };\n\n  private _closeDialog = () => {\n    this.setState({ hideDialog: true });\n  };\n\n  private _closeDialogAndHidePanel = () => {\n    this._hidePanel();\n    this._closeDialog();\n  };\n}\n"]}
{"version":3,"file":"Panel.HandleDismissTarget.Example.js","sourceRoot":"../src/","sources":["components/Panel/examples/Panel.HandleDismissTarget.Example.tsx"],"names":[],"mappings":";;;IAOA;QAAqD,2DAA0D;QAA/G;YAAA,qEAuDC;YAtDQ,WAAK,GAAG;gBACb,SAAS,EAAE,KAAK;aACjB,CAAC;YAqBM,4BAAsB,GAAG;gBAC/B,OAAO,CACL;oBACE,oBAAC,sBAAa,IAAC,OAAO,EAAE,KAAI,CAAC,UAAU,cAAyB,CAC5D,CACP,CAAC;YACJ,CAAC,CAAC;YAEM,gBAAU,GAAG;gBACnB,KAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;YACrC,CAAC,CAAC;YAEM,gBAAU,GAAG;gBACnB,KAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;YACtC,CAAC,CAAC;YAEM,gBAAU,GAAG,UAAC,EAAsC;gBAC1D,IAAI,CAAC,EAAE,EAAE;oBACP,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;oBAChC,OAAO;iBACR;gBAED,OAAO,CAAC,GAAG,CAAC,0CAA0C,CAAC,CAAC;gBACxD,IAAI,EAAE,CAAC,WAAW,CAAC,UAAU,IAAK,EAAE,CAAC,WAAW,CAAC,UAAsB,CAAC,SAAS,CAAC,OAAO,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,EAAE;oBAClH,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;iBACtC;gBACD,IAAI,EAAE,CAAC,WAAW,CAAC,UAAU,IAAK,EAAE,CAAC,WAAW,CAAC,UAAsB,CAAC,SAAS,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,EAAE;oBAC9G,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;iBACjC;gBACD,KAAI,CAAC,UAAU,EAAE,CAAC;YACpB,CAAC,CAAC;;QACJ,CAAC;QAlDQ,gDAAM,GAAb;YACE,OAAO,CACL;gBACE,oBAAC,sBAAa,IAAC,aAAa,EAAC,wBAAwB,EAAC,OAAO,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,EAAC,YAAY,GAAG;gBACpG,oBAAC,aAAK,IACJ,UAAU,EAAC,uDAAuD,EAClE,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,EAC5B,IAAI,EAAE,iBAAS,CAAC,cAAc,EAC9B,gBAAgB,EAAE,IAAI,EACtB,SAAS,EAAE,IAAI,CAAC,UAAU,EAC1B,qBAAqB,EAAE,IAAI,CAAC,sBAAsB,EAClD,cAAc,EAAE,IAAI;oBAEpB,uDAA+B,CACzB,CACJ,CACP,CAAC;QACJ,CAAC;QAiCH,sCAAC;IAAD,CAAC,AAvDD,CAAqD,KAAK,CAAC,SAAS,GAuDnE;IAvDY,0EAA+B","sourcesContent":["import { DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport { Panel, PanelType } from 'office-ui-fabric-react/lib/Panel';\nimport * as React from 'react';\n\nexport interface IPanelHandleDismissTargetExampleState {\n  showPanel: boolean;\n}\nexport class PanelHandleDismissTargetExample extends React.Component<{}, IPanelHandleDismissTargetExampleState> {\n  public state = {\n    showPanel: false\n  };\n\n  public render() {\n    return (\n      <div>\n        <DefaultButton secondaryText=\"Opens the Sample Panel\" onClick={this._showPanel} text=\"Open Panel\" />\n        <Panel\n          headerText=\"Panel - Handle close button clicks or light dismissal\"\n          isOpen={this.state.showPanel}\n          type={PanelType.smallFixedNear}\n          isFooterAtBottom={true}\n          onDismiss={this._onDismiss}\n          onRenderFooterContent={this._onRenderFooterContent}\n          isLightDismiss={true}\n        >\n          <span>Content goes here.</span>\n        </Panel>\n      </div>\n    );\n  }\n\n  private _onRenderFooterContent = () => {\n    return (\n      <div>\n        <DefaultButton onClick={this._hidePanel}>Dismiss</DefaultButton>\n      </div>\n    );\n  };\n\n  private _showPanel = (): void => {\n    this.setState({ showPanel: true });\n  };\n\n  private _hidePanel = () => {\n    this.setState({ showPanel: false });\n  };\n\n  private _onDismiss = (ev?: React.SyntheticEvent<HTMLElement>) => {\n    if (!ev) {\n      console.log('Panel dismissed.');\n      return;\n    }\n\n    console.log('Close button clicked or light dismissed.');\n    if (ev.nativeEvent.srcElement && (ev.nativeEvent.srcElement as Element).className.indexOf('ms-Button-icon') !== -1) {\n      console.log('Close button clicked.');\n    }\n    if (ev.nativeEvent.srcElement && (ev.nativeEvent.srcElement as Element).className.indexOf('ms-Overlay') !== -1) {\n      console.log('Light dismissed.');\n    }\n    this._hidePanel();\n  };\n}\n"]}
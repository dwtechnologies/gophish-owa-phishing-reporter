{"version":3,"file":"Layer.Customized.Example.js","sourceRoot":"../src/","sources":["components/Layer/examples/Layer.Customized.Example.tsx"],"names":[],"mappings":";;;IAWA;QAA4C,kDAAiD;QAA7F;YAAA,qEAwEC;YAvEQ,WAAK,GAAiC;gBAC3C,SAAS,EAAE,KAAK;gBAChB,SAAS,EAAE,KAAK;aACjB,CAAC;YACF,2DAA2D;YAC3D,yFAAyF;YACjF,kBAAY,GAAW,iBAAK,CAAC,WAAW,CAAC,CAAC;YAgD1C,qBAAe,GAAG;gBACxB,KAAI,CAAC,QAAQ,CAAC;oBACZ,SAAS,EAAE,KAAK;iBACjB,CAAC,CAAC;YACL,CAAC,CAAC;YAEM,wBAAkB,GAAG,UAAC,KAAsD,EAAE,OAAiB;gBACrG,KAAI,CAAC,QAAQ,CAAC;oBACZ,SAAS,EAAE,CAAC,CAAC,OAAO;iBACrB,CAAC,CAAC;YACL,CAAC,CAAC;YAEM,wBAAkB,GAAG,UAAC,KAAsD,EAAE,OAAiB;gBACrG,KAAI,CAAC,QAAQ,CAAC;oBACZ,SAAS,EAAE,CAAC,CAAC,OAAO;iBACrB,CAAC,CAAC;YACL,CAAC,CAAC;;QACJ,CAAC;QA/DQ,uCAAM,GAAb;YACE,OAAO,CACL;gBACE;;oBACI,0CAAkB;;oBAAoD,4CAAiB;;oBACrE,4CAAiB;6DACnC;gBACJ,oBAAC,eAAM,IAAC,KAAK,EAAC,YAAY,EAAC,WAAW,QAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC,kBAAkB,GAAI;gBAC3G,oBAAC,eAAM,IAAC,KAAK,EAAC,YAAY,EAAC,WAAW,QAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC,kBAAkB,GAAI;gBAC3G,oBAAC,sBAAU,IACT,cAAc,EACZ,IAAI,CAAC,KAAK,CAAC,SAAS;wBAClB,CAAC,CAAC;4BACE,KAAK,EAAE;gCACL,MAAM,EAAE,IAAI,CAAC,YAAY;6BAC1B;yBACF;wBACH,CAAC,CAAC,EAAE,IAGP,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,CACvB,oBAAC,aAAK,IACJ,MAAM,EAAE,IAAI,EACZ,cAAc,EAAE,IAAI,EACpB,UAAU,EAAC,MAAM,EACjB,kBAAkB,EAAE;wBAClB,2BAA2B,EAAE,IAAI;wBACjC,oBAAoB,EAAE,KAAK;qBAC5B,EACD,SAAS,EAAE,IAAI,CAAC,eAAe,GAC/B,CACH,CACU;gBACb,oBAAC,iBAAS,IACR,EAAE,EAAE,IAAI,CAAC,YAAY,EACrB,KAAK,EAAE;wBACL,QAAQ,EAAE,UAAU;wBACpB,MAAM,EAAE,OAAO;wBACf,QAAQ,EAAE,QAAQ;wBAClB,MAAM,EAAE,gBAAgB;qBACzB,GACD,CACE,CACP,CAAC;QACJ,CAAC;QAmBH,6BAAC;IAAD,CAAC,AAxED,CAA4C,KAAK,CAAC,SAAS,GAwE1D;IAxEY,wDAAsB","sourcesContent":["import { Customizer, getId } from 'office-ui-fabric-react/lib/Utilities';\nimport { Toggle } from 'office-ui-fabric-react/lib/Toggle';\nimport { LayerHost } from 'office-ui-fabric-react/lib/Layer';\nimport { Panel } from 'office-ui-fabric-react/lib/Panel';\nimport * as React from 'react';\n\nexport interface ILayerCustomizedExampleState {\n  showPanel: boolean;\n  trapPanel: boolean;\n}\n\nexport class LayerCustomizedExample extends React.Component<{}, ILayerCustomizedExampleState> {\n  public state: ILayerCustomizedExampleState = {\n    showPanel: false,\n    trapPanel: false\n  };\n  // Use getId() to ensure that the ID is unique on the page.\n  // (It's also okay to use a plain string without getId() and manually ensure uniqueness.)\n  private _layerHostId: string = getId('layerHost');\n\n  public render(): JSX.Element {\n    return (\n      <div>\n        <p>\n          A <code>Panel</code> is rendered, trapped in a specified container. Use <b>Show panel</b> to show/hide the panel (or click the X\n          to dismiss it). Use <b>Trap panel</b> to release the panel from its bounds.\n        </p>\n        <Toggle label=\"Show panel\" inlineLabel checked={this.state.showPanel} onChange={this._onShowPanelChange} />\n        <Toggle label=\"Trap panel\" inlineLabel checked={this.state.trapPanel} onChange={this._onTrapPanelChange} />\n        <Customizer\n          scopedSettings={\n            this.state.trapPanel\n              ? {\n                  Layer: {\n                    hostId: this._layerHostId\n                  }\n                }\n              : {}\n          }\n        >\n          {this.state.showPanel && (\n            <Panel\n              isOpen={true}\n              hasCloseButton={true}\n              headerText=\"Test\"\n              focusTrapZoneProps={{\n                isClickableOutsideFocusTrap: true,\n                forceFocusInsideTrap: false\n              }}\n              onDismiss={this._onDismissPanel}\n            />\n          )}\n        </Customizer>\n        <LayerHost\n          id={this._layerHostId}\n          style={{\n            position: 'relative',\n            height: '400px',\n            overflow: 'hidden',\n            border: '1px solid #ccc'\n          }}\n        />\n      </div>\n    );\n  }\n\n  private _onDismissPanel = (): void => {\n    this.setState({\n      showPanel: false\n    });\n  };\n\n  private _onShowPanelChange = (event: React.FormEvent<HTMLElement | HTMLInputElement>, checked?: boolean): void => {\n    this.setState({\n      showPanel: !!checked\n    });\n  };\n\n  private _onTrapPanelChange = (event: React.FormEvent<HTMLElement | HTMLInputElement>, checked?: boolean): void => {\n    this.setState({\n      trapPanel: !!checked\n    });\n  };\n}\n"]}
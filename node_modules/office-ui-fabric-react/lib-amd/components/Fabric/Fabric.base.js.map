{"version":3,"file":"Fabric.base.js","sourceRoot":"../src/","sources":["components/Fabric/Fabric.base.tsx"],"names":[],"mappings":";;;IAKA,IAAM,aAAa,GAAG,8BAAkB,EAAoC,CAAC;IAE7E;QAAgC,sCAK/B;QAIC,oBAAY,KAAmB;YAA/B,YACE,kBAAM,KAAK,CAAC,SAEb;YANO,kBAAY,GAAG,KAAK,CAAC,SAAS,EAAkB,CAAC;YACjD,kBAAY,GAAmB,EAAE,CAAC;YAgClC,kBAAY,GAAG,UAAC,EAAc;gBACpC,KAAI,CAAC,QAAQ,CAAC,EAAE,cAAc,EAAE,KAAK,EAAE,CAAC,CAAC;YAC3C,CAAC,CAAC;YAEM,gBAAU,GAAG,UAAC,EAAiB;gBACrC,IAAI,gCAAoB,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE;oBAClC,KAAI,CAAC,QAAQ,CAAC,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC,CAAC;iBACzC;YACH,CAAC,CAAC;YApCA,KAAI,CAAC,KAAK,GAAG,EAAE,cAAc,EAAE,KAAK,EAAE,CAAC;;QACzC,CAAC;QAEM,2BAAM,GAAb;YACU,IAAA,gCAAS,CAAgB;YAEjC,IAAM,UAAU,GAAG,aAAa,CAAC,yBAAS,EAAE;gBAC1C,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAM;gBACxB,SAAS,WAAA;gBACT,cAAc,EAAE,IAAI,CAAC,KAAK,CAAC,cAAc;aAC1C,CAAC,CAAC;YACH,IAAM,QAAQ,GAAG,0BAAc,CAAuC,IAAI,CAAC,KAAK,EAAE,yBAAa,CAAC,CAAC;YAEjG,OAAO,gDAAS,QAAQ,IAAE,SAAS,EAAE,UAAU,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,YAAY,IAAI,CAAC;QACnF,CAAC;QAEM,sCAAiB,GAAxB;YACE,IAAM,GAAG,GAAG,qBAAS,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;YAEjD,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,cAAE,CAAC,GAAG,EAAE,WAAW,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,EAAE,cAAE,CAAC,GAAG,EAAE,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC;aAClH;QACH,CAAC;QAEM,yCAAoB,GAA3B;YACE,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,UAAC,OAAmB,IAAK,OAAA,OAAO,EAAE,EAAT,CAAS,CAAC,CAAC;QAChE,CAAC;QAWH,iBAAC;IAAD,CAAC,AAhDD,CAAgC,KAAK,CAAC,SAAS,GAgD9C;IAhDY,gCAAU","sourcesContent":["import * as React from 'react';\nimport { getNativeProps, on, divProperties, classNamesFunction, getWindow, isDirectionalKeyCode } from '../../Utilities';\nimport { getStyles } from './Fabric.styles';\nimport { IFabricProps, IFabricStyleProps, IFabricStyles } from './Fabric.types';\n\nconst getClassNames = classNamesFunction<IFabricStyleProps, IFabricStyles>();\n\nexport class FabricBase extends React.Component<\n  IFabricProps,\n  {\n    isFocusVisible: boolean;\n  }\n> {\n  private _rootElement = React.createRef<HTMLDivElement>();\n  private _disposables: (() => void)[] = [];\n\n  constructor(props: IFabricProps) {\n    super(props);\n    this.state = { isFocusVisible: false };\n  }\n\n  public render() {\n    const { className } = this.props;\n\n    const classNames = getClassNames(getStyles, {\n      theme: this.props.theme!,\n      className,\n      isFocusVisible: this.state.isFocusVisible\n    });\n    const divProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(this.props, divProperties);\n\n    return <div {...divProps} className={classNames.root} ref={this._rootElement} />;\n  }\n\n  public componentDidMount(): void {\n    const win = getWindow(this._rootElement.current);\n\n    if (win) {\n      this._disposables.push(on(win, 'mousedown', this._onMouseDown, true), on(win, 'keydown', this._onKeyDown, true));\n    }\n  }\n\n  public componentWillUnmount(): void {\n    this._disposables.forEach((dispose: () => void) => dispose());\n  }\n\n  private _onMouseDown = (ev: MouseEvent): void => {\n    this.setState({ isFocusVisible: false });\n  };\n\n  private _onKeyDown = (ev: KeyboardEvent): void => {\n    if (isDirectionalKeyCode(ev.which)) {\n      this.setState({ isFocusVisible: true });\n    }\n  };\n}\n"]}
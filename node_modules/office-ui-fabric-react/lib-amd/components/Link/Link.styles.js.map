{"version":3,"file":"Link.styles.js","sourceRoot":"../src/","sources":["components/Link/Link.styles.ts"],"names":[],"mappings":";;;IAGA,IAAM,gBAAgB,GAAG;QACvB,IAAI,EAAE,SAAS;KAChB,CAAC;IAEW,QAAA,SAAS,GAAG,UAAC,KAAsB;;QACtC,IAAA,2BAAS,EAAE,yBAAQ,EAAE,6BAAU,EAAE,mBAAK,CAAW;QACjD,IAAA,qCAAc,CAAW;QAEjC,SAAS;QACT,IAAM,SAAS,GAAG,cAAc,CAAC,IAAI,CAAC;QACtC,IAAM,mBAAmB,GAAG,cAAc,CAAC,WAAW,CAAC;QACvD,IAAM,iBAAiB,GAAG,cAAc,CAAC,YAAY,CAAC;QACtD,IAAM,gBAAgB,GAAG,cAAc,CAAC,WAAW,CAAC;QAEpD,IAAM,UAAU,GAAG,6BAAmB,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;QAEhE,OAAO;YACL,IAAI,EAAE;gBACJ,UAAU,CAAC,IAAI;gBACf,KAAK,CAAC,KAAK,CAAC,MAAM;gBAClB;oBACE,KAAK,EAAE,SAAS;oBAChB,OAAO,EAAE,MAAM;oBACf,QAAQ,EAAE,SAAS;oBACnB,UAAU,EAAE,SAAS;oBACrB,SAAS;4BACP,oCAAoC,EAAE;gCACpC,oEAAoE;gCACpE,yFAAyF;gCACzF,4EAA4E;gCAC5E,kDAAkD;gCAClD,SAAS,EAAE,eAAa,gBAAgB,WAAQ;gCAChD,SAAS;oCACP,GAAC,8BAAoB,IAAG;wCACtB,OAAO,EAAE,sBAAsB;qCAChC;uCACF;6BACF;;wBACD,GAAC,8BAAoB,IAAG;4BACtB,4BAA4B;4BAC5B,YAAY,EAAE,MAAM;yBACrB;2BACF;iBACF;gBACD,QAAQ,IAAI;oBACV,UAAU,EAAE,MAAM;oBAClB,eAAe,EAAE,aAAa;oBAC9B,MAAM,EAAE,MAAM;oBACd,MAAM,EAAE,SAAS;oBACjB,OAAO,EAAE,QAAQ;oBACjB,MAAM,EAAE,CAAC;oBACT,QAAQ,EAAE,SAAS;oBACnB,OAAO,EAAE,CAAC;oBACV,SAAS,EAAE,MAAM;oBACjB,YAAY,EAAE,SAAS;oBACvB,UAAU,EAAE,MAAM;oBAClB,YAAY,EAAE,uBAAuB;oBACrC,SAAS;wBACP,GAAC,mCAAyB,IAAG;4BAC3B,KAAK,EAAE,SAAS;yBACjB;wBACD,GAAC,mCAAyB,IAAG;4BAC3B,KAAK,EAAE,SAAS;yBACjB;2BACF;iBACF;gBACD,CAAC,QAAQ,IAAI;oBACX,cAAc,EAAE,MAAM;iBACvB;gBACD,UAAU,IAAI;oBACZ,aAAa;oBACb;wBACE,KAAK,EAAE,iBAAiB;wBACxB,MAAM,EAAE,SAAS;qBAClB;oBACD;wBACE,SAAS,EAAE;4BACT,mBAAmB,EAAE;gCACnB,aAAa,EAAE,MAAM;6BACtB;yBACF;qBACF;iBACF;gBACD,CAAC,UAAU,IAAI;oBACb,SAAS,EAAE;wBACT,mCAAmC,EAAE;4BACnC,KAAK,EAAE,mBAAmB;4BAC1B,cAAc,EAAE,WAAW;yBAC5B;wBACD,SAAS,EAAE;4BACT,KAAK,EAAE,SAAS;yBACjB;qBACF;iBACF;gBACD,UAAU,CAAC,IAAI;gBACf,SAAS;aACV;SACF,CAAC;IACJ,CAAC,CAAC","sourcesContent":["import { getGlobalClassNames, HighContrastSelectorWhite, HighContrastSelectorBlack, HighContrastSelector } from '../../Styling';\nimport { ILinkStyleProps, ILinkStyles } from './Link.types';\n\nconst GlobalClassNames = {\n  root: 'ms-Link'\n};\n\nexport const getStyles = (props: ILinkStyleProps): ILinkStyles => {\n  const { className, isButton, isDisabled, theme } = props;\n  const { semanticColors } = theme;\n\n  // Tokens\n  const linkColor = semanticColors.link;\n  const linkInteractedColor = semanticColors.linkHovered;\n  const linkDisabledColor = semanticColors.disabledText;\n  const focusBorderColor = semanticColors.focusBorder;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      {\n        color: linkColor,\n        outline: 'none',\n        fontSize: 'inherit',\n        fontWeight: 'inherit',\n        selectors: {\n          '.ms-Fabric--isFocusVisible &:focus': {\n            // Can't use getFocusStyle because it doesn't support wrapping links\n            // https://github.com/OfficeDev/office-ui-fabric-react/issues/4883#issuecomment-406743543\n            // A box-shadow allows the focus rect to wrap links that span multiple lines\n            // and helps the focus rect avoid getting clipped.\n            boxShadow: `0 0 0 1px ${focusBorderColor} inset`,\n            selectors: {\n              [HighContrastSelector]: {\n                outline: '1px solid WindowText'\n              }\n            }\n          },\n          [HighContrastSelector]: {\n            // For IE high contrast mode\n            borderBottom: 'none'\n          }\n        }\n      },\n      isButton && {\n        background: 'none',\n        backgroundColor: 'transparent',\n        border: 'none',\n        cursor: 'pointer',\n        display: 'inline',\n        margin: 0,\n        overflow: 'inherit',\n        padding: 0,\n        textAlign: 'left',\n        textOverflow: 'inherit',\n        userSelect: 'text',\n        borderBottom: '1px solid transparent', // For Firefox high contrast mode\n        selectors: {\n          [HighContrastSelectorBlack]: {\n            color: '#FFFF00'\n          },\n          [HighContrastSelectorWhite]: {\n            color: '#00009F'\n          }\n        }\n      },\n      !isButton && {\n        textDecoration: 'none'\n      },\n      isDisabled && [\n        'is-disabled',\n        {\n          color: linkDisabledColor,\n          cursor: 'default'\n        },\n        {\n          selectors: {\n            '&:link, &:visited': {\n              pointerEvents: 'none'\n            }\n          }\n        }\n      ],\n      !isDisabled && {\n        selectors: {\n          '&:active, &:hover, &:active:hover': {\n            color: linkInteractedColor,\n            textDecoration: 'underline'\n          },\n          '&:focus': {\n            color: linkColor\n          }\n        }\n      },\n      classNames.root,\n      className\n    ]\n  };\n};\n"]}
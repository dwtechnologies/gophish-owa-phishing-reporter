{"version":3,"file":"Keytips.Button.Example.js","sourceRoot":"../src/","sources":["components/Keytip/examples/Keytips.Button.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { DefaultButton, CompoundButton } from 'office-ui-fabric-react/lib/Button';\nimport { keytipMap } from 'office-ui-fabric-react/lib/components/Keytip/examples/KeytipSetup';\nimport { Toggle } from 'office-ui-fabric-react/lib/Toggle';\nimport { IStackTokens, Stack } from 'office-ui-fabric-react/lib/Stack';\n\nexport interface IKeytipsButtonExampleState {\n  btnDisabled: boolean;\n}\n\nconst stackTokens: IStackTokens = { childrenGap: 20 };\nconst marginBottom = { root: { marginBottom: 28 } };\n\nexport class KeytipsButtonExample extends React.Component<{}, IKeytipsButtonExampleState> {\n  constructor(props: {}) {\n    super(props);\n\n    this.state = {\n      btnDisabled: false\n    };\n  }\n\n  /* tslint:disable:jsx-no-lambda */\n  public render() {\n    return (\n      <div>\n        <p>When multiple Keytips start with the same character, typing that character will filter the visible keytips.</p>\n        <Stack horizontal tokens={stackTokens}>\n          <DefaultButton\n            keytipProps={keytipMap.Button}\n            text=\"Button\"\n            onClick={() => {\n              console.log('Button');\n            }}\n          />\n          <CompoundButton\n            styles={marginBottom}\n            keytipProps={keytipMap.CompoundButton}\n            text=\"Compound Button\"\n            secondaryText={'With a Keytip'}\n            onClick={() => {\n              console.log('Compound Button');\n            }}\n          />\n          <DefaultButton\n            keytipProps={keytipMap.ButtonWithMenu}\n            text=\"Button with Menu\"\n            onClick={() => {\n              console.log('Button with Menu');\n            }}\n            menuProps={{\n              items: [\n                {\n                  key: 'buttonMenuItem1',\n                  text: 'Menu Item 1',\n                  keytipProps: keytipMap.ButtonMenuItem1\n                },\n                {\n                  key: 'buttonMenuItem2',\n                  text: 'Menu Item 2',\n                  keytipProps: keytipMap.ButtonMenuItem2\n                }\n              ]\n            }}\n          />\n          <DefaultButton\n            styles={{ splitButtonContainer: { height: 32 } }}\n            keytipProps={keytipMap.SplitButton}\n            text=\"Split Button\"\n            split={true}\n            onClick={() => {\n              console.log('Split Button');\n            }}\n            menuProps={{\n              items: [\n                {\n                  key: 'splitButtonMenuButton1',\n                  text: 'Split Button Menu Item 1',\n                  keytipProps: keytipMap.SplitButtonMenuItem1\n                },\n                {\n                  key: 'splitButtonMenuButton2',\n                  text: 'Split Button Menu Item 2',\n                  keytipProps: keytipMap.SplitButtonMenuItem2\n                }\n              ]\n            }}\n          />\n          <DefaultButton text=\"I do not have a keytip\" />\n        </Stack>\n\n        <p>The 'offset' prop can be used to position the keytip a set distance from the top-left corner of the element.</p>\n        <DefaultButton\n          styles={marginBottom}\n          keytipProps={keytipMap.ButtonOffset}\n          text=\"Button keytip offset 10x10\"\n          onClick={() => {\n            console.log('Button');\n          }}\n        />\n\n        <p>When a Keytip's corresponding component is disabled, the keytip still appears but cannot be triggered.</p>\n        <Toggle onText={'Enabled'} offText={'Disabled'} defaultChecked={!this.state.btnDisabled} onChange={this._toggleDisabled} />\n        <DefaultButton\n          keytipProps={keytipMap.DisabledButton}\n          disabled={this.state.btnDisabled}\n          text={(this.state.btnDisabled ? 'Disabled' : 'Enabled') + ' Button'}\n          onClick={() => {\n            console.log('Disabled Button');\n          }}\n        />\n      </div>\n    );\n  }\n\n  private _toggleDisabled = (ev: React.MouseEvent<HTMLElement>, checked: boolean) => {\n    this.setState({ btnDisabled: !checked });\n  };\n}\n"]}
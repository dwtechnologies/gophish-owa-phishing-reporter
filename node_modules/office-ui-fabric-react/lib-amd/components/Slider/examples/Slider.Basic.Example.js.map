{"version":3,"file":"Slider.Basic.Example.js","sourceRoot":"../src/","sources":["components/Slider/examples/Slider.Basic.Example.tsx"],"names":[],"mappings":";;;IAQA,+BAA+B;IAC/B;QAAwC,8CAA6C;QAArF;YAAA,qEAwCC;YAvCQ,WAAK,GAA6B,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC;;QAuCxD,CAAC;QArCQ,mCAAM,GAAb;YAAA,iBAoCC;YAnCC,IAAM,WAAW,GAAiB,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC;YAEtD,OAAO,CACL,oBAAC,aAAK,IAAC,MAAM,EAAE,WAAW,EAAE,MAAM,EAAE,EAAE,IAAI,EAAE,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE;gBAC7D,oBAAC,eAAM,IACL,KAAK,EAAC,eAAe,EACrB,GAAG,EAAE,CAAC,EACN,GAAG,EAAE,CAAC,EACN,IAAI,EAAE,CAAC,EACP,YAAY,EAAE,CAAC,EACf,SAAS,EAAE,IAAI,EACf,QAAQ,EAAE,UAAC,KAAa,IAAK,OAAA,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAlB,CAAkB,GAC/C;gBACF,oBAAC,eAAM,IACL,KAAK,EAAC,yBAAyB,EAC/B,GAAG,EAAE,CAAC,EACN,GAAG,EAAE,EAAE,EACP,IAAI,EAAE,EAAE,EACR,YAAY,EAAE,EAAE,EAChB,SAAS,EAAE,IAAI,EACf,QAAQ,EAAE,UAAC,KAAa,IAAK,OAAA,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAlB,CAAkB,EAC/C,UAAU,SACV;gBACF,oBAAC,eAAM,IAAC,KAAK,EAAC,kBAAkB,EAAC,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,YAAY,EAAE,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,QAAQ,SAAG;gBAC7G,oBAAC,eAAM,IACL,KAAK,EAAC,oBAAoB,EAC1B,GAAG,EAAE,EAAE,EACP,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EACvB,QAAQ,EAAE,UAAC,KAAa,IAAK,OAAA,KAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,OAAA,EAAE,CAAC,EAAxB,CAAwB,EACrD,SAAS,EAAE,IAAI,GACf;gBACF,oBAAC,eAAM,IAAC,KAAK,EAAC,8BAA8B,EAAC,GAAG,EAAE,GAAG,EAAE,WAAW,EAAE,UAAC,KAAa,IAAK,OAAG,KAAK,MAAG,EAAX,CAAW,EAAE,SAAS,EAAE,IAAI,GAAI;gBACvH,oBAAC,eAAM,IAAC,KAAK,EAAC,kBAAkB,EAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,EAAE,SAAS,QAAC,cAAc,SAAG,CACjG,CACT,CAAC;QACJ,CAAC;QACH,yBAAC;IAAD,CAAC,AAxCD,CAAwC,KAAK,CAAC,SAAS,GAwCtD;IAxCY,gDAAkB","sourcesContent":["import * as React from 'react';\nimport { Slider } from 'office-ui-fabric-react/lib/Slider';\nimport { IStackTokens, Stack } from 'office-ui-fabric-react/lib/Stack';\n\nexport interface ISliderBasicExampleState {\n  value: number;\n}\n\n// tslint:disable:jsx-no-lambda\nexport class SliderBasicExample extends React.Component<{}, ISliderBasicExampleState> {\n  public state: ISliderBasicExampleState = { value: 0 };\n\n  public render(): JSX.Element {\n    const stackTokens: IStackTokens = { childrenGap: 20 };\n\n    return (\n      <Stack tokens={stackTokens} styles={{ root: { maxWidth: 300 } }}>\n        <Slider\n          label=\"Basic example\"\n          min={1}\n          max={5}\n          step={1}\n          defaultValue={2}\n          showValue={true}\n          onChange={(value: number) => console.log(value)}\n        />\n        <Slider\n          label=\"Snapping slider example\"\n          min={0}\n          max={50}\n          step={10}\n          defaultValue={20}\n          showValue={true}\n          onChange={(value: number) => console.log(value)}\n          snapToStep\n        />\n        <Slider label=\"Disabled example\" min={50} max={500} step={50} defaultValue={300} showValue={true} disabled />\n        <Slider\n          label=\"Controlled example\"\n          max={10}\n          value={this.state.value}\n          onChange={(value: number) => this.setState({ value })}\n          showValue={true}\n        />\n        <Slider label=\"Example with formatted value\" max={100} valueFormat={(value: number) => `${value}%`} showValue={true} />\n        <Slider label=\"Origin from zero\" min={-5} max={5} step={1} defaultValue={2} showValue originFromZero />\n      </Stack>\n    );\n  }\n}\n"]}
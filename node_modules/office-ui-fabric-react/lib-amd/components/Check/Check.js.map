{"version":3,"file":"Check.js","sourceRoot":"../src/","sources":["components/Check/Check.tsx"],"names":[],"mappings":";;;IAOa,QAAA,KAAK,GAAyC,kBAAM,CAC/D,sBAAS,EACT,wBAAS,EACT,SAAS,EACT;QACE,KAAK,EAAE,OAAO;KACf,EACD,IAAI,CACL,CAAC;IAEF;;;;;OAKG;IACU,QAAA,QAAQ,GAAG,2BAAe,CAAC,UAAC,KAAc,EAAE,OAAiB,EAAE,SAAkB;QAC5F,OAAO,oBAAC,aAAK,IAAC,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,YAAY,SAAG,CAAC;IACtF,CAAC,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { styled, memoizeFunction } from '../../Utilities';\nimport { ICheckProps, ICheckStyleProps, ICheckStyles } from './Check.types';\nimport { CheckBase } from './Check.base';\nimport { getStyles } from './Check.styles';\nimport { ITheme } from '../../Styling';\n\nexport const Check: React.FunctionComponent<ICheckProps> = styled<ICheckProps, ICheckStyleProps, ICheckStyles>(\n  CheckBase,\n  getStyles,\n  undefined,\n  {\n    scope: 'Check'\n  },\n  true\n);\n\n/**\n * Memoized helper for rendering a Check. Always uses fast icons.\n * @param theme - Theme, so the check can be re-rendered if it changes.\n * @param checked - Whether the check is checked.\n * @param className - Class name for styling the check.\n */\nexport const getCheck = memoizeFunction((theme?: ITheme, checked?: boolean, className?: string) => {\n  return <Check theme={theme} checked={checked} className={className} useFastIcons />;\n});\n"]}
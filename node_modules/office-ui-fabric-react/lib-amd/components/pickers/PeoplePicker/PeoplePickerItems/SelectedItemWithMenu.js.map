{"version":3,"file":"SelectedItemWithMenu.js","sourceRoot":"../src/","sources":["components/pickers/PeoplePicker/PeoplePickerItems/SelectedItemWithMenu.tsx"],"names":[],"mappings":";;;IASA,IAAM,MAAM,GAAQ,YAAY,CAAC;IAOjC;;;OAGG;IACH;QAA0C,gDAA6E;QAOrH,8BAAY,KAAqC;YAAjD,YACE,kBAAM,KAAK,CAAC,SAEb;YALO,kBAAY,GAAG,KAAK,CAAC,SAAS,EAAkB,CAAC;YAmCjD,uBAAiB,GAAG,UAAC,EAAQ;gBACnC,KAAI,CAAC,QAAQ,CAAC,EAAE,qBAAqB,EAAE,IAAI,EAAE,CAAC,CAAC;YACjD,CAAC,CAAC;YAEM,4BAAsB,GAAG,UAAC,EAAS;gBACzC,KAAI,CAAC,QAAQ,CAAC,EAAE,qBAAqB,EAAE,KAAK,EAAE,CAAC,CAAC;YAClD,CAAC,CAAC;YArCA,KAAI,CAAC,KAAK,GAAG,EAAE,qBAAqB,EAAE,KAAK,EAAE,CAAC;;QAChD,CAAC;QAEM,qCAAM,GAAb;YACQ,IAAA,eAA0D,EAAxD,cAAI,EAAE,8BAAY,EAAE,gDAAoC,CAAC;YACjE,OAAO,CACL,kDAAwB,IAAI,EAAE,SAAS,EAAE,eAAG,CAAC,yBAAyB,EAAE,MAAM,CAAC,aAAa,CAAC;gBAC3F,oBAAC,qBAAS,IAAC,SAAS,EAAE,eAAG,CAAC,4BAA4B,EAAE,MAAM,CAAC,gBAAgB,CAAC;oBAC9E,6BAAK,SAAS,EAAE,eAAG,CAAC,uBAAuB,EAAE,MAAM,CAAC,WAAW,CAAC;wBAC9D,oBAAC,iBAAO,uBAAK,IAAW,IAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,KAAK,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,yBAAe,CAAC,IAAI,IAAI,CACtG;oBACN,6BAAK,GAAG,EAAE,IAAI,CAAC,YAAY,EAAE,SAAS,EAAE,eAAG,CAAC,uBAAuB,EAAE,MAAM,CAAC,WAAW,CAAC;wBACtF,oBAAC,mBAAU,IAAC,SAAS,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,iBAAiB,GAAI,CAC5E;oBACN,6BAAK,SAAS,EAAE,eAAG,CAAC,uBAAuB,EAAE,MAAM,CAAC,WAAW,CAAC;wBAC9D,oBAAC,mBAAU,IAAC,SAAS,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,EAAE,OAAO,EAAE,YAAY,EAAE,SAAS,EAAE,qBAAqB,GAAI,CACtG;oBACL,IAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAClC,oBAAC,+BAAc,IACb,KAAK,EAAE,IAAI,CAAC,SAAU,EACtB,kBAAkB,EAAE,IAAI,EACxB,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,OAAO,EACjC,SAAS,EAAE,IAAI,CAAC,sBAAsB,EACtC,eAAe,EAAE,gCAAe,CAAC,cAAc,GAC/C,CACH,CAAC,CAAC,CAAC,IAAI,CACE,CACR,CACP,CAAC;QACJ,CAAC;QASH,2BAAC;IAAD,CAAC,AA/CD,CAA0C,yBAAa,GA+CtD;IA/CY,oDAAoB","sourcesContent":["import * as React from 'react';\nimport { BaseComponent, css } from '../../../../Utilities';\nimport { IPeoplePickerItemWithMenuProps } from './PeoplePickerItem.types';\nimport { Persona, PersonaPresence } from '../../../../Persona';\nimport { ContextualMenu, DirectionalHint } from '../../../../ContextualMenu';\nimport { IconButton } from '../../../../Button';\nimport { FocusZone } from '../../../../FocusZone';\n\nimport * as stylesImport from './PickerItemsDefault.scss';\nconst styles: any = stylesImport;\n\n/** PeoplePickerItemWithMenu state interface. */\nexport interface IPeoplePickerItemWithMenuState {\n  contextualMenuVisible: boolean;\n}\n\n/**\n * PeoplePickerItem with an additional contextual menu.\n * @deprecated Do not use. Will be removed in Fabric 7.0\n */\nexport class SelectedItemWithMenu extends BaseComponent<IPeoplePickerItemWithMenuProps, IPeoplePickerItemWithMenuState> {\n  public refs: {\n    [key: string]: any;\n  };\n\n  private _ellipsisRef = React.createRef<HTMLDivElement>();\n\n  constructor(props: IPeoplePickerItemWithMenuProps) {\n    super(props);\n    this.state = { contextualMenuVisible: false };\n  }\n\n  public render(): JSX.Element {\n    const { item, onRemoveItem, removeButtonAriaLabel } = this.props;\n    return (\n      <div data-is-focusable={true} className={css('ms-PickerItem-container', styles.itemContainer)}>\n        <FocusZone className={css('ms-PickerPersona-container', styles.personaContainer)}>\n          <div className={css('ms-PickerItem-content', styles.itemContent)}>\n            <Persona {...item as any} presence={item.presence !== undefined ? item.presence : PersonaPresence.none} />\n          </div>\n          <div ref={this._ellipsisRef} className={css('ms-PickerItem-content', styles.itemContent)}>\n            <IconButton iconProps={{ iconName: 'More' }} onClick={this._onContextualMenu} />\n          </div>\n          <div className={css('ms-PickerItem-content', styles.itemContent)}>\n            <IconButton iconProps={{ iconName: 'Cancel' }} onClick={onRemoveItem} ariaLabel={removeButtonAriaLabel} />\n          </div>\n          {this.state.contextualMenuVisible ? (\n            <ContextualMenu\n              items={item.menuItems!}\n              shouldFocusOnMount={true}\n              target={this._ellipsisRef.current}\n              onDismiss={this._onCloseContextualMenu}\n              directionalHint={DirectionalHint.bottomAutoEdge}\n            />\n          ) : null}\n        </FocusZone>\n      </div>\n    );\n  }\n\n  private _onContextualMenu = (ev?: any): void => {\n    this.setState({ contextualMenuVisible: true });\n  };\n\n  private _onCloseContextualMenu = (ev: Event) => {\n    this.setState({ contextualMenuVisible: false });\n  };\n}\n"]}
{"version":3,"file":"IconButton.js","sourceRoot":"../src/","sources":["components/Button/IconButton/IconButton.tsx"],"names":[],"mappings":";;;IAMA;;OAEG;IAEH;QAAgC,sCAA+B;QAD/D;YAAA,qEAoBC;YAlBC;;eAEG;YACO,iCAA2B,GAAG,IAAI,CAAC;;QAe/C,CAAC;QAbQ,2BAAM,GAAb;YACQ,IAAA,eAA8B,EAA5B,kBAAM,EAAE,gBAAoB,CAAC;YAErC,OAAO,CACL,oBAAC,uBAAU,uBACL,IAAI,CAAC,KAAK,IACd,gBAAgB,EAAC,iBAAiB,EAClC,MAAM,EAAE,6BAAS,CAAC,KAAM,EAAE,MAAM,CAAC,EACjC,YAAY,EAAE,sBAAU,EACxB,mBAAmB,EAAE,sBAAU,IAC/B,CACH,CAAC;QACJ,CAAC;QAlBU,UAAU;YADtB,wBAAY,CAAC,YAAY,EAAE,CAAC,OAAO,EAAE,QAAQ,CAAC,EAAE,IAAI,CAAC;WACzC,UAAU,CAmBtB;QAAD,iBAAC;KAAA,AAnBD,CAAgC,yBAAa,GAmB5C;IAnBY,gCAAU","sourcesContent":["import * as React from 'react';\nimport { BaseButton } from '../BaseButton';\nimport { BaseComponent, customizable, nullRender } from '../../../Utilities';\nimport { IButtonProps } from '../Button.types';\nimport { getStyles } from './IconButton.styles';\n\n/**\n * {@docCategory Button}\n */\n@customizable('IconButton', ['theme', 'styles'], true)\nexport class IconButton extends BaseComponent<IButtonProps, {}> {\n  /**\n   * Tell BaseComponent to bypass resolution of componentRef.\n   */\n  protected _skipComponentRefResolution = true;\n\n  public render(): JSX.Element {\n    const { styles, theme } = this.props;\n\n    return (\n      <BaseButton\n        {...this.props}\n        variantClassName=\"ms-Button--icon\"\n        styles={getStyles(theme!, styles)}\n        onRenderText={nullRender}\n        onRenderDescription={nullRender}\n      />\n    );\n  }\n}\n"]}
{"version":3,"file":"Button.ContextualMenu.Example.js","sourceRoot":"../src/","sources":["components/Button/examples/Button.ContextualMenu.Example.tsx"],"names":[],"mappings":";;;IASA,IAAM,SAAS,GAAyB;QACtC,KAAK,EAAE;YACL;gBACE,GAAG,EAAE,cAAc;gBACnB,IAAI,EAAE,eAAe;gBACrB,SAAS,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE;aAChC;YACD;gBACE,GAAG,EAAE,eAAe;gBACpB,IAAI,EAAE,gBAAgB;gBACtB,SAAS,EAAE,EAAE,QAAQ,EAAE,UAAU,EAAE;aACpC;SACF;QACD,oBAAoB,EAAE,IAAI;KAC3B,CAAC;IACF,IAAM,OAAO,GAAe,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC;IAEnC,QAAA,2BAA2B,GAAiD,UAAA,KAAK;QACpF,IAAA,yBAAQ,EAAE,uBAAO,CAAW;QAEpC,OAAO,CACL,oBAAC,sCAAa,IACZ,IAAI,EAAC,UAAU,EACf,SAAS,EAAE,OAAO,EAClB,SAAS,EAAE,SAAS;YACpB,gDAAgD;YAChD,MAAM,EAAE,QAAQ;YAChB,4EAA4E;YAC5E,WAAW,EAAE,YAAY;YACzB,+FAA+F;YAC/F,wFAAwF;YACxF,qBAAqB;YACrB,kBAAkB,QAClB,QAAQ,EAAE,QAAQ,EAClB,OAAO,EAAE,OAAO,GAChB,CACH,CAAC;IACJ,CAAC,CAAC;IAEF,SAAS,QAAQ,CAAC,KAA2B;QAC3C,wCAAwC;QACxC,OAAO,oBAAC,uCAAc,uBAAK,KAAK,EAAI,CAAC;IACvC,CAAC;IAED,SAAS,YAAY,CAAC,EAA8B;QAClD,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAClB,CAAC","sourcesContent":["import * as React from 'react';\nimport { ContextualMenu, DefaultButton, IContextualMenuProps, IIconProps } from 'office-ui-fabric-react';\n\nexport interface IButtonExampleProps {\n  // These are set based on the toggles shown above the examples (not needed in real code)\n  disabled?: boolean;\n  checked?: boolean;\n}\n\nconst menuProps: IContextualMenuProps = {\n  items: [\n    {\n      key: 'emailMessage',\n      text: 'Email message',\n      iconProps: { iconName: 'Mail' }\n    },\n    {\n      key: 'calendarEvent',\n      text: 'Calendar event',\n      iconProps: { iconName: 'Calendar' }\n    }\n  ],\n  directionalHintFixed: true\n};\nconst addIcon: IIconProps = { iconName: 'Add' };\n\nexport const ButtonContextualMenuExample: React.FunctionComponent<IButtonExampleProps> = props => {\n  const { disabled, checked } = props;\n\n  return (\n    <DefaultButton\n      text=\"New item\"\n      iconProps={addIcon}\n      menuProps={menuProps}\n      // Optional callback to customize menu rendering\n      menuAs={_getMenu}\n      // Optional callback to do other actions (besides opening the menu) on click\n      onMenuClick={_onMenuClick}\n      // By default, the ContextualMenu is re-created each time it's shown and destroyed when closed.\n      // Uncomment the next line to hide the ContextualMenu but persist it in the DOM instead.\n      // persistMenu={true}\n      allowDisabledFocus\n      disabled={disabled}\n      checked={checked}\n    />\n  );\n};\n\nfunction _getMenu(props: IContextualMenuProps): JSX.Element {\n  // Customize contextual menu with menuAs\n  return <ContextualMenu {...props} />;\n}\n\nfunction _onMenuClick(ev?: React.SyntheticEvent<any>) {\n  console.log(ev);\n}\n"]}
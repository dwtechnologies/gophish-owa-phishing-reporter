{"version":3,"file":"Button.Split.Example.js","sourceRoot":"../src/","sources":["components/Button/examples/Button.Split.Example.tsx"],"names":[],"mappings":";;;IASA,IAAM,SAAS,GAAyB;QACtC,KAAK,EAAE;YACL;gBACE,GAAG,EAAE,cAAc;gBACnB,IAAI,EAAE,eAAe;gBACrB,SAAS,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE;aAChC;YACD;gBACE,GAAG,EAAE,eAAe;gBACpB,IAAI,EAAE,gBAAgB;gBACtB,SAAS,EAAE,EAAE,QAAQ,EAAE,UAAU,EAAE;aACpC;SACF;KACF,CAAC;IACF,qBAAqB;IACrB,IAAM,WAAW,GAAiB,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC;IAEzC,QAAA,kBAAkB,GAAiD,UAAA,KAAK;QAC3E,IAAA,yBAAQ,EAAE,uBAAO,CAAW;QAEpC,OAAO,CACL,oBAAC,8BAAK,IAAC,UAAU,QAAC,IAAI,QAAC,MAAM,EAAE,WAAW;YACxC,oBAAC,sCAAa,IACZ,IAAI,EAAC,UAAU,EACf,KAAK,QACL,oBAAoB,EAAC,eAAe,0BACf,cAAc,EACnC,SAAS,EAAE,SAAS,EACpB,OAAO,EAAE,aAAa,EACtB,QAAQ,EAAE,QAAQ,EAClB,OAAO,EAAE,OAAO,GAChB;YACF,oBAAC,sCAAa,IACZ,IAAI,EAAC,SAAS,EACd,OAAO,QACP,KAAK,QACL,oBAAoB,EAAC,eAAe,0BACf,cAAc,EACnC,SAAS,EAAE,SAAS,EACpB,OAAO,EAAE,aAAa,EACtB,QAAQ,EAAE,QAAQ,EAClB,OAAO,EAAE,OAAO,GAChB;YACF,oBAAC,sCAAa,IACZ,IAAI,EAAC,sBAAsB,EAC3B,eAAe,QACf,KAAK,QACL,oBAAoB,EAAC,eAAe,0BACf,cAAc,EACnC,SAAS,EAAE,SAAS,EACpB,OAAO,EAAE,aAAa,EACtB,QAAQ,EAAE,QAAQ,EAClB,OAAO,EAAE,OAAO,GAChB;YACF,oBAAC,sCAAa,IACZ,IAAI,EAAC,UAAU,EACf,QAAQ,QACR,kBAAkB,QAClB,KAAK,QACL,oBAAoB,EAAC,eAAe,0BACf,cAAc,EACnC,SAAS,EAAE,SAAS,EACpB,OAAO,EAAE,aAAa,EACtB,OAAO,EAAE,OAAO,GAChB,CACI,CACT,CAAC;IACJ,CAAC,CAAC;IAEF,SAAS,aAAa;QACpB,KAAK,CAAC,SAAS,CAAC,CAAC;IACnB,CAAC","sourcesContent":["import * as React from 'react';\nimport { DefaultButton, IContextualMenuProps, Stack, IStackTokens } from 'office-ui-fabric-react';\n\nexport interface IButtonExampleProps {\n  // These are set based on the toggles shown above the examples (not needed in real code)\n  disabled?: boolean;\n  checked?: boolean;\n}\n\nconst menuProps: IContextualMenuProps = {\n  items: [\n    {\n      key: 'emailMessage',\n      text: 'Email message',\n      iconProps: { iconName: 'Mail' }\n    },\n    {\n      key: 'calendarEvent',\n      text: 'Calendar event',\n      iconProps: { iconName: 'Calendar' }\n    }\n  ]\n};\n// Example formatting\nconst stackTokens: IStackTokens = { childrenGap: 40 };\n\nexport const ButtonSplitExample: React.FunctionComponent<IButtonExampleProps> = props => {\n  const { disabled, checked } = props;\n\n  return (\n    <Stack horizontal wrap tokens={stackTokens}>\n      <DefaultButton\n        text=\"Standard\"\n        split\n        splitButtonAriaLabel=\"See 2 options\"\n        aria-roledescription=\"split button\"\n        menuProps={menuProps}\n        onClick={_alertClicked}\n        disabled={disabled}\n        checked={checked}\n      />\n      <DefaultButton\n        text=\"Primary\"\n        primary\n        split\n        splitButtonAriaLabel=\"See 2 options\"\n        aria-roledescription=\"split button\"\n        menuProps={menuProps}\n        onClick={_alertClicked}\n        disabled={disabled}\n        checked={checked}\n      />\n      <DefaultButton\n        text=\"Main action disabled\"\n        primaryDisabled\n        split\n        splitButtonAriaLabel=\"See 2 options\"\n        aria-roledescription=\"split button\"\n        menuProps={menuProps}\n        onClick={_alertClicked}\n        disabled={disabled}\n        checked={checked}\n      />\n      <DefaultButton\n        text=\"Disabled\"\n        disabled\n        allowDisabledFocus\n        split\n        splitButtonAriaLabel=\"See 2 options\"\n        aria-roledescription=\"split button\"\n        menuProps={menuProps}\n        onClick={_alertClicked}\n        checked={checked}\n      />\n    </Stack>\n  );\n};\n\nfunction _alertClicked() {\n  alert('Clicked');\n}\n"]}
{"version":3,"file":"Button.Command.Example.js","sourceRoot":"../src/","sources":["components/Button/examples/Button.Command.Example.tsx"],"names":[],"mappings":";;;IASA,IAAM,SAAS,GAAyB;QACtC,KAAK,EAAE;YACL;gBACE,GAAG,EAAE,cAAc;gBACnB,IAAI,EAAE,eAAe;gBACrB,SAAS,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE;aAChC;YACD;gBACE,GAAG,EAAE,eAAe;gBACpB,IAAI,EAAE,gBAAgB;gBACtB,SAAS,EAAE,EAAE,QAAQ,EAAE,UAAU,EAAE;aACpC;SACF;QACD,+FAA+F;QAC/F,4BAA4B;KAC7B,CAAC;IAEF,IAAM,OAAO,GAAe,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC;IAEnC,QAAA,oBAAoB,GAAiD,UAAA,KAAK;QAC7E,IAAA,yBAAQ,EAAE,uBAAO,CAAW;QAEpC,OAAO,oBAAC,sCAAa,IAAC,SAAS,EAAE,OAAO,EAAE,IAAI,EAAC,UAAU,EAAC,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,GAAI,CAAC;IAC3H,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { CommandButton, IContextualMenuProps, IIconProps } from 'office-ui-fabric-react';\n\nexport interface IButtonExampleProps {\n  // These are set based on the toggles shown above the examples (not needed in real code)\n  disabled?: boolean;\n  checked?: boolean;\n}\n\nconst menuProps: IContextualMenuProps = {\n  items: [\n    {\n      key: 'emailMessage',\n      text: 'Email message',\n      iconProps: { iconName: 'Mail' }\n    },\n    {\n      key: 'calendarEvent',\n      text: 'Calendar event',\n      iconProps: { iconName: 'Calendar' }\n    }\n  ]\n  // By default, the menu will be focused when it opens. Uncomment the next line to prevent this.\n  // shouldFocusOnMount: false\n};\n\nconst addIcon: IIconProps = { iconName: 'Add' };\n\nexport const ButtonCommandExample: React.FunctionComponent<IButtonExampleProps> = props => {\n  const { disabled, checked } = props;\n\n  return <CommandButton iconProps={addIcon} text=\"New item\" menuProps={menuProps} disabled={disabled} checked={checked} />;\n};\n"]}
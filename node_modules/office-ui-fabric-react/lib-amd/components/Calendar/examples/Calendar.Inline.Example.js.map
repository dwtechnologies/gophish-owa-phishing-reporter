{"version":3,"file":"Calendar.Inline.Example.js","sourceRoot":"../src/","sources":["components/Calendar/examples/Calendar.Inline.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport { addDays, getDateRangeArray } from 'office-ui-fabric-react/lib/utilities/dateMath/DateMath';\nimport { Calendar, DayOfWeek, DateRangeType } from 'office-ui-fabric-react/lib/Calendar';\n\nconst DayPickerStrings = {\n  months: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n  shortMonths: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n  shortDays: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  goToToday: 'Go to today',\n  weekNumberFormatString: 'Week number {0}',\n  prevMonthAriaLabel: 'Previous month',\n  nextMonthAriaLabel: 'Next month',\n  prevYearAriaLabel: 'Previous year',\n  nextYearAriaLabel: 'Next year',\n  prevYearRangeAriaLabel: 'Previous year range',\n  nextYearRangeAriaLabel: 'Next year range',\n  closeButtonAriaLabel: 'Close'\n};\n\nexport interface ICalendarInlineExampleState {\n  selectedDate?: Date | null;\n  selectedDateRange?: Date[] | null;\n}\n\nexport interface ICalendarInlineExampleProps {\n  isMonthPickerVisible?: boolean;\n  dateRangeType: DateRangeType;\n  autoNavigateOnSelection: boolean;\n  showGoToToday: boolean;\n  showNavigateButtons?: boolean;\n  highlightCurrentMonth?: boolean;\n  highlightSelectedMonth?: boolean;\n  isDayPickerVisible?: boolean;\n  showMonthPickerAsOverlay?: boolean;\n  showWeekNumbers?: boolean;\n  minDate?: Date;\n  maxDate?: Date;\n  restrictedDates?: Date[];\n  showSixWeeksByDefault?: boolean;\n  workWeekDays?: DayOfWeek[];\n  firstDayOfWeek?: DayOfWeek;\n}\n\nexport class CalendarInlineExample extends React.Component<ICalendarInlineExampleProps, ICalendarInlineExampleState> {\n  public constructor(props: ICalendarInlineExampleProps) {\n    super(props);\n\n    this.state = {\n      selectedDate: null,\n      selectedDateRange: null\n    };\n\n    this._onDismiss = this._onDismiss.bind(this);\n    this._onSelectDate = this._onSelectDate.bind(this);\n    this._goNext = this._goNext.bind(this);\n    this._goPrevious = this._goPrevious.bind(this);\n  }\n\n  public render(): JSX.Element {\n    const divStyle: React.CSSProperties = {\n      height: 'auto'\n    };\n\n    const buttonStyle: React.CSSProperties = {\n      margin: '17px 10px 0 0'\n    };\n\n    let dateRangeString: string | null = null;\n    if (this.state.selectedDateRange) {\n      const rangeStart = this.state.selectedDateRange[0];\n      const rangeEnd = this.state.selectedDateRange[this.state.selectedDateRange.length - 1];\n      dateRangeString = rangeStart.toLocaleDateString() + '-' + rangeEnd.toLocaleDateString();\n    }\n\n    return (\n      <div style={divStyle}>\n        {\n          <div>\n            Selected date(s): <span>{!this.state.selectedDate ? 'Not set' : this.state.selectedDate.toLocaleString()}</span>\n          </div>\n        }\n        <div>\n          Selected dates:\n          <span> {!dateRangeString ? 'Not set' : dateRangeString}</span>\n        </div>\n        {(this.props.minDate || this.props.maxDate) && (\n          <div>\n            Date boundary:\n            <span>\n              {' '}\n              {this.props.minDate ? this.props.minDate.toLocaleDateString() : 'Not set'}-\n              {this.props.maxDate ? this.props.maxDate.toLocaleDateString() : 'Not set'}\n            </span>\n          </div>\n        )}\n        {this.props.restrictedDates && (\n          <div>\n            Disabled date(s):\n            <span>\n              {' '}\n              {this.props.restrictedDates.length > 0 ? this.props.restrictedDates.map(d => d.toLocaleDateString()).join(', ') : 'Not set'}\n            </span>\n          </div>\n        )}\n        <Calendar\n          onSelectDate={this._onSelectDate}\n          onDismiss={this._onDismiss}\n          isMonthPickerVisible={this.props.isMonthPickerVisible}\n          dateRangeType={this.props.dateRangeType}\n          autoNavigateOnSelection={this.props.autoNavigateOnSelection}\n          showGoToToday={this.props.showGoToToday}\n          value={this.state.selectedDate!}\n          firstDayOfWeek={this.props.firstDayOfWeek ? this.props.firstDayOfWeek : DayOfWeek.Sunday}\n          strings={DayPickerStrings}\n          highlightCurrentMonth={this.props.highlightCurrentMonth}\n          highlightSelectedMonth={this.props.highlightSelectedMonth}\n          isDayPickerVisible={this.props.isDayPickerVisible}\n          showMonthPickerAsOverlay={this.props.showMonthPickerAsOverlay}\n          showWeekNumbers={this.props.showWeekNumbers}\n          minDate={this.props.minDate}\n          maxDate={this.props.maxDate}\n          restrictedDates={this.props.restrictedDates}\n          showSixWeeksByDefault={this.props.showSixWeeksByDefault}\n          workWeekDays={this.props.workWeekDays}\n        />\n        {this.props.showNavigateButtons && (\n          <div>\n            <DefaultButton style={buttonStyle} onClick={this._goPrevious} text=\"Previous\" />\n            <DefaultButton style={buttonStyle} onClick={this._goNext} text=\"Next\" />\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  private _onDismiss(): void {\n    this.setState((prevState: ICalendarInlineExampleState) => {\n      return prevState;\n    });\n  }\n\n  private _goPrevious(): void {\n    this.setState((prevState: ICalendarInlineExampleState) => {\n      const selectedDate = prevState.selectedDate || new Date();\n      const dateRangeArray = getDateRangeArray(selectedDate, this.props.dateRangeType, DayOfWeek.Sunday);\n\n      let subtractFrom = dateRangeArray[0];\n      let daysToSubtract = dateRangeArray.length;\n\n      if (this.props.dateRangeType === DateRangeType.Month) {\n        subtractFrom = new Date(subtractFrom.getFullYear(), subtractFrom.getMonth(), 1);\n        daysToSubtract = 1;\n      }\n\n      const newSelectedDate = addDays(subtractFrom, -daysToSubtract);\n\n      return {\n        selectedDate: newSelectedDate\n      };\n    });\n  }\n\n  private _goNext(): void {\n    this.setState((prevState: ICalendarInlineExampleState) => {\n      const selectedDate = prevState.selectedDate || new Date();\n      const dateRangeArray = getDateRangeArray(selectedDate, this.props.dateRangeType, DayOfWeek.Sunday);\n      const newSelectedDate = addDays(dateRangeArray.pop()!, 1);\n\n      return {\n        selectedDate: newSelectedDate\n      };\n    });\n  }\n\n  private _onSelectDate(date: Date, dateRangeArray: Date[]): void {\n    this.setState((prevState: ICalendarInlineExampleState) => {\n      return {\n        selectedDate: date,\n        selectedDateRange: dateRangeArray\n      };\n    });\n  }\n}\n"]}
{"version":3,"file":"DetailsList.CustomRows.Example.js","sourceRoot":"../src/","sources":["components/DetailsList/examples/DetailsList.CustomRows.Example.tsx"],"names":[],"mappings":";;;IAKA,IAAM,KAAK,GAAG,kBAAQ,EAAE,CAAC;IAEzB;QAAkD,wDAAuB;QAGvE,sCAAY,KAAS;YAArB,YACE,kBAAM,KAAK,CAAC,SAEb;YAMO,kBAAY,GAAG,UAAC,KAAuB;gBAC7C,IAAM,YAAY,GAA+B,EAAE,CAAC;gBACpD,IAAI,KAAK,CAAC,SAAS,GAAG,CAAC,KAAK,CAAC,EAAE;oBAC7B,4DAA4D;oBAC5D,YAAY,CAAC,IAAI,GAAG,EAAE,eAAe,EAAE,KAAK,CAAC,OAAO,CAAC,eAAe,EAAE,CAAC;iBACxE;gBAED,OAAO,oBAAC,wBAAU,uBAAK,KAAK,IAAE,MAAM,EAAE,YAAY,IAAI,CAAC;YACzD,CAAC,CAAC;YAfA,KAAI,CAAC,MAAM,GAAG,8BAAe,CAAC,GAAG,CAAC,CAAC;;QACrC,CAAC;QAEM,6CAAM,GAAb;YACE,OAAO,oBAAC,yBAAW,IAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,MAAM,EAAC,KAAK,EAAC,WAAW,EAAE,IAAI,CAAC,YAAY,EAAE,oBAAoB,EAAC,cAAc,GAAG,CAAC;QAC9H,CAAC;QAWH,mCAAC;IAAD,CAAC,AArBD,CAAkD,KAAK,CAAC,SAAS,GAqBhE;IArBY,oEAA4B","sourcesContent":["import * as React from 'react';\nimport { DetailsList, DetailsRow, IDetailsRowProps, IDetailsRowStyles } from 'office-ui-fabric-react/lib/DetailsList';\nimport { createListItems, IExampleItem } from '@uifabric/example-data';\nimport { getTheme } from 'office-ui-fabric-react/lib/Styling';\n\nconst theme = getTheme();\n\nexport class DetailsListCustomRowsExample extends React.Component<{}, {}> {\n  private _items: IExampleItem[];\n\n  constructor(props: {}) {\n    super(props);\n    this._items = createListItems(500);\n  }\n\n  public render() {\n    return <DetailsList items={this._items} setKey=\"set\" onRenderRow={this._onRenderRow} checkButtonAriaLabel=\"Row checkbox\" />;\n  }\n\n  private _onRenderRow = (props: IDetailsRowProps): JSX.Element => {\n    const customStyles: Partial<IDetailsRowStyles> = {};\n    if (props.itemIndex % 2 === 0) {\n      // Every other row renders with a different background color\n      customStyles.root = { backgroundColor: theme.palette.themeLighterAlt };\n    }\n\n    return <DetailsRow {...props} styles={customStyles} />;\n  };\n}\n"]}
{"version":3,"file":"DetailsList.CustomColumns.Example.js","sourceRoot":"../src/","sources":["components/DetailsList/examples/DetailsList.CustomColumns.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { createListItems, IExampleItem } from '@uifabric/example-data';\nimport { Link } from 'office-ui-fabric-react/lib/Link';\nimport { Image, ImageFit } from 'office-ui-fabric-react/lib/Image';\nimport { DetailsList, buildColumns, IColumn } from 'office-ui-fabric-react/lib/DetailsList';\nimport { mergeStyles } from 'office-ui-fabric-react/lib/Styling';\n\nexport interface IDetailsListCustomColumnsExampleState {\n  sortedItems: IExampleItem[];\n  columns: IColumn[];\n}\n\nexport class DetailsListCustomColumnsExample extends React.Component<{}, IDetailsListCustomColumnsExampleState> {\n  constructor(props: {}) {\n    super(props);\n\n    const items = createListItems(500);\n    this.state = {\n      sortedItems: items,\n      columns: _buildColumns(items)\n    };\n  }\n\n  public render() {\n    const { sortedItems, columns } = this.state;\n\n    return (\n      <DetailsList\n        items={sortedItems}\n        setKey=\"set\"\n        columns={columns}\n        onRenderItemColumn={_renderItemColumn}\n        onColumnHeaderClick={this._onColumnClick}\n        onItemInvoked={this._onItemInvoked}\n        onColumnHeaderContextMenu={this._onColumnHeaderContextMenu}\n        ariaLabelForSelectionColumn=\"Toggle selection\"\n        ariaLabelForSelectAllCheckbox=\"Toggle selection for all items\"\n        checkButtonAriaLabel=\"Row checkbox\"\n      />\n    );\n  }\n\n  private _onColumnClick = (event: React.MouseEvent<HTMLElement>, column: IColumn): void => {\n    const { columns } = this.state;\n    let { sortedItems } = this.state;\n    let isSortedDescending = column.isSortedDescending;\n\n    // If we've sorted this column, flip it.\n    if (column.isSorted) {\n      isSortedDescending = !isSortedDescending;\n    }\n\n    // Sort the items.\n    sortedItems = _copyAndSort(sortedItems, column.fieldName!, isSortedDescending);\n\n    // Reset the items and columns to match the state.\n    this.setState({\n      sortedItems: sortedItems,\n      columns: columns.map(col => {\n        col.isSorted = col.key === column.key;\n\n        if (col.isSorted) {\n          col.isSortedDescending = isSortedDescending;\n        }\n\n        return col;\n      })\n    });\n  };\n\n  private _onColumnHeaderContextMenu(column: IColumn | undefined, ev: React.MouseEvent<HTMLElement> | undefined): void {\n    console.log(`column ${column!.key} contextmenu opened.`);\n  }\n\n  private _onItemInvoked(item: any, index: number | undefined): void {\n    alert(`Item ${item.name} at index ${index} has been invoked.`);\n  }\n}\n\nfunction _buildColumns(items: IExampleItem[]): IColumn[] {\n  const columns = buildColumns(items);\n\n  const thumbnailColumn = columns.filter(column => column.name === 'thumbnail')[0];\n\n  // Special case one column's definition.\n  thumbnailColumn.name = '';\n  thumbnailColumn.maxWidth = 50;\n\n  return columns;\n}\n\nfunction _renderItemColumn(item: IExampleItem, index: number, column: IColumn) {\n  const fieldContent = item[column.fieldName as keyof IExampleItem] as string;\n\n  switch (column.key) {\n    case 'thumbnail':\n      return <Image src={fieldContent} width={50} height={50} imageFit={ImageFit.cover} />;\n\n    case 'name':\n      return <Link href=\"#\">{fieldContent}</Link>;\n\n    case 'color':\n      return (\n        <span data-selection-disabled={true} className={mergeStyles({ color: fieldContent, height: '100%', display: 'block' })}>\n          {fieldContent}\n        </span>\n      );\n\n    default:\n      return <span>{fieldContent}</span>;\n  }\n}\n\nfunction _copyAndSort<T>(items: T[], columnKey: string, isSortedDescending?: boolean): T[] {\n  const key = columnKey as keyof T;\n  return items.slice(0).sort((a: T, b: T) => ((isSortedDescending ? a[key] < b[key] : a[key] > b[key]) ? 1 : -1));\n}\n"]}
{"version":3,"file":"DetailsList.base.js","sourceRoot":"../src/","sources":["components/DetailsList/DetailsList.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\n\nimport {\n  initializeComponentRef,\n  initializeFocusRects,\n  Async,\n  KeyCodes,\n  elementContains,\n  getRTLSafeKeyCode,\n  IRenderFunction,\n  classNamesFunction,\n  memoizeFunction\n} from '../../Utilities';\nimport {\n  CheckboxVisibility,\n  ColumnActionsMode,\n  ConstrainMode,\n  DetailsListLayoutMode,\n  IColumn,\n  IDetailsList,\n  IDetailsListProps,\n  IDetailsListStyles,\n  IDetailsListStyleProps,\n  IDetailsGroupRenderProps,\n  ColumnDragEndLocation\n} from '../DetailsList/DetailsList.types';\nimport { DetailsHeader } from '../DetailsList/DetailsHeader';\nimport { IDetailsHeader, SelectAllVisibility, IDetailsHeaderProps, IColumnReorderHeaderProps } from '../DetailsList/DetailsHeader.types';\nimport { IDetailsFooterProps } from '../DetailsList/DetailsFooter.types';\nimport { DetailsRowBase } from '../DetailsList/DetailsRow.base';\nimport { DetailsRow } from '../DetailsList/DetailsRow';\nimport { IDetailsRowProps } from '../DetailsList/DetailsRow.types';\nimport { IFocusZone, FocusZone, FocusZoneDirection } from '../../FocusZone';\nimport { IObjectWithKey, ISelection, Selection, SelectionMode, SelectionZone } from '../../utilities/selection/index';\n\nimport { DragDropHelper } from '../../utilities/dragdrop/DragDropHelper';\nimport { IGroupedList, GroupedList, IGroupDividerProps, IGroupRenderProps } from '../../GroupedList';\nimport { List, IListProps, ScrollToMode } from '../../List';\nimport { withViewport } from '../../utilities/decorators/withViewport';\nimport { GetGroupCount } from '../../utilities/groupedList/GroupedListUtility';\nimport { DEFAULT_CELL_STYLE_PROPS } from './DetailsRow.styles';\nimport { CHECK_CELL_WIDTH as CHECKBOX_WIDTH } from './DetailsRowCheck.styles';\n// For every group level there is a GroupSpacer added. Importing this const to have the source value in one place.\nimport { SPACER_WIDTH as GROUP_EXPAND_WIDTH } from '../GroupedList/GroupSpacer';\n\nconst getClassNames = classNamesFunction<IDetailsListStyleProps, IDetailsListStyles>();\n\nexport interface IDetailsListState {\n  focusedItemIndex: number;\n  lastWidth?: number;\n  lastSelectionMode?: SelectionMode;\n  adjustedColumns: IColumn[];\n  isCollapsed?: boolean;\n  isSizing?: boolean;\n  isDropping?: boolean;\n  isSomeGroupExpanded?: boolean;\n}\n\nconst MIN_COLUMN_WIDTH = 100; // this is the global min width\n\nconst DEFAULT_RENDERED_WINDOWS_AHEAD = 2;\nconst DEFAULT_RENDERED_WINDOWS_BEHIND = 2;\n\n@withViewport\nexport class DetailsListBase extends React.Component<IDetailsListProps, IDetailsListState> implements IDetailsList {\n  public static defaultProps = {\n    layoutMode: DetailsListLayoutMode.justified,\n    selectionMode: SelectionMode.multiple,\n    constrainMode: ConstrainMode.horizontalConstrained,\n    checkboxVisibility: CheckboxVisibility.onHover,\n    isHeaderVisible: true,\n    compact: false,\n    useFastIcons: true\n  };\n\n  // References\n  private _async: Async;\n  private _root = React.createRef<HTMLDivElement>();\n  private _header = React.createRef<IDetailsHeader>();\n  private _groupedList = React.createRef<IGroupedList>();\n  private _list = React.createRef<List>();\n  private _focusZone = React.createRef<IFocusZone>();\n  private _selectionZone = React.createRef<SelectionZone>();\n\n  private _selection: ISelection;\n  private _activeRows: { [key: string]: DetailsRowBase };\n  private _dragDropHelper: DragDropHelper | undefined;\n  private _initialFocusedIndex: number | undefined;\n  private _pendingForceUpdate: boolean;\n\n  private _columnOverrides: {\n    [key: string]: IColumn;\n  };\n\n  private _sumColumnWidths = memoizeFunction((columns: IColumn[]) => {\n    let totalWidth: number = 0;\n\n    columns.forEach((column: IColumn) => (totalWidth += column.calculatedWidth || column.minWidth));\n\n    return totalWidth;\n  });\n\n  constructor(props: IDetailsListProps) {\n    super(props);\n\n    initializeComponentRef(this);\n    initializeFocusRects();\n    this._async = new Async(this);\n\n    this._activeRows = {};\n    this._columnOverrides = {};\n\n    this.state = {\n      focusedItemIndex: -1,\n      lastWidth: 0,\n      adjustedColumns: this._getAdjustedColumns(props),\n      isSizing: false,\n      isDropping: false,\n      isCollapsed: props.groupProps && props.groupProps.isAllGroupsCollapsed,\n      isSomeGroupExpanded: props.groupProps && !props.groupProps.isAllGroupsCollapsed\n    };\n\n    this._selection = props.selection || new Selection({ onSelectionChanged: undefined, getKey: props.getKey });\n\n    if (!this.props.disableSelectionZone) {\n      this._selection.setItems(props.items as IObjectWithKey[], false);\n    }\n\n    this._dragDropHelper = props.dragDropEvents\n      ? new DragDropHelper({\n          selection: this._selection,\n          minimumPixelsForDrag: props.minimumPixelsForDrag\n        })\n      : undefined;\n    this._initialFocusedIndex = props.initialFocusedIndex;\n  }\n\n  public scrollToIndex(index: number, measureItem?: (itemIndex: number) => number, scrollToMode?: ScrollToMode): void {\n    this._list.current && this._list.current.scrollToIndex(index, measureItem, scrollToMode);\n    this._groupedList.current && this._groupedList.current.scrollToIndex(index, measureItem, scrollToMode);\n  }\n\n  public focusIndex(\n    index: number,\n    forceIntoFirstElement: boolean = false,\n    measureItem?: (itemIndex: number) => number,\n    scrollToMode?: ScrollToMode\n  ): void {\n    const item = this.props.items[index];\n    if (item) {\n      this.scrollToIndex(index, measureItem, scrollToMode);\n\n      const itemKey = this._getItemKey(item, index);\n      const row = this._activeRows[itemKey];\n      if (row) {\n        this._setFocusToRow(row, forceIntoFirstElement);\n      }\n    }\n  }\n\n  public getStartItemIndexInView(): number {\n    if (this._list && this._list.current) {\n      return this._list.current.getStartItemIndexInView();\n    } else if (this._groupedList && this._groupedList.current) {\n      return this._groupedList.current.getStartItemIndexInView();\n    }\n    return 0;\n  }\n\n  public componentWillUnmount(): void {\n    if (this._dragDropHelper) {\n      // TODO If the DragDropHelper was passed via props, this will dispose it, which is incorrect behavior.\n      this._dragDropHelper.dispose();\n    }\n    this._async.dispose();\n  }\n\n  public componentDidUpdate(prevProps: IDetailsListProps, prevState: IDetailsListState) {\n    if (this._initialFocusedIndex !== undefined) {\n      const item = this.props.items[this._initialFocusedIndex];\n      if (item) {\n        const itemKey = this._getItemKey(item, this._initialFocusedIndex);\n        const row = this._activeRows[itemKey];\n        if (row) {\n          this._setFocusToRowIfPending(row);\n        }\n      }\n    }\n\n    if (\n      this.props.items !== prevProps.items &&\n      this.props.items.length > 0 &&\n      this.state.focusedItemIndex !== -1 &&\n      !elementContains(this._root.current, document.activeElement as HTMLElement, false)\n    ) {\n      // Item set has changed and previously-focused item is gone.\n      // Set focus to item at index of previously-focused item if it is in range,\n      // else set focus to the last item.\n      const index = this.state.focusedItemIndex < this.props.items.length ? this.state.focusedItemIndex : this.props.items.length - 1;\n      const item = this.props.items[index];\n      const itemKey = this._getItemKey(item, this.state.focusedItemIndex);\n      const row = this._activeRows[itemKey];\n      if (row) {\n        this._setFocusToRow(row);\n      } else {\n        this._initialFocusedIndex = index;\n      }\n    }\n    if (this.props.onDidUpdate) {\n      this.props.onDidUpdate(this);\n    }\n  }\n\n  // tslint:disable-next-line function-name\n  public UNSAFE_componentWillReceiveProps(newProps: IDetailsListProps): void {\n    const {\n      checkboxVisibility,\n      items,\n      setKey,\n      selectionMode = this._selection.mode,\n      columns,\n      viewport,\n      compact,\n      dragDropEvents\n    } = this.props;\n    const { isAllGroupsCollapsed = undefined } = this.props.groupProps || {};\n    const newViewportWidth = (newProps.viewport && newProps.viewport.width) || 0;\n    const oldViewportWidth = (viewport && viewport.width) || 0;\n    const shouldResetSelection = newProps.setKey !== setKey || newProps.setKey === undefined;\n    let shouldForceUpdates = false;\n\n    if (newProps.layoutMode !== this.props.layoutMode) {\n      shouldForceUpdates = true;\n    }\n\n    if (shouldResetSelection) {\n      this._initialFocusedIndex = newProps.initialFocusedIndex;\n      // reset focusedItemIndex when setKey changes\n      this.setState({\n        focusedItemIndex: this._initialFocusedIndex !== undefined ? this._initialFocusedIndex : -1\n      });\n    }\n\n    if (!this.props.disableSelectionZone && newProps.items !== items) {\n      this._selection.setItems(newProps.items, shouldResetSelection);\n    }\n\n    if (\n      newProps.checkboxVisibility !== checkboxVisibility ||\n      newProps.columns !== columns ||\n      newViewportWidth !== oldViewportWidth ||\n      newProps.compact !== compact\n    ) {\n      shouldForceUpdates = true;\n    }\n\n    this._adjustColumns(newProps, true);\n\n    if (newProps.selectionMode !== selectionMode) {\n      shouldForceUpdates = true;\n    }\n\n    if (isAllGroupsCollapsed === undefined && (newProps.groupProps && newProps.groupProps.isAllGroupsCollapsed !== undefined)) {\n      this.setState({\n        isCollapsed: newProps.groupProps.isAllGroupsCollapsed,\n        isSomeGroupExpanded: !newProps.groupProps.isAllGroupsCollapsed\n      });\n    }\n\n    if (newProps.dragDropEvents !== dragDropEvents) {\n      this._dragDropHelper && this._dragDropHelper.dispose();\n      this._dragDropHelper = newProps.dragDropEvents\n        ? new DragDropHelper({\n            selection: this._selection,\n            minimumPixelsForDrag: newProps.minimumPixelsForDrag\n          })\n        : undefined;\n      shouldForceUpdates = true;\n    }\n\n    if (shouldForceUpdates) {\n      this._pendingForceUpdate = true;\n    }\n  }\n\n  // tslint:disable-next-line function-name\n  public UNSAFE_componentWillUpdate(): void {\n    if (this._pendingForceUpdate) {\n      this._forceListUpdates();\n    }\n  }\n\n  public render(): JSX.Element {\n    const {\n      ariaLabelForListHeader,\n      ariaLabelForSelectAllCheckbox,\n      ariaLabelForSelectionColumn,\n      className,\n      checkboxVisibility,\n      compact,\n      constrainMode,\n      dragDropEvents,\n      groups,\n      groupProps,\n      indentWidth,\n      items,\n      isPlaceholderData,\n      isHeaderVisible,\n      layoutMode,\n      onItemInvoked,\n      onItemContextMenu,\n      onColumnHeaderClick,\n      onColumnHeaderContextMenu,\n      selectionMode = this._selection.mode,\n      selectionPreservedOnEmptyClick,\n      selectionZoneProps,\n      ariaLabel,\n      ariaLabelForGrid,\n      rowElementEventMap,\n      shouldApplyApplicationRole = false,\n      getKey,\n      listProps,\n      usePageCache,\n      onShouldVirtualize,\n      viewport,\n      minimumPixelsForDrag,\n      getGroupHeight,\n      styles,\n      theme,\n      cellStyleProps = DEFAULT_CELL_STYLE_PROPS,\n      onRenderCheckbox,\n      useFastIcons\n    } = this.props;\n    const { adjustedColumns, isCollapsed, isSizing, isSomeGroupExpanded } = this.state;\n    const { _selection: selection, _dragDropHelper: dragDropHelper } = this;\n    const groupNestingDepth = this._getGroupNestingDepth();\n    const additionalListProps: IListProps = {\n      renderedWindowsAhead: isSizing ? 0 : DEFAULT_RENDERED_WINDOWS_AHEAD,\n      renderedWindowsBehind: isSizing ? 0 : DEFAULT_RENDERED_WINDOWS_BEHIND,\n      getKey,\n      ...listProps\n    };\n    let selectAllVisibility = SelectAllVisibility.none; // for SelectionMode.none\n    if (selectionMode === SelectionMode.single) {\n      selectAllVisibility = SelectAllVisibility.hidden;\n    }\n    if (selectionMode === SelectionMode.multiple) {\n      // if isCollapsedGroupSelectVisible is false, disable select all when the list has all collapsed groups\n      let isCollapsedGroupSelectVisible = groupProps && groupProps.headerProps && groupProps.headerProps.isCollapsedGroupSelectVisible;\n      if (isCollapsedGroupSelectVisible === undefined) {\n        isCollapsedGroupSelectVisible = true;\n      }\n      const isSelectAllVisible = isCollapsedGroupSelectVisible || !groups || isSomeGroupExpanded;\n      selectAllVisibility = isSelectAllVisible ? SelectAllVisibility.visible : SelectAllVisibility.hidden;\n    }\n\n    if (checkboxVisibility === CheckboxVisibility.hidden) {\n      selectAllVisibility = SelectAllVisibility.none;\n    }\n\n    const { onRenderDetailsHeader = this._onRenderDetailsHeader, onRenderDetailsFooter = this._onRenderDetailsFooter } = this.props;\n\n    const detailsFooterProps = this._getDetailsFooterProps();\n    const columnReorderProps = this._getColumnReorderProps();\n\n    const rowCount = (isHeaderVisible ? 1 : 0) + GetGroupCount(groups) + (items ? items.length : 0);\n\n    const classNames = getClassNames(styles, {\n      theme: theme!,\n      compact,\n      isFixed: layoutMode === DetailsListLayoutMode.fixedColumns,\n      isHorizontalConstrained: constrainMode === ConstrainMode.horizontalConstrained,\n      className\n    });\n\n    const list = groups ? (\n      <GroupedList\n        componentRef={this._groupedList}\n        groups={groups}\n        groupProps={groupProps ? this._getGroupProps(groupProps) : undefined}\n        items={items}\n        onRenderCell={this._onRenderCell}\n        selection={selection}\n        selectionMode={checkboxVisibility !== CheckboxVisibility.hidden ? selectionMode : SelectionMode.none}\n        dragDropEvents={dragDropEvents}\n        dragDropHelper={dragDropHelper}\n        eventsToRegister={rowElementEventMap}\n        listProps={additionalListProps}\n        onGroupExpandStateChanged={this._onGroupExpandStateChanged}\n        usePageCache={usePageCache}\n        onShouldVirtualize={onShouldVirtualize}\n        getGroupHeight={getGroupHeight}\n        compact={compact}\n      />\n    ) : (\n      <List\n        ref={this._list}\n        role=\"presentation\"\n        items={items}\n        onRenderCell={this._onRenderListCell(0)}\n        usePageCache={usePageCache}\n        onShouldVirtualize={onShouldVirtualize}\n        {...additionalListProps}\n      />\n    );\n\n    return (\n      // If shouldApplyApplicationRole is true, role application will be applied to make arrow keys work\n      // with JAWS.\n      <div\n        ref={this._root}\n        className={classNames.root}\n        data-automationid=\"DetailsList\"\n        data-is-scrollable=\"false\"\n        aria-label={ariaLabel}\n        {...(shouldApplyApplicationRole ? { role: 'application' } : {})}\n      >\n        <div\n          role=\"grid\"\n          aria-label={ariaLabelForGrid}\n          aria-rowcount={isPlaceholderData ? -1 : rowCount}\n          aria-colcount={(selectAllVisibility !== SelectAllVisibility.none ? 1 : 0) + (adjustedColumns ? adjustedColumns.length : 0)}\n          aria-readonly=\"true\"\n        >\n          <div onKeyDown={this._onHeaderKeyDown} role=\"presentation\" className={classNames.headerWrapper}>\n            {isHeaderVisible &&\n              onRenderDetailsHeader(\n                {\n                  componentRef: this._header,\n                  selectionMode: selectionMode,\n                  layoutMode: layoutMode!,\n                  selection: selection,\n                  columns: adjustedColumns,\n                  onColumnClick: onColumnHeaderClick,\n                  onColumnContextMenu: onColumnHeaderContextMenu,\n                  onColumnResized: this._onColumnResized,\n                  onColumnIsSizingChanged: this._onColumnIsSizingChanged,\n                  onColumnAutoResized: this._onColumnAutoResized,\n                  groupNestingDepth: groupNestingDepth,\n                  isAllCollapsed: isCollapsed,\n                  onToggleCollapseAll: this._onToggleCollapse,\n                  ariaLabel: ariaLabelForListHeader,\n                  ariaLabelForSelectAllCheckbox: ariaLabelForSelectAllCheckbox,\n                  ariaLabelForSelectionColumn: ariaLabelForSelectionColumn,\n                  selectAllVisibility: selectAllVisibility,\n                  collapseAllVisibility: groupProps && groupProps.collapseAllVisibility,\n                  viewport: viewport,\n                  columnReorderProps: columnReorderProps,\n                  minimumPixelsForDrag: minimumPixelsForDrag,\n                  cellStyleProps: cellStyleProps,\n                  checkboxVisibility,\n                  indentWidth,\n                  onRenderDetailsCheckbox: onRenderCheckbox,\n                  rowWidth: this._sumColumnWidths(this.state.adjustedColumns),\n                  useFastIcons\n                },\n                this._onRenderDetailsHeader\n              )}\n          </div>\n          <div onKeyDown={this._onContentKeyDown} role=\"presentation\" className={classNames.contentWrapper}>\n            <FocusZone\n              componentRef={this._focusZone}\n              className={classNames.focusZone}\n              direction={FocusZoneDirection.vertical}\n              isInnerZoneKeystroke={isRightArrow}\n              onActiveElementChanged={this._onActiveRowChanged}\n              onBlur={this._onBlur}\n            >\n              {!this.props.disableSelectionZone ? (\n                <SelectionZone\n                  ref={this._selectionZone}\n                  selection={selection}\n                  selectionPreservedOnEmptyClick={selectionPreservedOnEmptyClick}\n                  selectionMode={selectionMode}\n                  onItemInvoked={onItemInvoked}\n                  onItemContextMenu={onItemContextMenu}\n                  enterModalOnTouch={this.props.enterModalSelectionOnTouch}\n                  {...selectionZoneProps || {}}\n                >\n                  {list}\n                </SelectionZone>\n              ) : (\n                list\n              )}\n            </FocusZone>\n          </div>\n          {onRenderDetailsFooter(\n            {\n              ...detailsFooterProps\n            },\n            this._onRenderDetailsFooter\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  public forceUpdate(): void {\n    super.forceUpdate();\n    this._forceListUpdates();\n  }\n\n  protected _onRenderRow = (props: IDetailsRowProps, defaultRender?: IRenderFunction<IDetailsRowProps>): JSX.Element => {\n    return <DetailsRow {...props} />;\n  };\n\n  private _onRenderDetailsHeader = (\n    detailsHeaderProps: IDetailsHeaderProps,\n    defaultRender?: IRenderFunction<IDetailsHeaderProps>\n  ): JSX.Element => {\n    return <DetailsHeader {...detailsHeaderProps} />;\n  };\n\n  private _onRenderDetailsFooter = (\n    detailsFooterProps: IDetailsFooterProps,\n    defaultRender?: IRenderFunction<IDetailsFooterProps>\n  ): JSX.Element | null => {\n    return null;\n  };\n\n  private _onRenderListCell = (nestingDepth: number): ((item: any, itemIndex: number) => React.ReactNode) => {\n    return (item: any, itemIndex: number): React.ReactNode => {\n      return this._onRenderCell(nestingDepth, item, itemIndex);\n    };\n  };\n\n  private _onRenderCell = (nestingDepth: number, item: any, index: number): React.ReactNode => {\n    const {\n      compact,\n      dragDropEvents,\n      rowElementEventMap: eventsToRegister,\n      onRenderMissingItem,\n      onRenderItemColumn,\n      getCellValueKey,\n      onRenderRow = this._onRenderRow,\n      selectionMode = this._selection.mode,\n      viewport,\n      checkboxVisibility,\n      getRowAriaLabel,\n      getRowAriaDescribedBy,\n      checkButtonAriaLabel,\n      checkboxCellClassName,\n      groupProps,\n      useReducedRowRenderer,\n      indentWidth,\n      cellStyleProps = DEFAULT_CELL_STYLE_PROPS,\n      onRenderCheckbox,\n      enableUpdateAnimations,\n      useFastIcons\n    } = this.props;\n    const collapseAllVisibility = groupProps && groupProps.collapseAllVisibility;\n    const selection = this._selection;\n    const dragDropHelper = this._dragDropHelper;\n    const { adjustedColumns: columns } = this.state;\n\n    const rowProps: IDetailsRowProps = {\n      item: item,\n      itemIndex: index,\n      compact: compact,\n      columns: columns,\n      groupNestingDepth: nestingDepth,\n      selectionMode: selectionMode,\n      selection: selection,\n      onDidMount: this._onRowDidMount,\n      onWillUnmount: this._onRowWillUnmount,\n      onRenderItemColumn: onRenderItemColumn,\n      getCellValueKey: getCellValueKey,\n      eventsToRegister: eventsToRegister,\n      dragDropEvents: dragDropEvents,\n      dragDropHelper: dragDropHelper,\n      viewport: viewport,\n      checkboxVisibility: checkboxVisibility,\n      collapseAllVisibility: collapseAllVisibility,\n      getRowAriaLabel: getRowAriaLabel,\n      getRowAriaDescribedBy: getRowAriaDescribedBy,\n      checkButtonAriaLabel: checkButtonAriaLabel,\n      checkboxCellClassName: checkboxCellClassName,\n      useReducedRowRenderer: useReducedRowRenderer,\n      indentWidth,\n      cellStyleProps: cellStyleProps,\n      onRenderDetailsCheckbox: onRenderCheckbox,\n      enableUpdateAnimations,\n      rowWidth: this._sumColumnWidths(columns),\n      useFastIcons\n    };\n\n    if (!item) {\n      if (onRenderMissingItem) {\n        return onRenderMissingItem(index, rowProps);\n      }\n\n      return null;\n    }\n\n    return onRenderRow(rowProps, this._onRenderRow);\n  };\n\n  private _onGroupExpandStateChanged = (isSomeGroupExpanded: boolean): void => {\n    this.setState({ isSomeGroupExpanded: isSomeGroupExpanded });\n  };\n\n  private _onColumnIsSizingChanged = (column: IColumn, isSizing: boolean): void => {\n    this.setState({ isSizing: isSizing });\n  };\n\n  private _onHeaderKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    if (ev.which === KeyCodes.down) {\n      if (this._focusZone.current && this._focusZone.current.focus()) {\n        // select the first item in list after down arrow key event\n        // only if nothing was selected; otherwise start with the already-selected item\n        if (this._selection.getSelectedIndices().length === 0) {\n          this._selection.setIndexSelected(0, true, false);\n        }\n\n        ev.preventDefault();\n        ev.stopPropagation();\n      }\n    }\n  };\n\n  private _onContentKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    if (ev.which === KeyCodes.up && !ev.altKey) {\n      if (this._header.current && this._header.current.focus()) {\n        ev.preventDefault();\n        ev.stopPropagation();\n      }\n    }\n  };\n\n  private _getGroupNestingDepth(): number {\n    const { groups } = this.props;\n    let level = 0;\n    let groupsInLevel = groups;\n\n    while (groupsInLevel && groupsInLevel.length > 0) {\n      level++;\n      groupsInLevel = groupsInLevel[0].children;\n    }\n\n    return level;\n  }\n\n  private _onRowDidMount = (row: DetailsRowBase): void => {\n    const { item, itemIndex } = row.props;\n    const itemKey = this._getItemKey(item, itemIndex);\n    this._activeRows[itemKey] = row; // this is used for column auto resize\n\n    this._setFocusToRowIfPending(row);\n\n    const { onRowDidMount } = this.props;\n    if (onRowDidMount) {\n      onRowDidMount(item, itemIndex);\n    }\n  };\n\n  private _setFocusToRowIfPending(row: DetailsRowBase): void {\n    const { itemIndex } = row.props;\n    if (this._initialFocusedIndex !== undefined && itemIndex === this._initialFocusedIndex) {\n      this._setFocusToRow(row);\n      delete this._initialFocusedIndex;\n    }\n  }\n\n  private _setFocusToRow(row: DetailsRowBase, forceIntoFirstElement: boolean = false): void {\n    if (this._selectionZone.current) {\n      this._selectionZone.current.ignoreNextFocus();\n    }\n    this._async.setTimeout((): void => {\n      row.focus(forceIntoFirstElement);\n    }, 0);\n  }\n\n  private _onRowWillUnmount = (row: DetailsRowBase): void => {\n    const { onRowWillUnmount } = this.props;\n\n    const { item, itemIndex } = row.props;\n    const itemKey = this._getItemKey(item, itemIndex);\n    delete this._activeRows[itemKey];\n\n    if (onRowWillUnmount) {\n      onRowWillUnmount(item, itemIndex);\n    }\n  };\n\n  private _onToggleCollapse = (collapsed: boolean): void => {\n    this.setState({\n      isCollapsed: collapsed\n    });\n    if (this._groupedList.current) {\n      this._groupedList.current.toggleCollapseAll(collapsed);\n    }\n  };\n\n  private _onColumnDragEnd = (props: { dropLocation?: ColumnDragEndLocation }, event: MouseEvent): void => {\n    const { columnReorderOptions } = this.props;\n    let finalDropLocation: ColumnDragEndLocation = ColumnDragEndLocation.outside;\n    if (columnReorderOptions && columnReorderOptions.onDragEnd) {\n      if (props.dropLocation && props.dropLocation !== ColumnDragEndLocation.header) {\n        finalDropLocation = props.dropLocation;\n      } else if (this._root.current) {\n        const clientRect = this._root.current.getBoundingClientRect();\n        if (\n          event.clientX > clientRect.left &&\n          event.clientX < clientRect.right &&\n          event.clientY > clientRect.top &&\n          event.clientY < clientRect.bottom\n        ) {\n          finalDropLocation = ColumnDragEndLocation.surface;\n        }\n      }\n      columnReorderOptions.onDragEnd(finalDropLocation);\n    }\n  };\n\n  private _forceListUpdates(): void {\n    this._pendingForceUpdate = false;\n\n    if (this._groupedList.current) {\n      this._groupedList.current.forceUpdate();\n    }\n    if (this._list.current) {\n      this._list.current.forceUpdate();\n    }\n  }\n\n  private _notifyColumnsResized(): void {\n    this.state.adjustedColumns.forEach(column => {\n      if (column.onColumnResize) {\n        column.onColumnResize(column.currentWidth);\n      }\n    });\n  }\n\n  private _adjustColumns(newProps: IDetailsListProps, forceUpdate?: boolean, resizingColumnIndex?: number): void {\n    const adjustedColumns = this._getAdjustedColumns(newProps, forceUpdate, resizingColumnIndex);\n    const { viewport } = this.props;\n    const viewportWidth = viewport && viewport.width ? viewport.width : 0;\n\n    if (adjustedColumns) {\n      this.setState(\n        {\n          adjustedColumns: adjustedColumns,\n          lastWidth: viewportWidth\n        },\n        this._notifyColumnsResized\n      );\n    }\n  }\n\n  /** Returns adjusted columns, given the viewport size and layout mode. */\n  private _getAdjustedColumns(newProps: IDetailsListProps, forceUpdate?: boolean, resizingColumnIndex?: number): IColumn[] {\n    const { items: newItems, layoutMode, selectionMode, viewport } = newProps;\n    const viewportWidth = viewport && viewport.width ? viewport.width : 0;\n    let { columns: newColumns } = newProps;\n\n    const columns = this.props ? this.props.columns : [];\n    const lastWidth = this.state ? this.state.lastWidth : -1;\n    const lastSelectionMode = this.state ? this.state.lastSelectionMode : undefined;\n\n    if (!forceUpdate && lastWidth === viewportWidth && lastSelectionMode === selectionMode && (!columns || newColumns === columns)) {\n      return [];\n    }\n\n    newColumns = newColumns || buildColumns(newItems, true);\n\n    let adjustedColumns: IColumn[];\n\n    if (layoutMode === DetailsListLayoutMode.fixedColumns) {\n      adjustedColumns = this._getFixedColumns(newColumns);\n\n      // Preserve adjusted column calculated widths.\n      adjustedColumns.forEach(column => {\n        this._rememberCalculatedWidth(column, column.calculatedWidth!);\n      });\n    } else {\n      if (resizingColumnIndex !== undefined) {\n        adjustedColumns = this._getJustifiedColumnsAfterResize(newColumns, viewportWidth, newProps, resizingColumnIndex);\n      } else {\n        adjustedColumns = this._getJustifiedColumns(newColumns, viewportWidth, newProps, 0);\n      }\n\n      adjustedColumns.forEach(column => {\n        this._getColumnOverride(column.key).currentWidth = column.calculatedWidth;\n      });\n    }\n\n    return adjustedColumns;\n  }\n\n  /** Builds a set of columns based on the given columns mixed with the current overrides. */\n  private _getFixedColumns(newColumns: IColumn[]): IColumn[] {\n    return newColumns.map(column => {\n      const newColumn: IColumn = { ...column, ...this._columnOverrides[column.key] };\n\n      if (!newColumn.calculatedWidth) {\n        newColumn.calculatedWidth = newColumn.maxWidth || newColumn.minWidth || MIN_COLUMN_WIDTH;\n      }\n\n      return newColumn;\n    });\n  }\n\n  private _getJustifiedColumnsAfterResize(\n    newColumns: IColumn[],\n    viewportWidth: number,\n    props: IDetailsListProps,\n    resizingColumnIndex: number\n  ): IColumn[] {\n    const fixedColumns = newColumns.slice(0, resizingColumnIndex);\n    fixedColumns.forEach(column => (column.calculatedWidth = this._getColumnOverride(column.key).currentWidth));\n\n    const fixedWidth = fixedColumns.reduce((total, column, i) => total + getPaddedWidth(column, i === 0, props), 0);\n\n    const remainingColumns = newColumns.slice(resizingColumnIndex);\n    const remainingWidth = viewportWidth - fixedWidth;\n\n    return [...fixedColumns, ...this._getJustifiedColumns(remainingColumns, remainingWidth, props, resizingColumnIndex)];\n  }\n\n  /** Builds a set of columns to fix within the viewport width. */\n  private _getJustifiedColumns(newColumns: IColumn[], viewportWidth: number, props: IDetailsListProps, firstIndex: number): IColumn[] {\n    const { selectionMode = this._selection.mode, checkboxVisibility } = props;\n    const rowCheckWidth = selectionMode !== SelectionMode.none && checkboxVisibility !== CheckboxVisibility.hidden ? CHECKBOX_WIDTH : 0;\n    const groupExpandWidth = this._getGroupNestingDepth() * GROUP_EXPAND_WIDTH;\n    let totalWidth = 0; // offset because we have one less inner padding.\n    const availableWidth = viewportWidth - (rowCheckWidth + groupExpandWidth);\n    const adjustedColumns: IColumn[] = newColumns.map((column, i) => {\n      const newColumn = {\n        ...column,\n        calculatedWidth: column.minWidth || MIN_COLUMN_WIDTH,\n        ...this._columnOverrides[column.key]\n      };\n\n      const isFirst = i + firstIndex === 0;\n      totalWidth += getPaddedWidth(newColumn, isFirst, props);\n\n      return newColumn;\n    });\n\n    let lastIndex = adjustedColumns.length - 1;\n\n    // Shrink or remove collapsable columns.\n    while (lastIndex > 0 && totalWidth > availableWidth) {\n      const column = adjustedColumns[lastIndex];\n\n      const minWidth = column.minWidth || MIN_COLUMN_WIDTH;\n      const overflowWidth = totalWidth - availableWidth;\n\n      if (column.calculatedWidth! - minWidth >= overflowWidth || !(column.isCollapsable || column.isCollapsible)) {\n        const originalWidth = column.calculatedWidth!;\n        column.calculatedWidth = Math.max(column.calculatedWidth! - overflowWidth, minWidth);\n        totalWidth -= originalWidth - column.calculatedWidth;\n      } else {\n        totalWidth -= getPaddedWidth(column, false, props);\n        adjustedColumns.splice(lastIndex, 1);\n      }\n      lastIndex--;\n    }\n\n    // Then expand columns starting at the beginning, until we've filled the width.\n    for (let i = 0; i < adjustedColumns.length && totalWidth < availableWidth; i++) {\n      const column = adjustedColumns[i];\n      const isLast = i === adjustedColumns.length - 1;\n      const overrides = this._columnOverrides[column.key];\n      if (overrides && overrides.calculatedWidth && !isLast) {\n        continue;\n      }\n\n      const spaceLeft = availableWidth - totalWidth;\n      let increment: number;\n      if (isLast) {\n        increment = spaceLeft;\n      } else {\n        const maxWidth = column.maxWidth;\n        const minWidth = column.minWidth || maxWidth || MIN_COLUMN_WIDTH;\n        increment = maxWidth ? Math.min(spaceLeft, maxWidth - minWidth) : spaceLeft;\n      }\n\n      column.calculatedWidth = (column.calculatedWidth as number) + increment;\n      totalWidth += increment;\n    }\n\n    return adjustedColumns;\n  }\n\n  private _onColumnResized = (resizingColumn: IColumn, newWidth: number, resizingColumnIndex: number): void => {\n    const newCalculatedWidth = Math.max(resizingColumn.minWidth || MIN_COLUMN_WIDTH, newWidth);\n    if (this.props.onColumnResize) {\n      this.props.onColumnResize(resizingColumn, newCalculatedWidth, resizingColumnIndex);\n    }\n\n    this._rememberCalculatedWidth(resizingColumn, newCalculatedWidth);\n\n    this._adjustColumns(this.props, true, resizingColumnIndex);\n    this._forceListUpdates();\n  };\n\n  private _rememberCalculatedWidth(column: IColumn, newCalculatedWidth: number): void {\n    const overrides = this._getColumnOverride(column.key);\n    overrides.calculatedWidth = newCalculatedWidth;\n    overrides.currentWidth = newCalculatedWidth;\n  }\n\n  private _getColumnOverride(key: string): IColumn {\n    return (this._columnOverrides[key] = this._columnOverrides[key] || {});\n  }\n\n  /**\n   * Callback function when double clicked on the details header column resizer\n   * which will measure the column cells of all the active rows and resize the\n   * column to the max cell width.\n   *\n   * @param column - double clicked column definition\n   * @param columnIndex - double clicked column index\n   * TODO: min width 100 should be changed to const value and should be consistent with the\n   * value used on _onSizerMove method in DetailsHeader\n   */\n  private _onColumnAutoResized = (column: IColumn, columnIndex: number): void => {\n    let max = 0;\n    let count = 0;\n    const totalCount = Object.keys(this._activeRows).length;\n\n    for (const key in this._activeRows) {\n      if (this._activeRows.hasOwnProperty(key)) {\n        const currentRow = this._activeRows[key];\n        currentRow.measureCell(columnIndex, (width: number) => {\n          max = Math.max(max, width);\n          count++;\n          if (count === totalCount) {\n            this._onColumnResized(column, max, columnIndex);\n          }\n        });\n      }\n    }\n  };\n\n  /**\n   * Call back function when an element in FocusZone becomes active. It will translate it into item\n   * and call onActiveItemChanged callback if specified.\n   *\n   * @param row - element that became active in Focus Zone\n   * @param focus - event from Focus Zone\n   */\n  private _onActiveRowChanged = (el?: HTMLElement, ev?: React.FocusEvent<HTMLElement>): void => {\n    const { items, onActiveItemChanged } = this.props;\n\n    if (!el) {\n      return;\n    }\n\n    // Check and assign index only if the event was raised from any DetailsRow element\n    if (el.getAttribute('data-item-index')) {\n      const index = Number(el.getAttribute('data-item-index'));\n      if (index >= 0) {\n        if (onActiveItemChanged) {\n          onActiveItemChanged(items[index], index, ev);\n        }\n        this.setState({\n          focusedItemIndex: index\n        });\n      }\n    }\n  };\n\n  private _onBlur = (event: React.FocusEvent<HTMLElement>): void => {\n    this.setState({\n      focusedItemIndex: -1\n    });\n  };\n\n  private _getItemKey(item: any, itemIndex: number): string | number {\n    const { getKey } = this.props;\n\n    let itemKey: string | number | undefined = undefined;\n    if (item) {\n      itemKey = item.key;\n    }\n\n    if (getKey) {\n      itemKey = getKey(item, itemIndex);\n    }\n\n    if (!itemKey) {\n      itemKey = itemIndex;\n    }\n\n    return itemKey;\n  }\n\n  private _getDetailsFooterProps(): IDetailsFooterProps {\n    const { adjustedColumns: columns } = this.state;\n\n    const {\n      viewport,\n      checkboxVisibility,\n      indentWidth,\n      cellStyleProps = DEFAULT_CELL_STYLE_PROPS,\n      selectionMode = this._selection.mode\n    } = this.props;\n\n    return {\n      columns: columns,\n      groupNestingDepth: this._getGroupNestingDepth(),\n      selection: this._selection,\n      selectionMode: selectionMode,\n      viewport: viewport,\n      checkboxVisibility,\n      indentWidth,\n      cellStyleProps\n    };\n  }\n\n  private _getColumnReorderProps(): IColumnReorderHeaderProps | undefined {\n    const { columnReorderOptions } = this.props;\n    if (columnReorderOptions) {\n      return {\n        ...columnReorderOptions,\n        onColumnDragEnd: this._onColumnDragEnd\n      };\n    }\n  }\n\n  private _getGroupProps(detailsGroupProps: IDetailsGroupRenderProps): IGroupRenderProps {\n    const { onRenderFooter: onRenderDetailsGroupFooter, onRenderHeader: onRenderDetailsGroupHeader } = detailsGroupProps;\n    const { adjustedColumns: columns } = this.state;\n    const {\n      selectionMode = this._selection.mode,\n      viewport,\n      cellStyleProps = DEFAULT_CELL_STYLE_PROPS,\n      checkboxVisibility,\n      indentWidth\n    } = this.props;\n    const groupNestingDepth = this._getGroupNestingDepth();\n    const onRenderFooter = onRenderDetailsGroupFooter\n      ? (props: IGroupDividerProps, defaultRender?: IRenderFunction<IGroupDividerProps>) => {\n          return onRenderDetailsGroupFooter(\n            {\n              ...props,\n              columns: columns,\n              groupNestingDepth: groupNestingDepth,\n              indentWidth,\n              selection: this._selection,\n              selectionMode: selectionMode,\n              viewport: viewport,\n              checkboxVisibility,\n              cellStyleProps\n            },\n            defaultRender\n          );\n        }\n      : undefined;\n\n    const onRenderHeader = onRenderDetailsGroupHeader\n      ? (props: IGroupDividerProps, defaultRender?: IRenderFunction<IGroupDividerProps>) => {\n          return onRenderDetailsGroupHeader(\n            {\n              ...props,\n              columns: columns,\n              groupNestingDepth: groupNestingDepth,\n              indentWidth,\n              selection: this._selection,\n              selectionMode: selectionMode,\n              viewport: viewport,\n              checkboxVisibility,\n              cellStyleProps\n            },\n            defaultRender\n          );\n        }\n      : undefined;\n\n    return {\n      ...detailsGroupProps,\n      onRenderFooter,\n      onRenderHeader\n    };\n  }\n}\n\nexport function buildColumns(\n  items: any[],\n  canResizeColumns?: boolean,\n  onColumnClick?: (ev: React.MouseEvent<HTMLElement>, column: IColumn) => void,\n  sortedColumnKey?: string,\n  isSortedDescending?: boolean,\n  groupedColumnKey?: string,\n  isMultiline?: boolean\n) {\n  const columns: IColumn[] = [];\n\n  if (items && items.length) {\n    const firstItem = items[0];\n\n    for (const propName in firstItem) {\n      if (firstItem.hasOwnProperty(propName)) {\n        columns.push({\n          key: propName,\n          name: propName,\n          fieldName: propName,\n          minWidth: MIN_COLUMN_WIDTH,\n          maxWidth: 300,\n          isCollapsable: !!columns.length,\n          isCollapsible: !!columns.length,\n          isMultiline: isMultiline === undefined ? false : isMultiline,\n          isSorted: sortedColumnKey === propName,\n          isSortedDescending: !!isSortedDescending,\n          isRowHeader: false,\n          columnActionsMode: ColumnActionsMode.clickable,\n          isResizable: canResizeColumns,\n          onColumnClick: onColumnClick,\n          isGrouped: groupedColumnKey === propName\n        });\n      }\n    }\n  }\n\n  return columns;\n}\n\nfunction isRightArrow(event: React.KeyboardEvent<HTMLElement>): boolean {\n  return event.which === getRTLSafeKeyCode(KeyCodes.right);\n}\n\nfunction getPaddedWidth(column: IColumn, isFirst: boolean, props: IDetailsListProps): number {\n  const { cellStyleProps = DEFAULT_CELL_STYLE_PROPS } = props;\n\n  return (\n    column.calculatedWidth! +\n    cellStyleProps.cellLeftPadding +\n    cellStyleProps.cellRightPadding +\n    (column.isPadded ? cellStyleProps.cellExtraRightPadding : 0)\n  );\n}\n"]}
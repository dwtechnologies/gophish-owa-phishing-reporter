{"version":3,"file":"Announced.BulkOperations.Example.js","sourceRoot":"../src/","sources":["components/Announced/examples/Announced.BulkOperations.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Announced } from 'office-ui-fabric-react/lib/Announced';\nimport { Link } from 'office-ui-fabric-react/lib/Link';\nimport { DetailsList, IDragDropEvents } from 'office-ui-fabric-react/lib/DetailsList';\nimport { Selection } from 'office-ui-fabric-react/lib/Selection';\nimport { MarqueeSelection } from 'office-ui-fabric-react/lib/MarqueeSelection';\nimport { IColumn } from 'office-ui-fabric-react/lib/DetailsList';\nimport { Text } from 'office-ui-fabric-react/lib/Text';\nimport { IStackTokens, Stack } from 'office-ui-fabric-react/lib/Stack';\nimport { mergeStyles, getTheme } from 'office-ui-fabric-react/lib/Styling';\n\nconst _items: IFileExampleItem[] = [];\n\nconst theme = getTheme();\nconst dragEnterClass = mergeStyles({\n  backgroundColor: theme.palette.neutralLight\n});\n\nconst _columns: IColumn[] = ['Name', 'Modified', 'Modified By', 'File Size'].map((name: string) => {\n  const fieldName = name.replace(' ', '').toLowerCase();\n  return {\n    fieldName,\n    name,\n    key: fieldName,\n    minWidth: 100,\n    maxWidth: 200,\n    isResizable: true\n  };\n});\n\nconst _names: string[] = [\n  'Annie Lindqvist',\n  'Aaron Reid',\n  'Alex Lundberg',\n  'Roko Kolar',\n  'Christian Bergqvist',\n  'Valentina Lovric',\n  'Makenzie Sharett'\n];\n\nfunction getMockDateString(): string {\n  return 'Thu Jan 05 2017â€Œ';\n}\n\nexport interface IFileExampleItem {\n  key: string;\n  name: string;\n  modified: string;\n  modifiedby: string;\n  filesize: string;\n}\n\nexport interface IAnnouncedBulkOperationsExampleState {\n  items: IFileExampleItem[];\n  numberOfItems: number;\n}\n\nexport class AnnouncedBulkOperationsExample extends React.Component<{}, IAnnouncedBulkOperationsExampleState> {\n  private _selection: Selection;\n  private _dragDropEvents: IDragDropEvents;\n  private _draggedItem: IFileExampleItem | undefined;\n  private _draggedIndex: number;\n\n  constructor(props: {}) {\n    super(props);\n\n    this._selection = new Selection();\n    this._dragDropEvents = this._getDragDropEvents();\n    this._draggedIndex = -1;\n\n    if (_items.length === 0) {\n      for (let i = 0; i < 20; i++) {\n        _items.push({\n          key: 'item-' + i,\n          name: 'Item ' + i,\n          modified: getMockDateString(),\n          modifiedby: _names[Math.floor(Math.random() * _names.length)],\n          filesize: Math.floor(Math.random() * 30).toString() + ' MB'\n        });\n      }\n    }\n\n    this.state = {\n      items: _items,\n      numberOfItems: 0\n    };\n  }\n\n  public render(): JSX.Element {\n    const { items } = this.state;\n    const stackTokens: IStackTokens = { childrenGap: 10 };\n\n    return (\n      <Stack tokens={stackTokens}>\n        <Text>Turn on Narrator and drag and drop the items.</Text>\n        <Text>\n          Note: This example is to showcase the concept of copying, uploading, or moving many items and not fully illustrative of the real\n          world scenario.\n        </Text>\n        {this._renderAnnounced()}\n        <MarqueeSelection selection={this._selection}>\n          <DetailsList\n            setKey=\"items\"\n            items={items}\n            columns={_columns}\n            selection={this._selection}\n            selectionPreservedOnEmptyClick={true}\n            onItemInvoked={this._onItemInvoked}\n            onRenderItemColumn={this._onRenderItemColumn}\n            dragDropEvents={this._dragDropEvents}\n            ariaLabelForSelectionColumn=\"Toggle selection\"\n            ariaLabelForSelectAllCheckbox=\"Toggle selection for all items\"\n          />\n        </MarqueeSelection>\n      </Stack>\n    );\n  }\n\n  private _renderAnnounced(): JSX.Element | undefined {\n    const { numberOfItems } = this.state;\n    if (numberOfItems > 0) {\n      return <Announced message={`${numberOfItems} item${numberOfItems === 1 ? '' : 's'} moved`} />;\n    }\n  }\n\n  private _getDragDropEvents(): IDragDropEvents {\n    return {\n      canDrop: () => true,\n      canDrag: () => true,\n      // return string is the css class that will be added to the entering element.\n      onDragEnter: () => dragEnterClass,\n      onDragLeave: () => undefined,\n      onDrop: (item?: IFileExampleItem) => {\n        if (this._draggedItem && item) {\n          this._insertBeforeItem(item);\n        }\n      },\n      onDragStart: (item?: IFileExampleItem, itemIndex?: number) => {\n        this._draggedItem = item;\n        this._draggedIndex = itemIndex!;\n      },\n      onDragEnd: () => {\n        this._draggedItem = undefined;\n        this._draggedIndex = -1;\n      }\n    };\n  }\n\n  private _onItemInvoked = (item: IFileExampleItem): void => {\n    alert(`Item invoked: ${item.name}`);\n  };\n\n  private _onRenderItemColumn = (item: IFileExampleItem, index: number, column: IColumn): React.ReactNode => {\n    if (column.key === 'name') {\n      return <Link data-selection-invoke={true}>{item[column.key]}</Link>;\n    }\n\n    return item[column.key as keyof IFileExampleItem];\n  };\n\n  private _insertBeforeItem(item: IFileExampleItem): void {\n    const draggedItems = this._selection.isIndexSelected(this._draggedIndex)\n      ? (this._selection.getSelection() as IFileExampleItem[])\n      : [this._draggedItem!];\n\n    const items = this.state.items.filter(currentItem => draggedItems.indexOf(currentItem) === -1);\n    let insertIndex = items.indexOf(item);\n\n    // if dragging/dropping on itself, index will be 0.\n    if (insertIndex === -1) {\n      insertIndex = 0;\n    }\n\n    items.splice(insertIndex, 0, ...draggedItems);\n\n    this.setState({ items: items, numberOfItems: draggedItems.length });\n  }\n}\n"]}
{"version":3,"file":"ColorSlider.types.js","sourceRoot":"../src/","sources":["components/ColorPicker/ColorSlider/ColorSlider.types.ts"],"names":[],"mappings":"","sourcesContent":["import * as React from 'react';\nimport { ITheme, IStyle } from '../../../Styling';\nimport { IRefObject, IStyleFunctionOrObject } from '../../../Utilities';\n\n/**\n * {@docCategory ColorPicker}\n */\nexport interface IColorSlider {}\n\n/**\n * {@docCategory ColorPicker}\n */\nexport interface IColorSliderProps {\n  /**\n   * Gets the component ref.\n   */\n  componentRef?: IRefObject<IColorSlider>;\n\n  /**\n   * Minimum value of the slider.\n   */\n  minValue?: number;\n\n  /**\n   * Maximum value of the slider.\n   */\n  maxValue?: number;\n\n  /**\n   * Current value of the slider.\n   */\n  value?: number;\n\n  /**\n   * CSS-compatible string for the color of the thumb element.\n   */\n  thumbColor?: string;\n\n  /**\n   * Custom style for the overlay element.\n   */\n  overlayStyle?: any;\n\n  /**\n   * Callback issued when the value changes.\n   */\n  onChange?: (event: React.MouseEvent<HTMLElement>, newValue?: number) => void;\n\n  /**\n   * If true, the slider represents an alpha slider.\n   * Otherwise, the slider represents a hue slider.\n   */\n  isAlpha?: boolean;\n\n  /**\n   * Additional CSS class(es) to apply to the ColorSlider.\n   */\n  className?: string;\n\n  /**\n   * Theme (provided through customization).\n   */\n  theme?: ITheme;\n\n  /**\n   * Call to provide customized styling that will layer on top of the variant rules.\n   */\n  styles?: IStyleFunctionOrObject<IColorSliderStyleProps, IColorSliderStyles>;\n}\n\n/**\n * {@docCategory ColorPicker}\n */\nexport interface IColorSliderStyleProps {\n  /**\n   * Theme (provided through customization).\n   */\n  theme: ITheme;\n\n  /**\n   * Additional CSS class(es) to apply to the ColorSlider.\n   */\n  className?: string;\n}\n\n/**\n * {@docCategory ColorPicker}\n */\nexport interface IColorSliderStyles {\n  /**\n   * Style set for the root element.\n   */\n  root?: IStyle;\n\n  /**\n   * Style set for the draggable thumb element.\n   */\n  sliderThumb?: IStyle;\n\n  /**\n   * Style set for the overlay element.\n   */\n  sliderOverlay?: IStyle;\n}\n"]}
{"version":3,"file":"Calendar.doc.js","sourceRoot":"../src/","sources":["components/Calendar/Calendar.doc.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { DateRangeType, DayOfWeek } from '../../Calendar';\nimport { IDocPageProps } from 'office-ui-fabric-react/lib/common/DocPage.types';\nimport { CalendarButtonExample } from './examples/Calendar.Button.Example';\nimport { CalendarInlineExample } from './examples/Calendar.Inline.Example';\nimport { addMonths, addYears, addWeeks, addDays } from 'office-ui-fabric-react/lib/utilities/dateMath/DateMath';\n\nconst CalendarButtonExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Calendar/examples/Calendar.Button.Example.tsx') as string;\nconst CalendarInlineExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Calendar/examples/Calendar.Inline.Example.tsx') as string;\n\nconst today = new Date(Date.now());\n\nexport const CalendarPageProps: IDocPageProps = {\n  title: 'Calendar',\n  componentName: 'Calendar',\n  componentUrl: 'https://github.com/OfficeDev/office-ui-fabric-react/tree/master/packages/office-ui-fabric-react/src/components/Calendar',\n  examples: [\n    {\n      title: 'Inline Calendar',\n      code: CalendarInlineExampleCode,\n\n      view: (\n        <CalendarInlineExample\n          isMonthPickerVisible={false}\n          dateRangeType={DateRangeType.Day}\n          autoNavigateOnSelection={false}\n          showGoToToday={true}\n        />\n      )\n    },\n    {\n      title: 'Inline Calendar with overlaid month picker when header is clicked',\n      code: CalendarInlineExampleCode,\n\n      view: (\n        <CalendarInlineExample\n          showMonthPickerAsOverlay={true}\n          highlightCurrentMonth={false}\n          highlightSelectedMonth={true}\n          dateRangeType={DateRangeType.Day}\n          autoNavigateOnSelection={false}\n          showGoToToday={false}\n        />\n      )\n    },\n    {\n      title: 'Inline Calendar with month picker and overlaid year picker when month header is clicked',\n      code: CalendarInlineExampleCode,\n\n      view: (\n        <CalendarInlineExample\n          dateRangeType={DateRangeType.Day}\n          autoNavigateOnSelection={false}\n          highlightCurrentMonth={false}\n          highlightSelectedMonth={true}\n          showGoToToday={true}\n        />\n      )\n    },\n    {\n      title: 'Inline Calendar with week selection and overlaid year picker when month header is clicked',\n      code: CalendarInlineExampleCode,\n\n      view: (\n        <CalendarInlineExample\n          dateRangeType={DateRangeType.Week}\n          autoNavigateOnSelection={true}\n          highlightCurrentMonth={false}\n          highlightSelectedMonth={true}\n          showGoToToday={true}\n          showNavigateButtons={true}\n        />\n      )\n    },\n    {\n      title: `Inline Calendar with week selection, date boundary (minDate, maxDate), disabled dates (restrictedDates),\n        and overlaid year picker when month header is clicked`,\n      code: CalendarInlineExampleCode,\n\n      view: (\n        <CalendarInlineExample\n          dateRangeType={DateRangeType.Week}\n          autoNavigateOnSelection={true}\n          highlightCurrentMonth={false}\n          highlightSelectedMonth={true}\n          showGoToToday={true}\n          showNavigateButtons={true}\n          minDate={addWeeks(today, -2)}\n          maxDate={addWeeks(today, 2)}\n          restrictedDates={[addDays(today, -2), addDays(today, -8), addDays(today, 2), addDays(today, 8)]}\n        />\n      )\n    },\n    {\n      title: 'Inline Calendar with month selection and overlaid year picker when month header is clicked',\n      code: CalendarInlineExampleCode,\n\n      view: (\n        <CalendarInlineExample\n          dateRangeType={DateRangeType.Month}\n          autoNavigateOnSelection={true}\n          highlightCurrentMonth={false}\n          highlightSelectedMonth={true}\n          showGoToToday={true}\n          showNavigateButtons={true}\n        />\n      )\n    },\n    {\n      title: 'Inline Calendar with week numbers',\n      code: CalendarInlineExampleCode,\n\n      view: (\n        <CalendarInlineExample\n          isMonthPickerVisible={false}\n          dateRangeType={DateRangeType.Day}\n          autoNavigateOnSelection={false}\n          showGoToToday={true}\n          showWeekNumbers={true}\n        />\n      )\n    },\n    {\n      title: 'Inline Calendar with 6 weeks display by default',\n      code: CalendarInlineExampleCode,\n\n      view: (\n        <CalendarInlineExample\n          isMonthPickerVisible={false}\n          dateRangeType={DateRangeType.Day}\n          autoNavigateOnSelection={false}\n          showGoToToday={true}\n          showSixWeeksByDefault={true}\n        />\n      )\n    },\n    {\n      title: 'Inline Calendar with month picker, no day picker, and overlaid year picker when month header is clicked',\n      code: CalendarInlineExampleCode,\n\n      view: (\n        <CalendarInlineExample\n          dateRangeType={DateRangeType.Month}\n          autoNavigateOnSelection={false}\n          showGoToToday={true}\n          highlightCurrentMonth={false}\n          highlightSelectedMonth={true}\n          isDayPickerVisible={false}\n        />\n      )\n    },\n    {\n      title: `Inline Calendar with date boundary (minDate, maxDate), disabled dates (restrictedDates),\n        and overlaid year picker when month header is clicked`,\n      code: CalendarInlineExampleCode,\n\n      view: (\n        <CalendarInlineExample\n          dateRangeType={DateRangeType.Day}\n          autoNavigateOnSelection={true}\n          highlightCurrentMonth={false}\n          highlightSelectedMonth={true}\n          showGoToToday={false}\n          minDate={addMonths(today, -1)}\n          maxDate={addYears(today, 1)}\n          restrictedDates={[addDays(today, -2), addDays(today, -8), addDays(today, 2), addDays(today, 8)]}\n        />\n      )\n    },\n    {\n      title: `Calendar with workWeekDays = [T W, F, Sa] provided, first day of week = M, and overlaid year picker when\n      month header is clicked`,\n      code: CalendarButtonExampleCode,\n\n      view: (\n        <CalendarInlineExample\n          dateRangeType={DateRangeType.WorkWeek}\n          firstDayOfWeek={DayOfWeek.Monday}\n          autoNavigateOnSelection={true}\n          highlightCurrentMonth={false}\n          highlightSelectedMonth={true}\n          showGoToToday={true}\n          workWeekDays={[DayOfWeek.Tuesday, DayOfWeek.Wednesday, DayOfWeek.Friday, DayOfWeek.Saturday]}\n        />\n      )\n    },\n    {\n      title: 'Calendar launched from a button',\n      code: CalendarButtonExampleCode,\n\n      view: <CalendarButtonExample highlightCurrentMonth={true} />\n    },\n    {\n      title: 'Month picker launched from a button',\n      code: CalendarButtonExampleCode,\n\n      view: (\n        <CalendarButtonExample\n          isDayPickerVisible={false}\n          highlightCurrentMonth={false}\n          highlightSelectedMonth={true}\n          buttonString={'Click for Month Picker'}\n        />\n      )\n    },\n    {\n      title: 'Calendar with overlaid month picker launched from a button',\n      code: CalendarButtonExampleCode,\n\n      view: (\n        <CalendarButtonExample\n          showMonthPickerAsOverlay={true}\n          highlightCurrentMonth={false}\n          highlightSelectedMonth={true}\n          buttonString={'Click for overlaid Day Picker and Month Picker'}\n        />\n      )\n    },\n    {\n      title: 'Calendar with overlaid month picker launched from a button without show go to today button',\n      code: CalendarButtonExampleCode,\n\n      view: (\n        <CalendarButtonExample\n          showMonthPickerAsOverlay={true}\n          showGoToToday={false}\n          highlightCurrentMonth={false}\n          highlightSelectedMonth={true}\n          buttonString={'Click for overlaid Day Picker and Month Picker without go to today button'}\n        />\n      )\n    }\n  ],\n  overview: require<string>('!raw-loader!office-ui-fabric-react/src/components/Calendar/docs/CalendarOverview.md'),\n  bestPractices: '',\n  dos: require<string>('!raw-loader!office-ui-fabric-react/src/components/Calendar/docs/CalendarDos.md'),\n  donts: require<string>('!raw-loader!office-ui-fabric-react/src/components/Calendar/docs/CalendarDonts.md'),\n  isHeaderVisible: true,\n  isFeedbackVisible: true\n};\n"]}
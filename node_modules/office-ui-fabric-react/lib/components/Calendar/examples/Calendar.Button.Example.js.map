{"version":3,"file":"Calendar.Button.Example.js","sourceRoot":"../src/","sources":["components/Calendar/examples/Calendar.Button.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport { Callout, DirectionalHint } from 'office-ui-fabric-react/lib/Callout';\nimport { Calendar, DayOfWeek } from 'office-ui-fabric-react/lib/Calendar';\nimport { FocusTrapZone } from 'office-ui-fabric-react/lib/FocusTrapZone';\n\nconst DayPickerStrings = {\n  months: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n  shortMonths: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n  shortDays: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  goToToday: 'Go to today',\n  weekNumberFormatString: 'Week number {0}',\n  prevMonthAriaLabel: 'Previous month',\n  nextMonthAriaLabel: 'Next month',\n  prevYearAriaLabel: 'Previous year',\n  nextYearAriaLabel: 'Next year',\n  prevYearRangeAriaLabel: 'Previous year range',\n  nextYearRangeAriaLabel: 'Next year range',\n  closeButtonAriaLabel: 'Close'\n};\n\nexport interface ICalendarButtonExampleState {\n  showCalendar: boolean;\n  selectedDate: Date | null;\n}\n\nexport interface ICalendarButtonExampleProps {\n  isDayPickerVisible?: boolean;\n  isMonthPickerVisible?: boolean;\n  highlightCurrentMonth?: boolean;\n  highlightSelectedMonth?: boolean;\n  buttonString?: string;\n  showMonthPickerAsOverlay?: boolean;\n  showGoToToday?: boolean;\n}\n\nexport class CalendarButtonExample extends React.Component<ICalendarButtonExampleProps, ICalendarButtonExampleState> {\n  public static defaultProps: ICalendarButtonExampleProps = {\n    showMonthPickerAsOverlay: false,\n    isDayPickerVisible: true,\n    isMonthPickerVisible: true,\n    showGoToToday: true,\n    buttonString: 'Click for Calendar'\n  };\n\n  private _calendarButtonElement: HTMLElement;\n\n  public constructor(props: ICalendarButtonExampleProps) {\n    super(props);\n\n    this.state = {\n      showCalendar: false,\n      selectedDate: null\n    };\n\n    this._onClick = this._onClick.bind(this);\n    this._onDismiss = this._onDismiss.bind(this);\n    this._onSelectDate = this._onSelectDate.bind(this);\n  }\n\n  public render(): JSX.Element {\n    return (\n      <div>\n        <div ref={calendarBtn => (this._calendarButtonElement = calendarBtn!)}>\n          <DefaultButton\n            onClick={this._onClick}\n            text={!this.state.selectedDate ? this.props.buttonString : this.state.selectedDate.toLocaleDateString()}\n          />\n        </div>\n        {this.state.showCalendar && (\n          <Callout\n            isBeakVisible={false}\n            className=\"ms-DatePicker-callout\"\n            gapSpace={0}\n            doNotLayer={false}\n            target={this._calendarButtonElement}\n            directionalHint={DirectionalHint.bottomLeftEdge}\n            onDismiss={this._onDismiss}\n            setInitialFocus={true}\n          >\n            <FocusTrapZone isClickableOutsideFocusTrap={true}>\n              <Calendar\n                onSelectDate={this._onSelectDate}\n                onDismiss={this._onDismiss}\n                isMonthPickerVisible={this.props.isMonthPickerVisible}\n                value={this.state.selectedDate!}\n                firstDayOfWeek={DayOfWeek.Sunday}\n                strings={DayPickerStrings}\n                isDayPickerVisible={this.props.isDayPickerVisible}\n                highlightCurrentMonth={this.props.highlightCurrentMonth}\n                highlightSelectedMonth={this.props.highlightSelectedMonth}\n                showMonthPickerAsOverlay={this.props.showMonthPickerAsOverlay}\n                showGoToToday={this.props.showGoToToday}\n              />\n            </FocusTrapZone>\n          </Callout>\n        )}\n      </div>\n    );\n  }\n\n  private _onClick(event: any): void {\n    this.setState((prevState: ICalendarButtonExampleState) => {\n      prevState.showCalendar = !prevState.showCalendar;\n      return prevState;\n    });\n  }\n\n  private _onDismiss(): void {\n    this.setState((prevState: ICalendarButtonExampleState) => {\n      prevState.showCalendar = false;\n      return prevState;\n    });\n  }\n\n  private _onSelectDate(date: Date): void {\n    this.setState((prevState: ICalendarButtonExampleState) => {\n      prevState.showCalendar = false;\n      prevState.selectedDate = date;\n      return prevState;\n    });\n  }\n}\n"]}
import * as tslib_1 from "tslib";
import * as React from 'react';
import { Persona, PersonaSize, PersonaPresence } from 'office-ui-fabric-react/lib/Persona';
import { Label } from 'office-ui-fabric-react/lib/Label';
import { Stack } from 'office-ui-fabric-react/lib/Stack';
import { mergeStyles } from 'office-ui-fabric-react/lib/Styling';
var examplePersona = {
    imageUrl: 'https://static2.sharepointonline.com/files/fabric/office-ui-fabric-react-assets/persona-female.png',
    imageInitials: 'AL',
    text: 'Annie Lindqvist',
    secondaryText: 'Software Engineer',
    tertiaryText: 'In a meeting',
    optionalText: 'Available at 4:00pm'
};
var rootClass = mergeStyles({
    selectors: {
        '.ms-Persona': {
            margin: '0 20px 20px 0'
        }
    }
});
var PersonaPresenceExample = /** @class */ (function (_super) {
    tslib_1.__extends(PersonaPresenceExample, _super);
    function PersonaPresenceExample() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PersonaPresenceExample.prototype.render = function () {
        return (React.createElement("div", { className: rootClass },
            React.createElement(Stack, { horizontal: true },
                React.createElement(Stack, null,
                    React.createElement(Label, null, "Online"),
                    React.createElement(Stack, { horizontal: true },
                        React.createElement(Persona, { text: "", size: PersonaSize.size8, hidePersonaDetails: true, presence: PersonaPresence.online }),
                        React.createElement(Persona, tslib_1.__assign({}, examplePersona, { size: PersonaSize.size24, hidePersonaDetails: true, presence: PersonaPresence.online })),
                        React.createElement(Persona, tslib_1.__assign({}, examplePersona, { hidePersonaDetails: true, presence: PersonaPresence.online })),
                        React.createElement(Persona, tslib_1.__assign({}, examplePersona, { size: PersonaSize.size72, hidePersonaDetails: true, presence: PersonaPresence.online })))),
                React.createElement(Stack, null,
                    React.createElement(Label, null, "Online + Out of Office"),
                    React.createElement(Stack, { horizontal: true },
                        React.createElement(Persona, { text: "", size: PersonaSize.size8, hidePersonaDetails: true, presence: PersonaPresence.online, isOutOfOffice: true }),
                        React.createElement(Persona, tslib_1.__assign({}, examplePersona, { size: PersonaSize.size24, hidePersonaDetails: true, presence: PersonaPresence.online, isOutOfOffice: true })),
                        React.createElement(Persona, tslib_1.__assign({}, examplePersona, { hidePersonaDetails: true, presence: PersonaPresence.online, isOutOfOffice: true })),
                        React.createElement(Persona, tslib_1.__assign({}, examplePersona, { size: PersonaSize.size72, hidePersonaDetails: true, presence: PersonaPresence.online, isOutOfOffice: true }))))),
            React.createElement(Stack, { horizontal: true },
                React.createElement(Stack, null,
                    React.createElement(Label, null, "Away"),
                    React.createElement(Stack, { horizontal: true },
                        React.createElement(Persona, { text: "", size: PersonaSize.size8, hidePersonaDetails: true, presence: PersonaPresence.away }),
                        React.createElement(Persona, tslib_1.__assign({}, examplePersona, { size: PersonaSize.size24, hidePersonaDetails: true, presence: PersonaPresence.away })),
                        React.createElement(Persona, tslib_1.__assign({}, examplePersona, { hidePersonaDetails: true, presence: PersonaPresence.away })),
                        React.createElement(Persona, tslib_1.__assign({}, examplePersona, { size: PersonaSize.size72, hidePersonaDetails: true, presence: PersonaPresence.away })))),
                React.createElement(Stack, null,
                    React.createElement(Label, null, "Away + Out of Office"),
                    React.createElement(Stack, { horizontal: true },
                        React.createElement(Persona, { text: "", size: PersonaSize.size8, hidePersonaDetails: true, presence: PersonaPresence.away, isOutOfOffice: true }),
                        React.createElement(Persona, tslib_1.__assign({}, examplePersona, { size: PersonaSize.size24, hidePersonaDetails: true, presence: PersonaPresence.away, isOutOfOffice: true })),
                        React.createElement(Persona, tslib_1.__assign({}, examplePersona, { hidePersonaDetails: true, presence: PersonaPresence.away, isOutOfOffice: true })),
                        React.createElement(Persona, tslib_1.__assign({}, examplePersona, { size: PersonaSize.size72, hidePersonaDetails: true, presence: PersonaPresence.away, isOutOfOffice: true }))))),
            React.createElement(Stack, { horizontal: true },
                React.createElement(Stack, null,
                    React.createElement(Label, null, "Busy"),
                    React.createElement(Stack, { horizontal: true },
                        React.createElement(Persona, { text: "", size: PersonaSize.size8, hidePersonaDetails: true, presence: PersonaPresence.busy }),
                        React.createElement(Persona, tslib_1.__assign({}, examplePersona, { size: PersonaSize.size24, hidePersonaDetails: true, presence: PersonaPresence.busy })),
                        React.createElement(Persona, tslib_1.__assign({}, examplePersona, { hidePersonaDetails: true, presence: PersonaPresence.busy })),
                        React.createElement(Persona, tslib_1.__assign({}, examplePersona, { size: PersonaSize.size72, hidePersonaDetails: true, presence: PersonaPresence.busy })))),
                React.createElement(Stack, null,
                    React.createElement(Label, null, "Busy + Out of Office"),
                    React.createElement(Stack, { horizontal: true },
                        React.createElement(Persona, { text: "", size: PersonaSize.size8, hidePersonaDetails: true, presence: PersonaPresence.busy, isOutOfOffice: true }),
                        React.createElement(Persona, tslib_1.__assign({}, examplePersona, { size: PersonaSize.size24, hidePersonaDetails: true, presence: PersonaPresence.busy, isOutOfOffice: true })),
                        React.createElement(Persona, tslib_1.__assign({}, examplePersona, { hidePersonaDetails: true, presence: PersonaPresence.busy, isOutOfOffice: true })),
                        React.createElement(Persona, tslib_1.__assign({}, examplePersona, { size: PersonaSize.size72, hidePersonaDetails: true, presence: PersonaPresence.busy, isOutOfOffice: true }))))),
            React.createElement(Stack, { horizontal: true },
                React.createElement(Stack, null,
                    React.createElement(Label, null, "Do not Disturb"),
                    React.createElement(Stack, { horizontal: true },
                        React.createElement(Persona, { text: "", size: PersonaSize.size8, hidePersonaDetails: true, presence: PersonaPresence.dnd }),
                        React.createElement(Persona, tslib_1.__assign({}, examplePersona, { size: PersonaSize.size24, hidePersonaDetails: true, presence: PersonaPresence.dnd })),
                        React.createElement(Persona, tslib_1.__assign({}, examplePersona, { hidePersonaDetails: true, presence: PersonaPresence.dnd })),
                        React.createElement(Persona, tslib_1.__assign({}, examplePersona, { size: PersonaSize.size72, hidePersonaDetails: true, presence: PersonaPresence.dnd })))),
                React.createElement(Stack, null,
                    React.createElement(Label, null, "Do not Disturb + Out of Office"),
                    React.createElement(Stack, { horizontal: true },
                        React.createElement(Persona, { text: "", size: PersonaSize.size8, hidePersonaDetails: true, presence: PersonaPresence.dnd, isOutOfOffice: true }),
                        React.createElement(Persona, tslib_1.__assign({}, examplePersona, { size: PersonaSize.size24, hidePersonaDetails: true, presence: PersonaPresence.dnd, isOutOfOffice: true })),
                        React.createElement(Persona, tslib_1.__assign({}, examplePersona, { hidePersonaDetails: true, presence: PersonaPresence.dnd, isOutOfOffice: true })),
                        React.createElement(Persona, tslib_1.__assign({}, examplePersona, { size: PersonaSize.size72, hidePersonaDetails: true, presence: PersonaPresence.dnd, isOutOfOffice: true }))))),
            React.createElement(Label, null, "Blocked"),
            React.createElement(Stack, { horizontal: true },
                React.createElement(Persona, { text: "", size: PersonaSize.size8, hidePersonaDetails: true, presence: PersonaPresence.blocked }),
                React.createElement(Persona, tslib_1.__assign({}, examplePersona, { size: PersonaSize.size24, hidePersonaDetails: true, presence: PersonaPresence.blocked })),
                React.createElement(Persona, tslib_1.__assign({}, examplePersona, { hidePersonaDetails: true, presence: PersonaPresence.blocked })),
                React.createElement(Persona, tslib_1.__assign({}, examplePersona, { size: PersonaSize.size72, hidePersonaDetails: true, presence: PersonaPresence.blocked }))),
            React.createElement(Stack, { horizontal: true },
                React.createElement(Stack, null,
                    React.createElement(Label, null, "Offline"),
                    React.createElement(Stack, { horizontal: true },
                        React.createElement(Persona, { text: "", size: PersonaSize.size8, hidePersonaDetails: true, presence: PersonaPresence.offline }),
                        React.createElement(Persona, tslib_1.__assign({}, examplePersona, { size: PersonaSize.size24, hidePersonaDetails: true, presence: PersonaPresence.offline })),
                        React.createElement(Persona, tslib_1.__assign({}, examplePersona, { hidePersonaDetails: true, presence: PersonaPresence.offline })),
                        React.createElement(Persona, tslib_1.__assign({}, examplePersona, { size: PersonaSize.size72, hidePersonaDetails: true, presence: PersonaPresence.offline })))),
                React.createElement(Stack, null,
                    React.createElement(Label, null, "Offline + Out of Office"),
                    React.createElement(Stack, { horizontal: true },
                        React.createElement(Persona, { text: "", size: PersonaSize.size8, hidePersonaDetails: true, presence: PersonaPresence.offline, isOutOfOffice: true }),
                        React.createElement(Persona, tslib_1.__assign({}, examplePersona, { size: PersonaSize.size24, hidePersonaDetails: true, presence: PersonaPresence.offline, isOutOfOffice: true })),
                        React.createElement(Persona, tslib_1.__assign({}, examplePersona, { hidePersonaDetails: true, presence: PersonaPresence.offline, isOutOfOffice: true })),
                        React.createElement(Persona, tslib_1.__assign({}, examplePersona, { size: PersonaSize.size72, hidePersonaDetails: true, presence: PersonaPresence.offline, isOutOfOffice: true })))))));
    };
    return PersonaPresenceExample;
}(React.Component));
export { PersonaPresenceExample };
//# sourceMappingURL=Persona.Presence.Example.js.map
{"version":3,"file":"ThemeGenerator.doc.js","sourceRoot":"../src/","sources":["components/ThemeGenerator/ThemeGenerator.doc.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { BaseComponent } from 'office-ui-fabric-react/lib/Utilities';\n\nimport { loadTheme } from 'office-ui-fabric-react/lib/Styling';\nimport { IColor } from 'office-ui-fabric-react/lib/utilities/color/interfaces';\nimport { getContrastRatio, isDark } from 'office-ui-fabric-react/lib/utilities/color/shades';\n\nimport {\n  ThemeGenerator,\n  themeRulesStandardCreator,\n  BaseSlots,\n  FabricSlots,\n  IThemeSlotRule,\n  IThemeRules\n} from 'office-ui-fabric-react/lib/ThemeGenerator';\n\nimport { Callout } from 'office-ui-fabric-react/lib/Callout';\nimport { ColorPicker } from 'office-ui-fabric-react/lib/ColorPicker';\n\nimport { ChoiceGroup } from 'office-ui-fabric-react/lib/ChoiceGroup';\nimport { TeachingBubbleBasicExample } from '../../components/TeachingBubble/examples/TeachingBubble.Basic.Example';\nimport { TextFieldBasicExample } from '../TextField/examples/TextField.Basic.Example';\nimport { ToggleBasicExample } from '../../components/Toggle/examples/Toggle.Basic.Example';\nimport { ProgressIndicatorBasicExample } from '../ProgressIndicator/examples/ProgressIndicator.Basic.Example';\n\nexport interface IThemeGeneratorPageState {\n  themeRules: IThemeRules;\n  colorPickerSlotRule: IThemeSlotRule | null;\n  colorPickerElement: HTMLElement | null;\n  colorPickerVisible: boolean;\n}\n\nexport class ThemeGeneratorPage extends BaseComponent<{}, IThemeGeneratorPageState> {\n  private _semanticSlotColorChangeTimeout: number;\n\n  constructor(props: {}) {\n    super(props);\n\n    const themeRules = themeRulesStandardCreator();\n    ThemeGenerator.insureSlots(themeRules, isDark(themeRules[BaseSlots[BaseSlots.backgroundColor]].color!));\n\n    this.state = {\n      themeRules: themeRules,\n      colorPickerSlotRule: null,\n      colorPickerElement: null,\n      colorPickerVisible: false\n    };\n  }\n\n  public componentWillUnmount(): void {\n    // remove temp styles\n    const root = document.querySelector('.App-content') as HTMLElement;\n    if (root) {\n      root.style.backgroundColor = '';\n      root.style.color = '';\n    }\n    document.body.style.backgroundColor = '';\n    document.body.style.color = '';\n\n    // and apply the default theme to overwrite any existing custom theme\n    loadTheme({});\n  }\n\n  public render(): JSX.Element {\n    const { colorPickerVisible, colorPickerSlotRule, colorPickerElement } = this.state;\n\n    const fabricThemeSlots = [\n      this._fabricSlotWidget(FabricSlots.themeDarker),\n      this._fabricSlotWidget(FabricSlots.themeDark),\n      this._fabricSlotWidget(FabricSlots.themeDarkAlt),\n      this._fabricSlotWidget(FabricSlots.themePrimary),\n      this._fabricSlotWidget(FabricSlots.themeSecondary),\n      this._fabricSlotWidget(FabricSlots.themeTertiary),\n      this._fabricSlotWidget(FabricSlots.themeLight),\n      this._fabricSlotWidget(FabricSlots.themeLighter),\n      this._fabricSlotWidget(FabricSlots.themeLighterAlt)\n    ];\n    const fabricNeutralForegroundSlots = [\n      this._fabricSlotWidget(FabricSlots.black),\n      this._fabricSlotWidget(FabricSlots.neutralDark),\n      this._fabricSlotWidget(FabricSlots.neutralPrimary),\n      this._fabricSlotWidget(FabricSlots.neutralPrimaryAlt),\n      this._fabricSlotWidget(FabricSlots.neutralSecondary),\n      this._fabricSlotWidget(FabricSlots.neutralTertiary)\n    ];\n    const fabricNeutralBackgroundSlots = [\n      this._fabricSlotWidget(FabricSlots.neutralTertiaryAlt),\n      this._fabricSlotWidget(FabricSlots.neutralQuaternary),\n      this._fabricSlotWidget(FabricSlots.neutralQuaternaryAlt),\n      this._fabricSlotWidget(FabricSlots.neutralLight),\n      this._fabricSlotWidget(FabricSlots.neutralLighter),\n      this._fabricSlotWidget(FabricSlots.neutralLighterAlt),\n      this._fabricSlotWidget(FabricSlots.white)\n    ];\n\n    const stylingUrl = 'https://github.com/OfficeDev/office-ui-fabric-react/tree/master/packages/styling';\n\n    return (\n      <div className=\"ms-themer\">\n        <div className=\"overview\">\n          <h2 id=\"Overview\">Overview</h2>\n          <p>\n            This tool helps you easily create all the shades and slots for a custom theme. The theme can be used by Fabric React's styling\n            package, see the{' '}\n            <a className={'themeGeneratorPageLink'} href={stylingUrl}>\n              documentation\n            </a>\n            .<br />\n            As you modify one of the three base colors, the theme will update automatically based on predefined rules. You can modify each\n            individual slot below as well.\n          </p>\n        </div>\n        {/* Hello! You've found hidden functionality for generating a theme from an image. This uses Microsoft's\n         * Cognitive Vision API, documented here:\n         * https://docs.microsoft.com/en-us/azure/cognitive-services/computer-vision/quickstarts/javascript\n         * We use that API to identify the most prominent background and foreground colors, and the accent color,\n         * and generate a theme based off of those.\n         * Since this API requires a personal subscription key, you'll have to enlist and insert your subscription\n         * key in _makeThemeFromImg() @ https://raw.githubusercontent.com/cliffkoh/office-ui-fabric-react/9c95e9b92f8caa1fe5ffb9da769ce0921a5272ed/packages/office-ui-fabric-react/src/components/ThemeGenerator/ThemeGeneratorPage.tsx\n         * Then, just uncomment this section. */}\n        {/*}\n        <div style={ { display: 'flex' } }>\n          <div>URL to image:&nbsp;</div>\n          <input type='text' id='imageUrl' />\n          <button onClick={ this._makeThemeFromImg }>Create theme from image</button>\n        </div>\n        <div id='imageDescription' />\n        <div><img id='imagePreview' style={ { maxHeight: '500px', maxWidth: '800px' } } /></div>\n        {*/}\n\n        {/* the shared popup color picker for slots */}\n        {colorPickerVisible && colorPickerSlotRule !== null && colorPickerSlotRule !== undefined && colorPickerElement && (\n          <Callout\n            key={colorPickerSlotRule.name}\n            gapSpace={10}\n            target={colorPickerElement}\n            setInitialFocus={true}\n            onDismiss={this._colorPickerOnDismiss}\n          >\n            <ColorPicker color={colorPickerSlotRule.color!.str} onChange={this._semanticSlotRuleChanged.bind(this, colorPickerSlotRule)} />\n          </Callout>\n        )}\n\n        {/* the three base slots, prominently displayed at the top of the page */}\n        <div style={{ display: 'flex' }}>\n          {[\n            this._baseColorSlotPicker(BaseSlots.primaryColor, 'Primary theme color'),\n            this._baseColorSlotPicker(BaseSlots.foregroundColor, 'Body text color'),\n            this._baseColorSlotPicker(BaseSlots.backgroundColor, 'Body background color')\n          ]}\n        </div>\n        <br />\n\n        {this._outputSection()}\n        <br />\n\n        <h2 id=\"Fabric palette\">Fabric palette</h2>\n        <p>\n          The original Fabric palette slots. These are raw colors with no prescriptive uses. Each one is a shade or tint of a base color.\n        </p>\n        <div className={'ms-themer-fabricPalette-root'}>\n          <div>{fabricThemeSlots}</div>\n          <div>\n            <p>generally used for text and foregrounds</p>\n            {fabricNeutralForegroundSlots}\n          </div>\n          <div>\n            <p>generally used for backgrounds</p>\n            {fabricNeutralBackgroundSlots}\n          </div>\n        </div>\n        <br />\n\n        <h2 id=\"Samples\">Samples</h2>\n        <div style={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap' }}>\n          <div className=\"ms-themer-example\">\n            <TextFieldBasicExample />\n          </div>\n          <div className=\"ms-themer-example\">\n            <ToggleBasicExample />\n            <ChoiceGroup\n              options={[\n                {\n                  key: 'A',\n                  text: 'Option A'\n                },\n                {\n                  key: 'B',\n                  text: 'Option B',\n                  checked: true\n                }\n              ]}\n              label=\"Pick one\"\n              required={true}\n            />\n            <ChoiceGroup\n              options={[\n                {\n                  key: 'C',\n                  text: 'Option C',\n                  disabled: true\n                },\n                {\n                  key: 'D',\n                  text: 'Option D',\n                  checked: true,\n                  disabled: true\n                }\n              ]}\n              label=\"Pick one\"\n              required={true}\n            />\n          </div>\n          <div className=\"ms-themer-example\">\n            <TeachingBubbleBasicExample />\n            <br />\n            <ProgressIndicatorBasicExample />\n          </div>\n        </div>\n\n        <h2 id=\"Accessibility\">Accessibility</h2>\n        <p>Each pair of colors below should produce legible text and have a minimum contrast ratio of 4.5.</p>\n        <table className=\"ms-themer-accessibilityTable\">\n          <thead>\n            <td>Sample text</td>\n            <td>Contrast ratio</td>\n            <td>Slot pair</td>\n          </thead>\n          {this._accessibilityTableBody()}\n        </table>\n      </div>\n    );\n  }\n\n  private _colorPickerOnDismiss = (): void => {\n    this.setState({ colorPickerVisible: false });\n  };\n\n  private _semanticSlotRuleChanged = (slotRule: IThemeSlotRule, ev: any, color: IColor): void => {\n    if (this._semanticSlotColorChangeTimeout) {\n      clearTimeout(this._semanticSlotColorChangeTimeout);\n    }\n    this._semanticSlotColorChangeTimeout = this._async.setTimeout(() => {\n      const { themeRules } = this.state;\n\n      ThemeGenerator.setSlot(slotRule, color.str, isDark(themeRules[BaseSlots[BaseSlots.backgroundColor]].color!), true, true);\n      this.setState({ themeRules: themeRules }, this._makeNewTheme);\n    }, 20);\n    // 20ms is low enough that you can slowly drag to change color and see that theme,\n    // but high enough that quick changes don't get bogged down by a million changes inbetween\n  };\n\n  private _onSwatchClick = (slotRule: IThemeSlotRule, ev: React.MouseEvent<HTMLElement>): void => {\n    const { colorPickerSlotRule, colorPickerElement } = this.state;\n\n    if (\n      colorPickerSlotRule !== null &&\n      colorPickerSlotRule !== undefined &&\n      !!colorPickerElement &&\n      colorPickerSlotRule === slotRule &&\n      colorPickerElement === ev.target\n    ) {\n      // same one, close it\n      this.setState({ colorPickerVisible: false, colorPickerSlotRule: null, colorPickerElement: null });\n    } else {\n      // new one, open it\n      this.setState({\n        colorPickerVisible: true,\n        colorPickerSlotRule: slotRule,\n        colorPickerElement: ev.target as HTMLElement\n      });\n    }\n  };\n\n  private _slotWidget = (slotRule: IThemeSlotRule): JSX.Element => {\n    return (\n      <div key={slotRule.name} className=\"ms-themer-slot\">\n        {this._colorSquareSwatchWidget(slotRule)}\n        <div>\n          <div>{slotRule.name}</div>\n          {!slotRule.isCustomized ? <div>Inherits from: {slotRule.inherits!.name}</div> : <div>Customized</div>}\n        </div>\n      </div>\n    );\n  };\n\n  private _fabricSlotWidget = (fabricSlot: FabricSlots): JSX.Element => {\n    return this._slotWidget(this.state.themeRules[FabricSlots[fabricSlot]]);\n  };\n\n  private _colorSquareSwatchWidget(slotRule: IThemeSlotRule): JSX.Element {\n    return (\n      <div\n        key={slotRule.name}\n        className=\"ms-themer-swatch\"\n        style={{ backgroundColor: slotRule.color!.str }}\n        onClick={this._onSwatchClick.bind(this, slotRule)}\n      />\n    );\n  }\n\n  private _accessibilityRow = (foreground: FabricSlots, background: FabricSlots): JSX.Element => {\n    const themeRules = this.state.themeRules;\n    const bgc: IColor = themeRules[FabricSlots[background]].color!;\n    const fgc: IColor = themeRules[FabricSlots[foreground]].color!;\n\n    const contrastRatio = getContrastRatio(bgc, fgc);\n    let contrastRatioString = String(contrastRatio);\n    contrastRatioString = contrastRatioString.substr(0, contrastRatioString.indexOf('.') + 3);\n    if (contrastRatio < 4.5) {\n      contrastRatioString = '**' + contrastRatioString + '**';\n    }\n\n    return (\n      <tr key={String(foreground) + String(background)}>\n        <td style={{ backgroundColor: bgc.str, color: fgc.str }}>How vexingly quick daft zebras jump.</td>\n        <td>{contrastRatioString}</td>\n        <td>{FabricSlots[foreground] + ' + ' + FabricSlots[background]}</td>\n      </tr>\n    );\n  };\n\n  private _accessibilityTableBody = (): JSX.Element => {\n    const accessibilityRows: JSX.Element[] = [\n      this._accessibilityRow(FabricSlots.neutralPrimary, FabricSlots.white), // default\n      // primary color also needs to be accessible, this is also strong variant default\n      this._accessibilityRow(FabricSlots.white, FabricSlots.themePrimary),\n      this._accessibilityRow(FabricSlots.neutralPrimary, FabricSlots.neutralLighter), // neutral variant default\n      this._accessibilityRow(FabricSlots.themeDark, FabricSlots.neutralLighter),\n      this._accessibilityRow(FabricSlots.neutralPrimary, FabricSlots.themeLighter)\n    ]; // neutral variant with primary color\n\n    // these are the text and primary colors on top of the soft variant, whose bg depends on invertedness of original theme\n    if (!isDark(this.state.themeRules[BaseSlots[BaseSlots.backgroundColor]].color!)) {\n      // is not inverted\n      accessibilityRows.push(\n        this._accessibilityRow(FabricSlots.neutralPrimary, FabricSlots.themeLighterAlt),\n        this._accessibilityRow(FabricSlots.themeDarkAlt, FabricSlots.themeLighterAlt)\n      );\n    } else {\n      // is inverted\n      accessibilityRows.push(\n        this._accessibilityRow(FabricSlots.neutralPrimary, FabricSlots.themeLight),\n        this._accessibilityRow(FabricSlots.themeDarkAlt, FabricSlots.themeLight)\n      );\n    }\n\n    return <tbody>{accessibilityRows}</tbody>;\n  };\n\n  private _outputSection = (): JSX.Element => {\n    const themeRules = this.state.themeRules;\n\n    // strip out the unnecessary shade slots from the final output theme\n    const abridgedTheme: IThemeRules = {};\n    for (const ruleName in themeRules) {\n      if (themeRules.hasOwnProperty(ruleName)) {\n        if (\n          ruleName.indexOf('ColorShade') === -1 &&\n          ruleName !== 'primaryColor' &&\n          ruleName !== 'backgroundColor' &&\n          ruleName !== 'foregroundColor' &&\n          ruleName.indexOf('body') === -1\n        ) {\n          abridgedTheme[ruleName] = themeRules[ruleName];\n        }\n      }\n    }\n\n    return (\n      <div>\n        <h2 id=\"Output\">Output</h2>\n        <div className={'ms-themer-output-root'}>\n          <div>\n            <h3>JSON</h3>\n            <textarea readOnly={true} spellCheck={false} value={JSON.stringify(ThemeGenerator.getThemeAsJson(abridgedTheme), void 0, 2)} />\n          </div>\n          <div>\n            <h3>SASS</h3>\n            <textarea readOnly={true} spellCheck={false} value={ThemeGenerator.getThemeAsSass(abridgedTheme)} />\n          </div>\n          <div>\n            <h3>PowerShell</h3>\n            <textarea readOnly={true} spellCheck={false} value={ThemeGenerator.getThemeForPowerShell(abridgedTheme)} />\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  private _makeNewTheme = (): void => {\n    const themeAsJson: { [key: string]: string } = ThemeGenerator.getThemeAsJson(this.state.themeRules);\n    console.log('New theme...', themeAsJson);\n\n    const finalTheme = loadTheme({\n      ...{ palette: themeAsJson },\n      isInverted: isDark(this.state.themeRules[BaseSlots[BaseSlots.backgroundColor]].color!)\n    });\n\n    const root = document.querySelector('.App-content') as HTMLElement;\n    if (root) {\n      root.style.backgroundColor = finalTheme.semanticColors.bodyBackground;\n      root.style.color = finalTheme.semanticColors.bodyText;\n    }\n\n    document.body.style.backgroundColor = finalTheme.semanticColors.bodyBackground;\n    document.body.style.color = finalTheme.semanticColors.bodyText;\n    console.log('New theme:', finalTheme);\n  };\n\n  private _baseColorSlotPicker = (baseSlot: BaseSlots, title: string): JSX.Element => {\n    let colorChangeTimeout: number;\n\n    const onChange = (ev: any, newColor: IColor): void => {\n      if (colorChangeTimeout) {\n        clearTimeout(colorChangeTimeout);\n      }\n      colorChangeTimeout = this._async.setTimeout(() => {\n        const themeRules = this.state.themeRules;\n        const currentIsDark = isDark(themeRules[BaseSlots[BaseSlots.backgroundColor]].color!);\n        ThemeGenerator.setSlot(themeRules[BaseSlots[baseSlot]], newColor.str, currentIsDark, true, true);\n        if (currentIsDark !== isDark(themeRules[BaseSlots[BaseSlots.backgroundColor]].color!)) {\n          // isInverted got swapped, so need to refresh slots with new shading rules\n          ThemeGenerator.insureSlots(themeRules, !currentIsDark);\n        }\n        this.setState({ themeRules: themeRules }, this._makeNewTheme);\n      }, 20);\n      // 20ms is low enough that you can slowly drag to change color and see that theme,\n      // but high enough that quick changes don't get bogged down by a million changes inbetween\n    };\n\n    return (\n      <div className=\"ms-themer-paletteSlot\" key={baseSlot}>\n        <h3>{title}</h3>\n        <div>\n          <ColorPicker\n            key={'baseslotcolorpicker' + baseSlot}\n            color={this.state.themeRules[BaseSlots[baseSlot]].color!.str}\n            onChange={onChange}\n          />\n        </div>\n        <div className=\"ms-themer-swatchBg\" style={{ backgroundColor: this.state.themeRules[BaseSlots[baseSlot]].color!.str }}>\n          <div className=\"ms-themer-swatch\" style={{ backgroundColor: this.state.themeRules[BaseSlots[baseSlot]].color!.str }} />\n          {[\n            this._colorSquareSwatchWidget(this.state.themeRules[BaseSlots[baseSlot] + 'Shade1']),\n            this._colorSquareSwatchWidget(this.state.themeRules[BaseSlots[baseSlot] + 'Shade2']),\n            this._colorSquareSwatchWidget(this.state.themeRules[BaseSlots[baseSlot] + 'Shade3']),\n            this._colorSquareSwatchWidget(this.state.themeRules[BaseSlots[baseSlot] + 'Shade4']),\n            this._colorSquareSwatchWidget(this.state.themeRules[BaseSlots[baseSlot] + 'Shade5']),\n            this._colorSquareSwatchWidget(this.state.themeRules[BaseSlots[baseSlot] + 'Shade6']),\n            this._colorSquareSwatchWidget(this.state.themeRules[BaseSlots[baseSlot] + 'Shade7']),\n            this._colorSquareSwatchWidget(this.state.themeRules[BaseSlots[baseSlot] + 'Shade8'])\n          ]}\n        </div>\n      </div>\n    );\n  };\n}\n"]}
{"version":3,"file":"Panel.styles.js","sourceRoot":"../src/","sources":["components/Panel/Panel.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import { IPanelStyleProps, IPanelStyles, PanelType } from './Panel.types';\nimport {\n  AnimationClassNames,\n  AnimationVariables,\n  getGlobalClassNames,\n  HighContrastSelector,\n  ScreenWidthMinMedium,\n  ScreenWidthMinLarge,\n  ScreenWidthMinXLarge,\n  ScreenWidthMinXXLarge,\n  ScreenWidthMinUhfMobile,\n  IStyle\n} from '../../Styling';\n\n// TODO -Issue #5689: Comment in once Button is converted to mergeStyles\n// import { IStyleFunctionOrObject } from '../../Utilities';\n// import { IButtonStyles, IButtonStyleProps } from '../../Button';\n\nconst GlobalClassNames = {\n  root: 'ms-Panel',\n  main: 'ms-Panel-main',\n  commands: 'ms-Panel-commands',\n  contentInner: 'ms-Panel-contentInner',\n  scrollableContent: 'ms-Panel-scrollableContent',\n  navigation: 'ms-Panel-navigation',\n  closeButton: 'ms-Panel-closeButton ms-PanelAction-close',\n  header: 'ms-Panel-header',\n  headerText: 'ms-Panel-headerText',\n  content: 'ms-Panel-content',\n  footer: 'ms-Panel-footer',\n  footerInner: 'ms-Panel-footerInner',\n  isOpen: 'is-open',\n  hasCloseButton: 'ms-Panel--hasCloseButton',\n  smallFluid: 'ms-Panel--smFluid',\n  smallFixedNear: 'ms-Panel--smLeft',\n  smallFixedFar: 'ms-Panel--sm',\n  medium: 'ms-Panel--md',\n  large: 'ms-Panel--lg',\n  largeFixed: 'ms-Panel--fixed',\n  extraLarge: 'ms-Panel--xl',\n  custom: 'ms-Panel--custom',\n  customNear: 'ms-Panel--customLeft'\n};\n\nconst panelWidth = {\n  full: '100%',\n  auto: 'auto',\n  xs: 272,\n  sm: 340,\n  md1: 592,\n  md2: 644,\n  lg: 940\n};\n\nconst panelMargin = {\n  auto: 'auto',\n  none: 0,\n  md: 48,\n  lg: 428,\n  xl: 176\n};\n\n// Following consts are used below in `getPanelBreakpoints()` function to provide\n// necessary fallbacks for different types of Panel in different breakpoints.\nconst smallPanelSelectors = {\n  [`@media (min-width: ${ScreenWidthMinMedium}px)`]: {\n    width: panelWidth.sm\n  }\n};\n\nconst mediumPanelSelectors = {\n  [`@media (min-width: ${ScreenWidthMinLarge}px)`]: {\n    width: panelWidth.md1\n  },\n  [`@media (min-width: ${ScreenWidthMinXLarge}px)`]: {\n    width: panelWidth.md2\n  }\n};\n\nconst largePanelSelectors = {\n  [`@media (min-width: ${ScreenWidthMinUhfMobile}px)`]: {\n    left: panelMargin.md,\n    width: panelWidth.auto\n  },\n  [`@media (min-width: ${ScreenWidthMinXXLarge}px)`]: {\n    left: panelMargin.lg\n  }\n};\n\nconst largeFixedPanelSelectors = {\n  [`@media (min-width: ${ScreenWidthMinXXLarge}px)`]: {\n    left: panelMargin.auto,\n    width: panelWidth.lg\n  }\n};\n\nconst extraLargePanelSelectors = {\n  [`@media (min-width: ${ScreenWidthMinXXLarge}px)`]: {\n    left: panelMargin.xl\n  }\n};\n\n// Make sure Panels have fallbacks to different breakpoints by reusing same selectors.\n// This is done in the effort to follow design redlines.\nconst getPanelBreakpoints = (type: PanelType): { [x: string]: IStyle } | undefined => {\n  let selectors;\n\n  // Panel types `smallFluid`, `smallFixedNear`, `custom` and `customNear`\n  // are not checked in here because they render the same in all the breakpoints\n  // and have the checks done separately in the `getStyles` function below.\n  switch (type) {\n    case PanelType.smallFixedFar:\n      selectors = {\n        ...smallPanelSelectors\n      };\n      break;\n    case PanelType.medium:\n      selectors = {\n        ...smallPanelSelectors,\n        ...mediumPanelSelectors\n      };\n      break;\n    case PanelType.large:\n      selectors = {\n        ...smallPanelSelectors,\n        ...mediumPanelSelectors,\n        ...largePanelSelectors\n      };\n      break;\n    case PanelType.largeFixed:\n      selectors = {\n        ...smallPanelSelectors,\n        ...mediumPanelSelectors,\n        ...largePanelSelectors,\n        ...largeFixedPanelSelectors\n      };\n      break;\n    case PanelType.extraLarge:\n      selectors = {\n        ...smallPanelSelectors,\n        ...mediumPanelSelectors,\n        ...largePanelSelectors,\n        ...extraLargePanelSelectors\n      };\n      break;\n    default:\n      break;\n  }\n\n  return selectors;\n};\n\nconst commandBarHeight = '44px';\n\nconst sharedPaddingStyles = {\n  paddingLeft: '16px',\n  paddingRight: '16px'\n};\n\n// // TODO -Issue #5689: Comment in once Button is converted to mergeStyles\n// function getIconButtonStyles(props: IPanelStyleProps): IStyleFunctionOrObject<IButtonStyleProps, IButtonStyles> {\n//   const { theme } = props;\n//   return () => ({\n//     root: {\n//       height: 'auto',\n//       width: '44px',\n//       color: theme.palette.neutralSecondary,\n//       fontSize: IconFontSizes.large\n//     },\n//     rootHovered: {\n//       color: theme.palette.neutralPrimary\n//     }\n//   });\n// }\n\nexport const getStyles = (props: IPanelStyleProps): IPanelStyles => {\n  const {\n    className,\n    focusTrapZoneClassName,\n    hasCloseButton,\n    headerClassName,\n    isAnimating,\n    isFooterSticky,\n    isFooterAtBottom,\n    isOnRightSide,\n    isOpen,\n    isHiddenOnDismiss,\n    theme,\n    type = PanelType.smallFixedFar\n  } = props;\n  const { palette, effects, fonts } = theme;\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n  const isCustomPanel = type === PanelType.custom || type === PanelType.customNear;\n\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      isOpen && classNames.isOpen,\n      hasCloseButton && classNames.hasCloseButton,\n      {\n        pointerEvents: 'none',\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0\n      },\n      isCustomPanel && isOnRightSide && classNames.custom,\n      isCustomPanel && !isOnRightSide && classNames.customNear,\n      className\n    ],\n    overlay: [\n      {\n        pointerEvents: 'auto',\n        cursor: 'pointer'\n      },\n      isOpen && isAnimating && AnimationClassNames.fadeIn100,\n      !isOpen && isAnimating && AnimationClassNames.fadeOut100\n    ],\n    hiddenPanel: [\n      !isOpen &&\n        !isAnimating &&\n        isHiddenOnDismiss && {\n          visibility: 'hidden'\n        }\n    ],\n    main: [\n      classNames.main,\n      {\n        backgroundColor: palette.white,\n        boxShadow: effects.elevation64,\n        pointerEvents: 'auto',\n        position: 'absolute',\n        display: 'flex',\n        flexDirection: 'column',\n        overflowX: 'hidden',\n        overflowY: 'auto',\n        WebkitOverflowScrolling: 'touch',\n        bottom: 0,\n        top: 0,\n        // (left, right, width) - Properties to be overridden depending on the type of the Panel and the screen breakpoint.\n        left: panelMargin.auto,\n        right: panelMargin.none,\n        width: panelWidth.full,\n        selectors: {\n          [HighContrastSelector]: {\n            borderLeft: `3px solid ${palette.neutralLight}`,\n            borderRight: `3px solid ${palette.neutralLight}`\n          },\n          ...getPanelBreakpoints(type)\n        }\n      },\n      type === PanelType.smallFluid && {\n        left: panelMargin.none\n      },\n      type === PanelType.smallFixedNear && {\n        left: panelMargin.none,\n        right: panelMargin.auto,\n        width: panelWidth.xs\n      },\n      type === PanelType.customNear && {\n        right: 'auto',\n        left: 0\n      },\n      isCustomPanel && {\n        maxWidth: '100vw'\n      },\n      isOpen && isAnimating && !isOnRightSide && AnimationClassNames.slideRightIn40,\n      isOpen && isAnimating && isOnRightSide && AnimationClassNames.slideLeftIn40,\n      !isOpen && isAnimating && !isOnRightSide && AnimationClassNames.slideLeftOut40,\n      !isOpen && isAnimating && isOnRightSide && AnimationClassNames.slideRightOut40,\n      focusTrapZoneClassName\n    ],\n    commands: [classNames.commands],\n    navigation: [\n      classNames.navigation,\n      {\n        padding: '0 5px',\n        height: commandBarHeight,\n        display: 'flex',\n        justifyContent: 'flex-end'\n      }\n    ],\n    closeButton: [classNames.closeButton],\n    contentInner: [\n      classNames.contentInner,\n      {\n        display: 'flex',\n        flexDirection: 'column',\n        flexGrow: 1,\n        overflowY: 'hidden'\n      }\n    ],\n    header: [\n      classNames.header,\n      sharedPaddingStyles,\n      {\n        margin: '14px 0',\n        // Ensure that title doesn't shrink if screen is too small\n        flexShrink: 0,\n        selectors: {\n          [`@media (min-width: ${ScreenWidthMinXLarge}px)`]: {\n            marginTop: '30px'\n          }\n        }\n      }\n    ],\n    headerText: [\n      classNames.headerText,\n      fonts.xLarge,\n      {\n        color: palette.neutralPrimary,\n        lineHeight: '27px',\n        margin: 0,\n        overflowWrap: 'break-word',\n        wordWrap: 'break-word',\n        wordBreak: 'break-word',\n        hyphens: 'auto'\n      },\n      headerClassName\n    ],\n    scrollableContent: [\n      classNames.scrollableContent,\n      {\n        overflowY: 'auto'\n      },\n      isFooterAtBottom && {\n        flexGrow: 1\n      }\n    ],\n    content: [\n      classNames.content,\n      sharedPaddingStyles,\n      {\n        marginBottom: 0,\n        paddingBottom: 20\n      }\n    ],\n    footer: [\n      classNames.footer,\n      {\n        // Ensure that footer doesn't shrink if screen is too small\n        flexShrink: 0,\n        borderTop: '1px solid transparent',\n        transition: `opacity ${AnimationVariables.durationValue3} ${AnimationVariables.easeFunction2}`\n      },\n      isFooterSticky && {\n        background: palette.white,\n        borderTopColor: palette.neutralLight\n      }\n    ],\n    footerInner: [\n      classNames.footerInner,\n      sharedPaddingStyles,\n      {\n        paddingBottom: 16,\n        paddingTop: 16\n      }\n    ]\n    // subComponentStyles: {\n    //   iconButton: getIconButtonStyles(props)\n    // }\n  };\n};\n"]}
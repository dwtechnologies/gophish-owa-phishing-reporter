{"version":3,"file":"DialogContent.base.js","sourceRoot":"../src/","sources":["components/Dialog/DialogContent.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { BaseComponent, classNamesFunction } from '../../Utilities';\nimport { DialogType, IDialogContentProps, IDialogContentStyleProps, IDialogContentStyles } from './DialogContent.types';\nimport { IconButton } from '../../Button';\nimport { DialogFooter } from './DialogFooter';\nimport { IDialogFooterProps } from './DialogFooter.types';\nimport { withResponsiveMode } from '../../utilities/decorators/withResponsiveMode';\n\nconst getClassNames = classNamesFunction<IDialogContentStyleProps, IDialogContentStyles>();\n\nconst DialogFooterType = (<DialogFooter /> as React.ReactElement<IDialogFooterProps>).type;\n\n@withResponsiveMode\nexport class DialogContentBase extends BaseComponent<IDialogContentProps, {}> {\n  public static defaultProps: IDialogContentProps = {\n    showCloseButton: false,\n    className: '',\n    topButtonsProps: [],\n    closeButtonAriaLabel: 'Close'\n  };\n\n  constructor(props: IDialogContentProps) {\n    super(props);\n  }\n\n  public render(): JSX.Element {\n    const {\n      showCloseButton,\n      className,\n      closeButtonAriaLabel,\n      onDismiss,\n      subTextId,\n      subText,\n      titleId,\n      title,\n      type,\n      styles,\n      theme,\n      draggableHeaderClassName\n    } = this.props;\n\n    const classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n      isLargeHeader: type === DialogType.largeHeader,\n      isClose: type === DialogType.close,\n      draggableHeaderClassName\n    });\n\n    const groupings = this._groupChildren();\n    let subTextContent;\n    if (subText) {\n      subTextContent = (\n        <p className={classNames.subText} id={subTextId}>\n          {subText}\n        </p>\n      );\n    }\n\n    return (\n      <div className={classNames.content}>\n        <div className={classNames.header}>\n          <p className={classNames.title} id={titleId} role=\"heading\" aria-level={2}>\n            {title}\n          </p>\n          <div className={classNames.topButton}>\n            {this.props.topButtonsProps!.map((props, index) => (\n              <IconButton key={props.uniqueId || index} {...props} />\n            ))}\n            {(type === DialogType.close || (showCloseButton && type !== DialogType.largeHeader)) && (\n              <IconButton\n                className={classNames.button}\n                iconProps={{ iconName: 'Cancel' }}\n                ariaLabel={closeButtonAriaLabel}\n                onClick={onDismiss as any}\n              />\n            )}\n          </div>\n        </div>\n        <div className={classNames.inner}>\n          <div className={classNames.innerContent}>\n            {subTextContent}\n            {groupings.contents}\n          </div>\n          {groupings.footers}\n        </div>\n      </div>\n    );\n  }\n\n  // @TODO - typing the footers as an array of DialogFooter is difficult because\n  // casing \"child as DialogFooter\" causes a problem because\n  // \"Neither type 'ReactElement<any>' nor type 'DialogFooter' is assignable to the other.\"\n  private _groupChildren(): { footers: any[]; contents: any[] } {\n    const groupings: { footers: any[]; contents: any[] } = {\n      footers: [],\n      contents: []\n    };\n\n    React.Children.map(this.props.children, child => {\n      if (typeof child === 'object' && child !== null && (child as any).type === DialogFooterType) {\n        groupings.footers.push(child);\n      } else {\n        groupings.contents.push(child);\n      }\n    });\n\n    return groupings;\n  }\n}\n"]}
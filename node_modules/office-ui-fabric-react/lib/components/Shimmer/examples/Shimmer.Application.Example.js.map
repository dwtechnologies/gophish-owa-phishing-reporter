{"version":3,"file":"Shimmer.Application.Example.js","sourceRoot":"../src/","sources":["components/Shimmer/examples/Shimmer.Application.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Async } from 'office-ui-fabric-react/lib/Utilities';\nimport { createListItems, IExampleItem } from '@uifabric/example-data';\nimport { IColumn, buildColumns, SelectionMode, Toggle } from 'office-ui-fabric-react/lib/index';\nimport { ShimmeredDetailsList } from 'office-ui-fabric-react/lib/ShimmeredDetailsList';\n\nconst fileIcons: { name: string }[] = [\n  { name: 'accdb' },\n  { name: 'csv' },\n  { name: 'docx' },\n  { name: 'dotx' },\n  { name: 'mpt' },\n  { name: 'odt' },\n  { name: 'one' },\n  { name: 'onepkg' },\n  { name: 'onetoc' },\n  { name: 'pptx' },\n  { name: 'pub' },\n  { name: 'vsdx' },\n  { name: 'xls' },\n  { name: 'xlsx' },\n  { name: 'xsn' }\n];\n\nconst ITEMS_COUNT = 200;\nconst INTERVAL_DELAY = 2500;\n\nlet _items: IExampleItem[];\n\nexport interface IShimmerApplicationExampleState {\n  items: IExampleItem[]; // DetailsList `items` prop is required so it expects at least an empty array.\n  columns?: IColumn[];\n  isDataLoaded?: boolean;\n}\n\nexport class ShimmerApplicationExample extends React.Component<{}, IShimmerApplicationExampleState> {\n  private _lastIntervalId: number;\n  private _lastIndexWithData: number;\n  private _async: Async;\n\n  constructor(props: {}) {\n    super(props);\n\n    this.state = {\n      items: [],\n      columns: _buildColumns(),\n      isDataLoaded: false\n    };\n\n    this._async = new Async(this);\n  }\n\n  public componentWillUnmount(): void {\n    this._async.dispose();\n  }\n\n  public render(): JSX.Element {\n    const { items, columns, isDataLoaded } = this.state;\n\n    return (\n      <div>\n        <Toggle\n          label=\"Toggle to load content\"\n          style={{ display: 'block', marginBottom: '20px' }}\n          checked={isDataLoaded}\n          onChange={this._onLoadData}\n          onText=\"Content\"\n          offText=\"Shimmer\"\n        />\n        <div>\n          <ShimmeredDetailsList\n            setKey=\"items\"\n            items={items}\n            columns={columns}\n            selectionMode={SelectionMode.none}\n            onRenderItemColumn={this._onRenderItemColumn}\n            enableShimmer={!isDataLoaded}\n            ariaLabelForShimmer=\"Content is being fetched\"\n            ariaLabelForGrid=\"Item details\"\n            listProps={{ renderedWindowsAhead: 0, renderedWindowsBehind: 0 }}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  private _loadData = (): void => {\n    this._lastIntervalId = this._async.setInterval(() => {\n      const randomQuantity: number = Math.floor(Math.random() * 10) + 1;\n      const itemsCopy = this.state.items!.slice(0);\n      itemsCopy.splice(\n        this._lastIndexWithData,\n        randomQuantity,\n        ..._items.slice(this._lastIndexWithData, this._lastIndexWithData + randomQuantity)\n      );\n      this._lastIndexWithData += randomQuantity;\n      this.setState({\n        items: itemsCopy\n      });\n    }, INTERVAL_DELAY);\n  };\n\n  private _onLoadData = (ev: React.MouseEvent<HTMLElement>, checked: boolean): void => {\n    if (!_items) {\n      _items = createListItems(ITEMS_COUNT);\n      _items.map((item: IExampleItem) => {\n        const randomFileType = this._randomFileIcon();\n        item.thumbnail = randomFileType.url;\n      });\n    }\n\n    let items: IExampleItem[];\n    const randomQuantity: number = Math.floor(Math.random() * 10) + 1;\n    if (checked) {\n      items = _items.slice(0, randomQuantity).concat(new Array(ITEMS_COUNT - randomQuantity));\n      this._lastIndexWithData = randomQuantity;\n      this._loadData();\n    } else {\n      items = [];\n      this._async.clearInterval(this._lastIntervalId);\n    }\n    this.setState({\n      isDataLoaded: checked,\n      items: items\n    });\n  };\n\n  private _onRenderItemColumn = (item: IExampleItem, index: number, column: IColumn): JSX.Element | string | number => {\n    if (column.key === 'thumbnail') {\n      return <img src={item.thumbnail} />;\n    }\n\n    return item[column.key as keyof IExampleItem];\n  };\n\n  private _randomFileIcon(): { docType: string; url: string } {\n    const docType: string = fileIcons[Math.floor(Math.random() * fileIcons.length) + 0].name;\n    return {\n      docType,\n      url: `https://static2.sharepointonline.com/files/fabric/assets/brand-icons/document/svg/${docType}_16x1.svg`\n    };\n  }\n}\n\nfunction _buildColumns(): IColumn[] {\n  const _item = createListItems(1);\n  const columns: IColumn[] = buildColumns(_item);\n\n  for (const column of columns) {\n    if (column.key === 'thumbnail') {\n      column.name = 'FileType';\n      column.minWidth = 16;\n      column.maxWidth = 16;\n      column.isIconOnly = true;\n      column.iconName = 'Page';\n      break;\n    }\n  }\n\n  return columns;\n}\n"]}
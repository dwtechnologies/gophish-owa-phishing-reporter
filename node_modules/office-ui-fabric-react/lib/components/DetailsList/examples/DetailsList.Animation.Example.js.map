{"version":3,"file":"DetailsList.Animation.Example.js","sourceRoot":"../src/","sources":["components/DetailsList/examples/DetailsList.Animation.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { DetailsList, DetailsListLayoutMode, IColumn } from 'office-ui-fabric-react/lib/DetailsList';\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\n\nexport interface IDetailsListAnimationExampleItem {\n  key: number;\n  name: string;\n  value: number;\n}\n\nexport interface IDetailsListAnimationExampleState {\n  items: IDetailsListAnimationExampleItem[];\n}\n\nexport class DetailsListAnimationExample extends React.Component<{}, IDetailsListAnimationExampleState> {\n  private _allItems: IDetailsListAnimationExampleItem[];\n  private _columns: IColumn[];\n  private _updateTimer: any;\n\n  constructor(props: {}) {\n    super(props);\n\n    // Populate with items for demos.\n    this._allItems = [];\n    for (let i = 0; i < 200; i++) {\n      this._allItems.push({\n        key: i,\n        name: 'Item ' + i,\n        value: i\n      });\n    }\n\n    this._columns = [\n      { key: 'column1', name: 'Name', fieldName: 'name', minWidth: 100, maxWidth: 200, isResizable: true, getValueKey: this._getValueKey },\n      { key: 'column2', name: 'Value', fieldName: 'value', minWidth: 100, maxWidth: 200, isResizable: true }\n    ];\n\n    this.state = {\n      items: this._allItems\n    };\n  }\n\n  public componentDidMount(): void {\n    const LOREM_IPSUM = (\n      'lorem ipsum dolor sit amet consectetur adipiscing elit sed do eiusmod tempor incididunt ut ' +\n      'labore et dolore magna aliqua ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut ' +\n      'aliquip ex ea commodo consequat duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore ' +\n      'eu fugiat nulla pariatur excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt '\n    ).split(' ');\n    let loremIndex = 0;\n    function _lorem(wordCount: number): string {\n      const startIndex = loremIndex + wordCount > LOREM_IPSUM.length ? 0 : loremIndex;\n      loremIndex = startIndex + wordCount;\n      return LOREM_IPSUM.slice(startIndex, loremIndex).join(' ');\n    }\n    const updateTimerFunc = () => {\n      const newItems = this.state.items.slice();\n      const i = Math.floor(Math.random() * 10);\n      newItems[i] = { ...newItems[i], ...{ value: Math.floor(Math.random() * 2), name: _lorem(1) } };\n      this.setState({ items: newItems });\n      this.forceUpdate();\n    };\n    this._updateTimer = setInterval(updateTimerFunc, 2000);\n  }\n\n  public componentWillUnmount(): void {\n    clearInterval(this._updateTimer);\n  }\n\n  public render(): JSX.Element {\n    const { items } = this.state;\n\n    return (\n      <Fabric>\n        <DetailsList\n          items={items}\n          columns={this._columns}\n          setKey=\"set\"\n          layoutMode={DetailsListLayoutMode.fixedColumns}\n          selectionPreservedOnEmptyClick={true}\n          ariaLabelForSelectionColumn=\"Toggle selection\"\n          ariaLabelForSelectAllCheckbox=\"Toggle selection for all items\"\n          checkButtonAriaLabel=\"Row checkbox\"\n          onItemInvoked={this._onItemInvoked}\n          enableUpdateAnimations={true}\n          getCellValueKey={this._getCellValueKey}\n        />\n      </Fabric>\n    );\n  }\n\n  private _onItemInvoked = (item: IDetailsListAnimationExampleItem): void => {\n    alert(`Item invoked: ${item.name}`);\n  };\n\n  private _getValueKey(item: IDetailsListAnimationExampleItem, index: number, column: IColumn): string {\n    const key = item && column && column.fieldName ? item[column.fieldName as keyof IDetailsListAnimationExampleItem] : index;\n    return key.toString();\n  }\n\n  private _getCellValueKey(item: IDetailsListAnimationExampleItem, index: number, column: IColumn): string {\n    const key = item && column && column.fieldName ? item[column.fieldName as keyof IDetailsListAnimationExampleItem] : index;\n    return key.toString();\n  }\n}\n"]}
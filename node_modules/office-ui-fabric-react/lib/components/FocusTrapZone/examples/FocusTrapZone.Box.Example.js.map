{"version":3,"file":"FocusTrapZone.Box.Example.js","sourceRoot":"../src/","sources":["components/FocusTrapZone/examples/FocusTrapZone.Box.Example.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAE,aAAa,EAAE,MAAM,mCAAmC,CAAC;AAClE,OAAO,EAAE,aAAa,EAAE,MAAM,0CAA0C,CAAC;AACzE,OAAO,EAAE,IAAI,EAAE,MAAM,iCAAiC,CAAC;AACvD,OAAO,EAAE,KAAK,EAAE,MAAM,kCAAkC,CAAC;AACzD,OAAO,EAAE,IAAI,EAAE,MAAM,iCAAiC,CAAC;AACvD,OAAO,EAAE,SAAS,EAAE,MAAM,sCAAsC,CAAC;AACjE,OAAO,EAAE,MAAM,EAAW,MAAM,mCAAmC,CAAC;AAMpE;IAA6C,mDAAkD;IAA/F;QAAA,qEAuDC;QAtDQ,WAAK,GAAkC;YAC5C,WAAW,EAAE,KAAK;SACnB,CAAC;QAEM,aAAO,GAAG,KAAK,CAAC,SAAS,EAAW,CAAC;QAyCrC,2BAAqB,GAAG;YAC9B,KAAI,CAAC,QAAQ,CAAC;gBACZ,WAAW,EAAE,IAAI;aAClB,CAAC,CAAC;QACL,CAAC,CAAC;QAEM,mCAA6B,GAAG,UAAC,EAAiC,EAAE,OAAiB;YAC3F,KAAI,CAAC,QAAQ,CAAC,EAAE,WAAW,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;QAC5C,CAAC,CAAC;;IACJ,CAAC;IAhDQ,wCAAM,GAAb;QACU,IAAA,oCAAW,CAAgB;QAEnC,OAAO,CACL,oBAAC,KAAK,IAAC,MAAM,EAAE,EAAE,WAAW,EAAE,CAAC,EAAE;YAC/B,oBAAC,KAAK,CAAC,IAAI;gBACT,oBAAC,IAAI,kIAEE,CACI;YACb,oBAAC,KAAK,CAAC,IAAI;gBACT,oBAAC,aAAa,IAAC,OAAO,EAAE,IAAI,CAAC,qBAAqB,EAAE,IAAI,EAAC,YAAY,GAAG,CAC7D;YACb,oBAAC,aAAa,IAAC,QAAQ,EAAE,CAAC,WAAW;gBACnC,oBAAC,KAAK,IACJ,eAAe,EAAC,OAAO,EACvB,MAAM,EAAE,EAAE,WAAW,EAAE,EAAE,EAAE,EAC3B,MAAM,EAAE;wBACN,IAAI,EAAE,EAAE,MAAM,EAAE,gBAAa,WAAW,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,aAAa,CAAE,EAAE,OAAO,EAAE,EAAE,EAAE;qBACtF;oBAED,oBAAC,MAAM,IACL,KAAK,EAAC,eAAe,EACrB,YAAY,EAAE,IAAI,CAAC,OAAO,EAC1B,OAAO,EAAE,WAAW,EACpB,QAAQ,EAAE,IAAI,CAAC,6BAA6B,EAC5C,MAAM,EAAC,qBAAqB,EAC5B,OAAO,EAAC,KAAK,GACb;oBACF,oBAAC,SAAS,IAAC,KAAK,EAAC,wBAAwB,EAAC,MAAM,EAAE,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,EAAE,GAAI;oBAC9E,oBAAC,IAAI,IAAC,IAAI,EAAC,kBAAkB,EAAC,MAAM,EAAC,QAAQ,iCAEtC,CACD,CACM,CACV,CACT,CAAC;IACJ,CAAC;IAWH,8BAAC;AAAD,CAAC,AAvDD,CAA6C,KAAK,CAAC,SAAS,GAuD3D","sourcesContent":["import * as React from 'react';\n\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport { FocusTrapZone } from 'office-ui-fabric-react/lib/FocusTrapZone';\nimport { Link } from 'office-ui-fabric-react/lib/Link';\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\nimport { Text } from 'office-ui-fabric-react/lib/Text';\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport { Toggle, IToggle } from 'office-ui-fabric-react/lib/Toggle';\n\nexport interface IFocusTrapZoneBoxExampleState {\n  useTrapZone: boolean;\n}\n\nexport class FocusTrapZoneBoxExample extends React.Component<{}, IFocusTrapZoneBoxExampleState> {\n  public state: IFocusTrapZoneBoxExampleState = {\n    useTrapZone: false\n  };\n\n  private _toggle = React.createRef<IToggle>();\n\n  public render() {\n    const { useTrapZone } = this.state;\n\n    return (\n      <Stack tokens={{ childrenGap: 8 }}>\n        <Stack.Item>\n          <Text>\n            If this button is used to enable FocusTrapZone, focus should return to this button after the FocusTrapZone is disabled.\n          </Text>\n        </Stack.Item>\n        <Stack.Item>\n          <DefaultButton onClick={this._onButtonClickHandler} text=\"Trap Focus\" />\n        </Stack.Item>\n        <FocusTrapZone disabled={!useTrapZone}>\n          <Stack\n            horizontalAlign=\"start\"\n            tokens={{ childrenGap: 15 }}\n            styles={{\n              root: { border: `2px solid ${useTrapZone ? '#ababab' : 'transparent'}`, padding: 10 }\n            }}\n          >\n            <Toggle\n              label=\"Use trap zone\"\n              componentRef={this._toggle}\n              checked={useTrapZone}\n              onChange={this._onFocusTrapZoneToggleChanged}\n              onText=\"On (toggle to exit)\"\n              offText=\"Off\"\n            />\n            <TextField label=\"Input inside trap zone\" styles={{ root: { width: 300 } }} />\n            <Link href=\"https://bing.com\" target=\"_blank\">\n              Hyperlink inside trap zone\n            </Link>\n          </Stack>\n        </FocusTrapZone>\n      </Stack>\n    );\n  }\n\n  private _onButtonClickHandler = (): void => {\n    this.setState({\n      useTrapZone: true\n    });\n  };\n\n  private _onFocusTrapZoneToggleChanged = (ev: React.MouseEvent<HTMLElement>, checked?: boolean): void => {\n    this.setState({ useTrapZone: !!checked });\n  };\n}\n"]}
{"version":3,"file":"FocusTrapZone.DialogInPanel.Example.js","sourceRoot":"../src/","sources":["components/FocusTrapZone/examples/FocusTrapZone.DialogInPanel.Example.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAE,aAAa,EAAE,MAAM,mCAAmC,CAAC;AAClE,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,YAAY,EAAE,MAAM,mCAAmC,CAAC;AACrF,OAAO,EAAE,aAAa,EAAE,MAAM,mCAAmC,CAAC;AAClE,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,kCAAkC,CAAC;AAOpE;IAAuD,6DAA4D;IAAnH;QAAA,qEA2DC;QA1DQ,WAAK,GAA4C;YACtD,UAAU,EAAE,IAAI;YAChB,SAAS,EAAE,KAAK;SACjB,CAAC;QAwCM,iBAAW,GAAG;YACpB,KAAI,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,CAAC;QACvC,CAAC,CAAC;QAEM,kBAAY,GAAG;YACrB,KAAI,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;QACtC,CAAC,CAAC;QAEM,mBAAa,GAAG;YACtB,KAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;QACtC,CAAC,CAAC;QAEM,kBAAY,GAAG;YACrB,KAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;QACrC,CAAC,CAAC;;IACJ,CAAC;IArDQ,kDAAM,GAAb;QACE,OAAO,CACL;YACE,oBAAC,aAAa,IAAC,IAAI,EAAC,YAAY,EAAC,aAAa,EAAC,wBAAwB,EAAC,OAAO,EAAE,IAAI,CAAC,YAAY,GAAI;YACtG,oBAAC,KAAK,IACJ,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,EAC5B,IAAI,EAAE,SAAS,CAAC,aAAa,EAC7B,SAAS,EAAE,IAAI,CAAC,aAAa,EAC7B,UAAU,EAAC,8EAA8E,EACzF,oBAAoB,EAAC,OAAO;gBAE5B,oBAAC,aAAa,IAAC,IAAI,EAAC,aAAa,EAAC,aAAa,EAAC,yBAAyB,EAAC,OAAO,EAAE,IAAI,CAAC,WAAW,GAAI;gBACvG,oBAAC,MAAM,IACL,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,EAC7B,SAAS,EAAE,IAAI,CAAC,YAAY,EAC5B,UAAU,EAAE,IAAI,EAChB,kBAAkB,EAAE;wBAClB,IAAI,EAAE,UAAU,CAAC,MAAM;wBACvB,KAAK,EAAE,qFAAqF;wBAC5F,OAAO,EAAE,kEAAkE;qBAC5E,EACD,UAAU,EAAE;wBACV,WAAW,EAAE,WAAW;wBACxB,cAAc,EAAE,aAAa;wBAC7B,UAAU,EAAE,KAAK;wBACjB,MAAM,EAAE,EAAE,IAAI,EAAE,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE;qBACpC;oBAED,oBAAC,YAAY;wBACX,oBAAC,aAAa,IAAC,OAAO,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,EAAC,IAAI,GAAG;wBACvD,oBAAC,aAAa,IAAC,OAAO,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,EAAC,QAAQ,GAAG,CAC9C,CACR,CACH,CACJ,CACP,CAAC;IACJ,CAAC;IAiBH,wCAAC;AAAD,CAAC,AA3DD,CAAuD,KAAK,CAAC,SAAS,GA2DrE","sourcesContent":["import * as React from 'react';\n\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport { Dialog, DialogType, DialogFooter } from 'office-ui-fabric-react/lib/Dialog';\nimport { PrimaryButton } from 'office-ui-fabric-react/lib/Button';\nimport { Panel, PanelType } from 'office-ui-fabric-react/lib/Panel';\n\nexport interface IFocusTrapZoneDialogInPanelExampleState {\n  hideDialog: boolean;\n  showPanel: boolean;\n}\n\nexport class FocusTrapZoneDialogInPanelExample extends React.Component<{}, IFocusTrapZoneDialogInPanelExampleState> {\n  public state: IFocusTrapZoneDialogInPanelExampleState = {\n    hideDialog: true,\n    showPanel: false\n  };\n\n  public render() {\n    return (\n      <div>\n        <DefaultButton text=\"Open Panel\" secondaryText=\"Opens the Sample Panel\" onClick={this._onShowPanel} />\n        <Panel\n          isOpen={this.state.showPanel}\n          type={PanelType.smallFixedFar}\n          onDismiss={this._onClosePanel}\n          headerText=\"This panel makes use of FocusTrapZone. Focus should be trapped in the panel.\"\n          closeButtonAriaLabel=\"Close\"\n        >\n          <DefaultButton text=\"Open Dialog\" secondaryText=\"Opens the Sample Dialog\" onClick={this._showDialog} />\n          <Dialog\n            hidden={this.state.hideDialog}\n            onDismiss={this._closeDialog}\n            isBlocking={true}\n            dialogContentProps={{\n              type: DialogType.normal,\n              title: 'This dialog also makes use of FocusTrapZone. Focus should be trapped in the dialog.',\n              subText: \"Focus will move back to the panel if you press 'OK' or 'Cancel'.\"\n            }}\n            modalProps={{\n              titleAriaId: 'myLabelId',\n              subtitleAriaId: 'mySubTextId',\n              isBlocking: false,\n              styles: { main: { maxWidth: 450 } }\n            }}\n          >\n            <DialogFooter>\n              <PrimaryButton onClick={this._closeDialog} text=\"OK\" />\n              <DefaultButton onClick={this._closeDialog} text=\"Cancel\" />\n            </DialogFooter>\n          </Dialog>\n        </Panel>\n      </div>\n    );\n  }\n\n  private _showDialog = (): void => {\n    this.setState({ hideDialog: false });\n  };\n\n  private _closeDialog = (): void => {\n    this.setState({ hideDialog: true });\n  };\n\n  private _onClosePanel = (): void => {\n    this.setState({ showPanel: false });\n  };\n\n  private _onShowPanel = (): void => {\n    this.setState({ showPanel: true });\n  };\n}\n"]}
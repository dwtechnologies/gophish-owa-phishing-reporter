{"version":3,"file":"Stack.Horizontal.Shrink.Example.js","sourceRoot":"../src/","sources":["components/Stack/examples/Stack.Horizontal.Shrink.Example.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,cAAc,EAAE,MAAM,EAAE,KAAK,EAAgD,MAAM,wBAAwB,CAAC;AAErH,iCAAiC;AACjC,IAAM,eAAe,GAAqB;IACxC,IAAI,EAAE;QACJ,UAAU,EAAE,QAAQ;QACpB,UAAU,EAAE,cAAc,CAAC,YAAY;QACvC,KAAK,EAAE,cAAc,CAAC,KAAK;QAC3B,OAAO,EAAE,MAAM;QACf,MAAM,EAAE,EAAE;QACV,cAAc,EAAE,QAAQ;QACxB,QAAQ,EAAE,QAAQ;KACnB;CACF,CAAC;AACF,IAAM,2BAA2B,GAAqB;IACpD,IAAI,EAAE;QACJ,UAAU,EAAE,QAAQ;QACpB,UAAU,EAAE,cAAc,CAAC,YAAY;QACvC,KAAK,EAAE,cAAc,CAAC,KAAK;QAC3B,OAAO,EAAE,MAAM;QACf,MAAM,EAAE,EAAE;QACV,cAAc,EAAE,QAAQ;QACxB,QAAQ,EAAE,QAAQ;QAClB,KAAK,EAAE,GAAG;KACX;CACF,CAAC;AAEF,oBAAoB;AACpB,IAAM,gBAAgB,GAAiB,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC;AAC1D,IAAM,gBAAgB,GAAiB;IACrC,WAAW,EAAE,CAAC;IACd,OAAO,EAAE,EAAE;CACZ,CAAC;AAEF,MAAM,CAAC,IAAM,4BAA4B,GAA4B;IAC7D,IAAA,wBAAyD,EAAxD,kBAAU,EAAE,qBAA4C,CAAC;IAEhE,6BAA6B;IAC7B,IAAM,WAAW,GAAiB;QAChC,IAAI,EAAE;YACJ,UAAU,EAAE,cAAc,CAAC,aAAa;YACxC,QAAQ,EAAE,QAAQ;YAClB,KAAK,EAAK,UAAU,MAAG;SACxB;KACF,CAAC;IAEF,OAAO,CACL,oBAAC,KAAK,IAAC,MAAM,EAAE,gBAAgB;QAC7B,oBAAC,MAAM,IACL,KAAK,EAAC,uDAAuD,EAC7D,GAAG,EAAE,CAAC,EACN,GAAG,EAAE,GAAG,EACR,IAAI,EAAE,CAAC,EACP,YAAY,EAAE,GAAG,EACjB,SAAS,EAAE,IAAI,EACf,QAAQ,EAAE,aAAa,GACvB;QACF,oBAAC,KAAK,IAAC,UAAU,QAAC,MAAM,EAAE,WAAW,EAAE,MAAM,EAAE,gBAAgB;YAC7D,oBAAC,KAAK,CAAC,IAAI,IAAC,IAAI,QAAC,MAAM,EAAE,eAAe,eAE3B;YACb,oBAAC,KAAK,CAAC,IAAI,IAAC,IAAI,QAAC,MAAM,EAAE,eAAe,eAE3B;YACb,oBAAC,KAAK,CAAC,IAAI,IAAC,IAAI,QAAC,aAAa,QAAC,MAAM,EAAE,2BAA2B,qBAErD;YACb,oBAAC,KAAK,CAAC,IAAI,IAAC,IAAI,QAAC,MAAM,EAAE,eAAe,eAE3B,CACP,CACF,CACT,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { DefaultPalette, Slider, Stack, IStackStyles, IStackTokens, IStackItemStyles } from 'office-ui-fabric-react';\n\n// Non-mutating styles definition\nconst stackItemStyles: IStackItemStyles = {\n  root: {\n    alignItems: 'center',\n    background: DefaultPalette.themePrimary,\n    color: DefaultPalette.white,\n    display: 'flex',\n    height: 50,\n    justifyContent: 'center',\n    overflow: 'hidden'\n  }\n};\nconst nonShrinkingStackItemStyles: IStackItemStyles = {\n  root: {\n    alignItems: 'center',\n    background: DefaultPalette.themePrimary,\n    color: DefaultPalette.white,\n    display: 'flex',\n    height: 50,\n    justifyContent: 'center',\n    overflow: 'hidden',\n    width: 500\n  }\n};\n\n// Tokens definition\nconst outerStackTokens: IStackTokens = { childrenGap: 5 };\nconst innerStackTokens: IStackTokens = {\n  childrenGap: 5,\n  padding: 10\n};\n\nexport const HorizontalStackShrinkExample: React.FunctionComponent = () => {\n  const [stackWidth, setStackWidth] = React.useState<number>(100);\n\n  // Mutating styles definition\n  const stackStyles: IStackStyles = {\n    root: {\n      background: DefaultPalette.themeTertiary,\n      overflow: 'hidden',\n      width: `${stackWidth}%`\n    }\n  };\n\n  return (\n    <Stack tokens={outerStackTokens}>\n      <Slider\n        label=\"Change the stack width to see how child items shrink:\"\n        min={1}\n        max={100}\n        step={1}\n        defaultValue={100}\n        showValue={true}\n        onChange={setStackWidth}\n      />\n      <Stack horizontal styles={stackStyles} tokens={innerStackTokens}>\n        <Stack.Item grow styles={stackItemStyles}>\n          I shrink\n        </Stack.Item>\n        <Stack.Item grow styles={stackItemStyles}>\n          I shrink\n        </Stack.Item>\n        <Stack.Item grow disableShrink styles={nonShrinkingStackItemStyles}>\n          I don't shrink\n        </Stack.Item>\n        <Stack.Item grow styles={stackItemStyles}>\n          I shrink\n        </Stack.Item>\n      </Stack>\n    </Stack>\n  );\n};\n"]}
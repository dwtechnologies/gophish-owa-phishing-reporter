{"version":3,"file":"Stack.js","sourceRoot":"../src/","sources":["components/Stack/Stack.tsx"],"names":[],"mappings":";AAAA,qBAAqB;AACrB,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,SAAS,EAAE,eAAe,EAAE,QAAQ,EAAE,MAAM,kBAAkB,CAAC;AACxE,OAAO,EAAE,cAAc,EAAE,qBAAqB,EAAE,gBAAgB,EAAE,MAAM,iBAAiB,CAAC;AAC1F,OAAO,EAAE,MAAM,EAAE,MAAM,gBAAgB,CAAC;AAExC,OAAO,EAAE,SAAS,EAAE,MAAM,uBAAuB,CAAC;AAGlD,IAAM,aAAa,GAAI,UAAC,SAAS,OAA2C,CAAC,IAAI,CAAC;AAElF,IAAM,SAAS,GAA4B,UAAA,KAAK;IACtC,IAAA,aAAoB,EAApB,qCAAoB,EAAE,mCAAa,EAAE,iBAAI,EAAE,6DAAO,CAAW;IAErE,gBAAgB,CAAC,OAAO,EAAE,KAAK,EAAE;QAC/B,GAAG,EAAE,oBAAoB;QACzB,SAAS,EAAE,kBAAkB;QAC7B,QAAQ,EAAE,iBAAiB;QAC3B,OAAO,EAAE,gBAAgB;KAC1B,CAAC,CAAC;IAEH,IAAM,aAAa,GAAgC,KAAK,CAAC,QAAQ,CAAC,GAAG,CACnE,KAAK,CAAC,QAAQ,EACd,UAAC,KAA0C,EAAE,KAAa;QACxD,IAAI,CAAC,KAAK,EAAE;YACV,OAAO,IAAI,CAAC;SACb;QAED,IAAI,KAAK,CAAC,IAAI,KAAK,aAAa,EAAE;YAChC,IAAM,gBAAgB,GAAoB;gBACxC,MAAM,EAAE,CAAC,aAAa;aACvB,CAAC;YAEF,OAAO,KAAK,CAAC,YAAY,CAAC,KAAK,uBAC1B,gBAAgB,EAChB,KAAK,CAAC,KAAK,EACd,CAAC;SACJ;QAED,OAAO,KAAK,CAAC;IACf,CAAC,CACF,CAAC;IAEF,IAAM,WAAW,GAAG,cAAc,CAAuC,IAAI,EAAE,qBAAqB,CAAC,CAAC;IAEtG,IAAM,KAAK,GAAG,QAAQ,CAA2B,KAAK,EAAE;QACtD,IAAI,EAAE,QAAQ;QACd,KAAK,EAAE,KAAK;KACb,CAAC,CAAC;IAEH,IAAI,IAAI,EAAE;QACR,OAAO,CACL,UAAC,KAAK,CAAC,IAAI,uBAAK,WAAW;YACzB,UAAC,KAAK,CAAC,KAAK,QAAE,aAAa,CAAe,CAC/B,CACd,CAAC;KACH;IAED,OAAO,UAAC,KAAK,CAAC,IAAI,uBAAK,WAAW,GAAG,aAAa,CAAc,CAAC;AACnE,CAAC,CAAC;AAEF,IAAM,YAAY,GAAG;IACnB,IAAI,EAAE,SAAS;CAChB,CAAC;AAEF,MAAM,CAAC,IAAM,KAAK,GAEd,eAAe,CAAC,SAAS,EAAE;IAC7B,WAAW,EAAE,OAAO;IACpB,MAAM,QAAA;IACN,OAAO,EAAE,YAAY;CACtB,CAAC,CAAC;AAEH,eAAe,KAAK,CAAC","sourcesContent":["/** @jsx withSlots */\nimport * as React from 'react';\nimport { withSlots, createComponent, getSlots } from '../../Foundation';\nimport { getNativeProps, htmlElementProperties, warnDeprecations } from '../../Utilities';\nimport { styles } from './Stack.styles';\nimport { IStackComponent, IStackProps, IStackSlots } from './Stack.types';\nimport { StackItem } from './StackItem/StackItem';\nimport { IStackItemProps } from './StackItem/StackItem.types';\n\nconst StackItemType = (<StackItem /> as React.ReactElement<IStackItemProps>).type;\n\nconst StackView: IStackComponent['view'] = props => {\n  const { as: RootType = 'div', disableShrink, wrap, ...rest } = props;\n\n  warnDeprecations('Stack', props, {\n    gap: 'tokens.childrenGap',\n    maxHeight: 'tokens.maxHeight',\n    maxWidth: 'tokens.maxWidth',\n    padding: 'tokens.padding'\n  });\n\n  const stackChildren: (React.ReactChild | null)[] = React.Children.map(\n    props.children,\n    (child: React.ReactElement<IStackItemProps>, index: number) => {\n      if (!child) {\n        return null;\n      }\n\n      if (child.type === StackItemType) {\n        const defaultItemProps: IStackItemProps = {\n          shrink: !disableShrink\n        };\n\n        return React.cloneElement(child, {\n          ...defaultItemProps,\n          ...child.props\n        });\n      }\n\n      return child;\n    }\n  );\n\n  const nativeProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(rest, htmlElementProperties);\n\n  const Slots = getSlots<IStackProps, IStackSlots>(props, {\n    root: RootType,\n    inner: 'div'\n  });\n\n  if (wrap) {\n    return (\n      <Slots.root {...nativeProps}>\n        <Slots.inner>{stackChildren}</Slots.inner>\n      </Slots.root>\n    );\n  }\n\n  return <Slots.root {...nativeProps}>{stackChildren}</Slots.root>;\n};\n\nconst StackStatics = {\n  Item: StackItem\n};\n\nexport const Stack: React.StatelessComponent<IStackProps> & {\n  Item: React.StatelessComponent<IStackItemProps>;\n} = createComponent(StackView, {\n  displayName: 'Stack',\n  styles,\n  statics: StackStatics\n});\n\nexport default Stack;\n"]}
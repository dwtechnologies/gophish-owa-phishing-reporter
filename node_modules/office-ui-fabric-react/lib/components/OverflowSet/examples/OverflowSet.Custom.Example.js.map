{"version":3,"file":"OverflowSet.Custom.Example.js","sourceRoot":"../src/","sources":["components/OverflowSet/examples/OverflowSet.Custom.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { CommandBarButton, IButtonStyles } from 'office-ui-fabric-react/lib/Button';\nimport { SearchBox } from 'office-ui-fabric-react/lib/SearchBox';\nimport { IOverflowSetItemProps, OverflowSet } from 'office-ui-fabric-react/lib/OverflowSet';\n\nconst noOp = () => undefined;\n\nexport class OverflowSetCustomExample extends React.PureComponent {\n  public render(): JSX.Element {\n    return (\n      <OverflowSet\n        items={[\n          {\n            key: 'search',\n            onRender: () => {\n              return <SearchBox placeholder=\"Search\" styles={{ root: { marginBottom: 0, width: 200 } }} />;\n            }\n          },\n          {\n            key: 'newItem',\n            name: 'New',\n            icon: 'Add',\n            ariaLabel: 'New. Use left and right arrow keys to navigate',\n            onClick: noOp,\n            subMenuProps: {\n              items: [\n                {\n                  key: 'emailMessage',\n                  name: 'Email message',\n                  icon: 'Mail'\n                },\n                {\n                  key: 'calendarEvent',\n                  name: 'Calendar event',\n                  icon: 'Calendar'\n                }\n              ]\n            }\n          },\n          {\n            key: 'upload',\n            name: 'Upload',\n            icon: 'Upload',\n            onClick: noOp\n          },\n          {\n            key: 'share',\n            name: 'Share',\n            icon: 'Share',\n            onClick: noOp\n          }\n        ]}\n        overflowItems={[\n          {\n            key: 'newItem',\n            name: 'Add',\n            icon: 'Add',\n            ariaLabel: 'New. Use left and right arrow keys to navigate',\n            onClick: noOp,\n            subMenuProps: {\n              items: [\n                {\n                  key: 'emailMessage',\n                  name: 'Email message',\n                  icon: 'Mail'\n                },\n                {\n                  key: 'calendarEvent',\n                  name: 'Calendar event',\n                  icon: 'Calendar'\n                }\n              ]\n            }\n          },\n          {\n            key: 'move',\n            name: 'Move to...',\n            icon: 'MoveToFolder',\n            onClick: noOp\n          },\n          {\n            key: 'copy',\n            name: 'Copy to...',\n            icon: 'Copy',\n            onClick: noOp\n          },\n          {\n            key: 'rename',\n            name: 'Rename...',\n            icon: 'Edit',\n            onClick: noOp\n          },\n          {\n            key: 'disabled',\n            name: 'Disabled...',\n            icon: 'Cancel',\n            disabled: true,\n            onClick: noOp\n          }\n        ]}\n        onRenderOverflowButton={this._onRenderOverflowButton}\n        onRenderItem={this._onRenderItem}\n      />\n    );\n  }\n\n  private _onRenderItem = (item: IOverflowSetItemProps): JSX.Element => {\n    if (item.onRender) {\n      return item.onRender(item);\n    }\n    return <CommandBarButton iconProps={{ iconName: item.icon }} menuProps={item.subMenuProps} text={item.name} />;\n  };\n\n  private _onRenderOverflowButton = (overflowItems: any[] | undefined): JSX.Element => {\n    const buttonStyles: Partial<IButtonStyles> = {\n      root: {\n        minWidth: 0,\n        padding: '0 4px',\n        alignSelf: 'stretch',\n        height: 'auto'\n      }\n    };\n    return <CommandBarButton styles={buttonStyles} menuIconProps={{ iconName: 'More' }} menuProps={{ items: overflowItems! }} />;\n  };\n}\n"]}
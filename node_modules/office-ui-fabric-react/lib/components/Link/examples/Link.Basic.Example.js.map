{"version":3,"file":"Link.Basic.Example.js","sourceRoot":"../src/","sources":["components/Link/examples/Link.Basic.Example.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,IAAI,EAAE,MAAM,iCAAiC,CAAC;AAEvD,MAAM,CAAC,IAAM,gBAAgB,GAA4B;IACvD,OAAO,CACL;QACE;;YAC2B,oBAAC,IAAI,IAAC,IAAI,EAAC,8CAA8C,mCAAoC;;YAChH,oBAAC,IAAI,2CAAwC;;YAAsD,GAAG;YAC5G,oBAAC,IAAI,IAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAC,8CAA8C,qBAElE,CACL;QACJ,uVAII,CACA,CACP,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { Link } from 'office-ui-fabric-react/lib/Link';\n\nexport const LinkBasicExample: React.FunctionComponent = () => {\n  return (\n    <div>\n      <p>\n        When a link has an href, <Link href=\"http://dev.office.com/fabric/components/link\">it renders as an anchor tag.</Link> Without an\n        href, <Link>the link is rendered as a button</Link>. You can also use the disabled attribute to create a{' '}\n        <Link disabled={true} href=\"http://dev.office.com/fabric/components/link\">\n          disabled link.\n        </Link>\n      </p>\n      <p>\n        It's not recommended to use Links with imgs because Links are meant to render textual inline content. Buttons are inline-block or in\n        the case of imgs, block. However, it is possible to create a linked image button by making a button with an unstyled variant and\n        adding the img content and href source to that.\n      </p>\n    </div>\n  );\n};\n"]}
{"version":3,"file":"SelectedPeopleList.Controlled.Example.js","sourceRoot":"../src/","sources":["components/SelectedItemsList/examples/SelectedPeopleList.Controlled.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\n\nimport { PrimaryButton } from 'office-ui-fabric-react/lib/Button';\nimport {\n  IExtendedPersonaProps,\n  SelectedPeopleList,\n  ISelectedPeopleItemProps,\n  ExtendedSelectedItem\n} from 'office-ui-fabric-react/lib/SelectedItemsList';\nimport { Selection } from 'office-ui-fabric-react/lib/Selection';\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\nimport { people, groupOne, groupTwo } from '@uifabric/example-data';\n\nexport interface ISelectedPeopleListControlledExampleState {\n  currentSelectedItems: IExtendedPersonaProps[];\n  nextPersonIndex: number;\n}\n\nexport class SelectedPeopleListControlledExample extends React.Component<{}, ISelectedPeopleListControlledExampleState> {\n  private _selectionList = React.createRef<SelectedPeopleList>();\n  private _selection: Selection;\n\n  constructor(props: {}) {\n    super(props);\n\n    this.state = {\n      currentSelectedItems: [people[40]],\n      nextPersonIndex: 0\n    };\n    this._selection = new Selection({ onSelectionChanged: () => this.forceUpdate() });\n  }\n\n  public render(): JSX.Element {\n    return (\n      <div>\n        <PrimaryButton\n          text=\"Add another item\"\n          onClick={this._onAddItemButtonClicked}\n          disabled={this.state.nextPersonIndex >= people.length}\n          styles={{ root: { display: 'block', marginBottom: 20 } }}\n        />\n        <Stack horizontal wrap styles={{ root: { maxWidth: '100%' } }}>\n          <SelectedPeopleList\n            key=\"normal\"\n            removeButtonAriaLabel=\"Remove\"\n            selectedItems={this.state.currentSelectedItems}\n            componentRef={this._selectionList}\n            onCopyItems={this._onCopyItems}\n            onExpandGroup={this._onExpandItem}\n            copyMenuItemText=\"Copy\"\n            removeMenuItemText=\"Remove\"\n            selection={this._selection}\n            onRenderItem={this._onRenderItem}\n            onItemDeleted={this._onItemDeleted}\n          />\n        </Stack>\n      </div>\n    );\n  }\n\n  private _onRenderItem = (props: ISelectedPeopleItemProps): JSX.Element => {\n    return <ExtendedSelectedItem {...props} />;\n  };\n\n  private _onAddItemButtonClicked = (): void => {\n    const { nextPersonIndex, currentSelectedItems } = this.state;\n    this.setState({\n      currentSelectedItems: [...currentSelectedItems, people[nextPersonIndex]],\n      nextPersonIndex: nextPersonIndex + 1\n    });\n  };\n\n  private _onItemDeleted = (item: IExtendedPersonaProps): void => {\n    const { currentSelectedItems } = this.state;\n    const indexToRemove = currentSelectedItems.indexOf(item);\n    const newSelectedItems = [...currentSelectedItems];\n    newSelectedItems.splice(indexToRemove, 1);\n    this.setState({ currentSelectedItems: newSelectedItems });\n  };\n\n  private _onExpandItem = (item: IExtendedPersonaProps): void => {\n    const { currentSelectedItems } = this.state;\n    const expandedItem = item.text === 'Group One' ? groupOne : item.text === 'Group Two' ? groupTwo : [];\n    const indexToExpand = currentSelectedItems.indexOf(item);\n    this.setState({\n      currentSelectedItems: currentSelectedItems\n        .slice(0, indexToExpand)\n        .concat(expandedItem)\n        .concat(currentSelectedItems.slice(indexToExpand + 1))\n    });\n  };\n\n  private _onCopyItems(items: IExtendedPersonaProps[]): string {\n    return items.map((item: IExtendedPersonaProps) => item.text).join(', ');\n  }\n}\n"]}
{"version":3,"file":"ColorPickerGridCell.types.js","sourceRoot":"../src/","sources":["components/SwatchColorPicker/ColorPickerGridCell.types.ts"],"names":[],"mappings":"","sourcesContent":["import * as React from 'react';\nimport { IStyle, ITheme } from '../../Styling';\nimport { IStyleFunctionOrObject } from '../../Utilities';\n\n/**\n * {@docCategory SwatchColorPicker}\n */\nexport interface IColorPickerGridCellProps {\n  /**\n   * Item to render\n   */\n  item: IColorCellProps;\n\n  /**\n   * Arbitrary unique string associated with this option\n   */\n  id: string;\n\n  /**\n   * The label for this item.\n   * Visible text if this item is a header,\n   * tooltip if is this item is normal\n   */\n  label?: string;\n\n  /**\n   * The CSS-compatible string to describe the color\n   */\n  color?: string;\n\n  /**\n   * Index for this option\n   */\n  index?: number;\n\n  /**\n   * The theme object to use for styling.\n   */\n  theme?: ITheme;\n\n  /**\n   * Wheter or not colorOption should be rendered as a circle or square.\n   */\n  circle?: boolean;\n\n  /**\n   * Optional, if the this option should be disabled\n   */\n  disabled?: boolean;\n\n  /**\n   * Optional, if the cell is currently selected\n   */\n  selected: boolean;\n\n  /**\n   * Height of the cell, in pixels\n   * @defaultvalue 20\n   */\n  height?: number;\n\n  /**\n   * Width of the cell, in pixels\n   * @defaultvalue 20\n   */\n  width?: number;\n\n  /**\n   * Width of the border that indicates a selected/hovered cell, in pixels.\n   * If `cellWidth` is less than 24px, then default value is 2px. Otherwise it defaults to 4px.\n   * @defaultvalue 2\n   */\n  borderWidth?: number;\n\n  /**\n   * The on click handler\n   */\n  onClick?: (item: IColorCellProps) => void;\n\n  /**\n   * Optional, the onHover handler\n   */\n  onHover?: (item?: IColorCellProps) => void;\n\n  /**\n   * Optional, the onFocus handler\n   */\n  onFocus?: (item: IColorCellProps) => void;\n\n  /**\n   * Optional styles for the component.\n   */\n  styles?: IStyleFunctionOrObject<IColorPickerGridCellStyleProps, IColorPickerGridCellStyles>;\n\n  /**\n   * Optional, mouseEnter handler.\n   * @returns true if the event should be processed, false otherwise\n   */\n  onMouseEnter?: (ev: React.MouseEvent<HTMLButtonElement>) => boolean;\n\n  /**\n   * Optional, mouseMove handler\n   * @returns true if the event should be processed, false otherwise\n   */\n  onMouseMove?: (ev: React.MouseEvent<HTMLButtonElement>) => boolean;\n\n  /**\n   * Optional, mouseLeave handler\n   */\n  onMouseLeave?: (ev: React.MouseEvent<HTMLButtonElement>) => void;\n\n  /**\n   * Optional, onWheel handler\n   */\n  onWheel?: (ev: React.MouseEvent<HTMLButtonElement>) => void;\n\n  /**\n   * Optional, onkeydown handler\n   */\n  onKeyDown?: (ev: React.KeyboardEvent<HTMLButtonElement>) => void;\n}\n\n/**\n * {@docCategory SwatchColorPicker}\n */\nexport interface IColorCellProps {\n  /**\n   * Arbitrary unique string associated with this option\n   */\n  id: string;\n\n  /**\n   * The label for this item.\n   * Visible text if this item is a header,\n   * tooltip if is this item is normal\n   */\n  label?: string;\n\n  /**\n   * The CSS-compatible string to describe the color\n   */\n  color?: string;\n\n  /**\n   * Index for this option\n   */\n  index?: number;\n}\n\n/**\n * Properties required to build the styles for the color picker component.\n * {@docCategory SwatchColorPicker}\n */\nexport interface IColorPickerGridCellStyleProps {\n  /**\n   * Theme to apply to the cell.\n   */\n  theme: ITheme;\n\n  /**\n   * Whether the component is disabled or not.\n   */\n  disabled?: boolean;\n\n  /**\n   * Whether the cell is currently selected or not.\n   */\n  selected?: boolean;\n\n  /**\n   * Whether the svg color element should be rendered as a circle or not.\n   */\n  circle?: boolean;\n\n  /**\n   * Whether the color being rendered is white or not. If it is white we show a border around it.\n   */\n  isWhite?: boolean;\n\n  /**\n   * The height of this cell, in pixels.\n   */\n  height?: number;\n\n  /**\n   * The width of this cell, in pixels.\n   */\n  width?: number;\n\n  /**\n   * The width of the border indicating a hovered or selected cell, in pixels.\n   */\n  borderWidth?: number;\n}\n\n/**\n * Styles for the Color Picker Component.\n * {@docCategory SwatchColorPicker}\n */\nexport interface IColorPickerGridCellStyles {\n  /**\n   * Style to apply to a colorCell in the color picker.\n   */\n  colorCell: IStyle;\n\n  /**\n   * Style to apply to the svg element that renders the color.\n   */\n  svg: IStyle;\n}\n"]}
{"version":3,"file":"Dropdown.base.js","sourceRoot":"../src/","sources":["components/Dropdown/Dropdown.base.tsx"],"names":[],"mappings":"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","sourcesContent":["declare function setTimeout(callback: (...args: any[]) => void, ms: number, ...args: any[]): number;\n\nimport * as React from 'react';\nimport {\n  IStyleFunctionOrObject,\n  KeyCodes,\n  classNamesFunction,\n  divProperties,\n  findIndex,\n  getDocument,\n  getFirstFocusable,\n  getId,\n  getLastFocusable,\n  getNativeProps,\n  initializeComponentRef,\n  isIOS,\n  isMac,\n  mergeAriaAttributeValues,\n  safeRequestAnimationFrame,\n  warnDeprecations,\n  warnMutuallyExclusive\n} from '../../Utilities';\nimport { Callout } from '../../Callout';\nimport { Checkbox } from '../../Checkbox';\nimport { CommandButton } from '../../Button';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nimport { DropdownMenuItemType, IDropdownOption, IDropdownProps, IDropdownStyleProps, IDropdownStyles, IDropdown } from './Dropdown.types';\nimport { DropdownSizePosCache } from './utilities/DropdownSizePosCache';\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\nimport { ICalloutPositionedInfo, RectangleEdge } from '../../utilities/positioning';\nimport { Icon } from '../../Icon';\nimport { ILabelStyleProps, ILabelStyles, Label } from '../../Label';\nimport { IProcessedStyleSet } from '../../Styling';\nimport { IWithResponsiveModeState } from '../../utilities/decorators/withResponsiveMode';\nimport { KeytipData } from '../../KeytipData';\nimport { Panel, IPanelStyleProps, IPanelStyles } from '../../Panel';\nimport { ResponsiveMode, withResponsiveMode } from '../../utilities/decorators/withResponsiveMode';\nimport { SelectableOptionMenuItemType, getAllSelectedOptions, ISelectableDroppableTextProps } from '../../utilities/selectableOption/index';\n\nconst getClassNames = classNamesFunction<IDropdownStyleProps, IDropdownStyles>();\n\n/** Internal only props interface to support mixing in responsive mode */\nexport interface IDropdownInternalProps extends IDropdownProps, IWithResponsiveModeState {}\n\nexport interface IDropdownState {\n  isOpen: boolean;\n  selectedIndices: number[];\n  /** Whether the root dropdown element has focus. */\n  hasFocus: boolean;\n  calloutRenderEdge?: RectangleEdge;\n}\n\n@withResponsiveMode\nexport class DropdownBase extends React.Component<IDropdownInternalProps, IDropdownState> implements IDropdown {\n  public static defaultProps = {\n    options: [] as any[]\n  };\n\n  private _host = React.createRef<HTMLDivElement>();\n  private _focusZone = React.createRef<FocusZone>();\n  private _dropDown = React.createRef<HTMLDivElement>();\n  private _id: string;\n  private _isScrollIdle: boolean;\n  private readonly _scrollIdleDelay: number = 250 /* ms */;\n  private _scrollIdleTimeoutId: number | undefined;\n  /** True if the most recent keydown event was for alt (option) or meta (command). */\n  private _lastKeyDownWasAltOrMeta: boolean | undefined;\n  private _sizePosCache: DropdownSizePosCache = new DropdownSizePosCache();\n  private _classNames: IProcessedStyleSet<IDropdownStyles>;\n  private _requestAnimationFrame = safeRequestAnimationFrame(this);\n\n  /** Flag for when we get the first mouseMove */\n  private _gotMouseMove: boolean;\n\n  constructor(props: IDropdownProps) {\n    super(props);\n\n    initializeComponentRef(this);\n\n    if (process.env.NODE_ENV !== 'production') {\n      warnDeprecations('Dropdown', props, {\n        isDisabled: 'disabled',\n        onChanged: 'onChange',\n        placeHolder: 'placeholder',\n        onRenderPlaceHolder: 'onRenderPlaceholder'\n      });\n\n      warnMutuallyExclusive('Dropdown', props, {\n        defaultSelectedKey: 'selectedKey',\n        defaultSelectedKeys: 'selectedKeys',\n        selectedKeys: 'selectedKey',\n        multiSelect: 'defaultSelectedKey',\n        selectedKey: 'multiSelect'\n      });\n    }\n\n    this._id = props.id || getId('Dropdown');\n    this._isScrollIdle = true;\n\n    let selectedIndices: number[];\n\n    if (this.props.multiSelect) {\n      const selectedKeys = props.defaultSelectedKeys !== undefined ? props.defaultSelectedKeys : props.selectedKeys;\n      selectedIndices = this._getSelectedIndexes(props.options, selectedKeys);\n    } else {\n      const selectedKey = props.defaultSelectedKey !== undefined ? props.defaultSelectedKey : props.selectedKey;\n      selectedIndices = this._getSelectedIndexes(props.options, selectedKey!);\n      this._sizePosCache.updateOptions(props.options);\n    }\n\n    this.state = {\n      isOpen: false,\n      selectedIndices,\n      hasFocus: false,\n      calloutRenderEdge: undefined\n    };\n  }\n\n  /**\n   * All selected options\n   */\n  public get selectedOptions(): IDropdownOption[] {\n    const { options } = this.props;\n    const { selectedIndices } = this.state;\n\n    return getAllSelectedOptions(options, selectedIndices);\n  }\n\n  public componentWillUnmount() {\n    clearTimeout(this._scrollIdleTimeoutId);\n  }\n\n  // tslint:disable-next-line function-name\n  public UNSAFE_componentWillReceiveProps(newProps: IDropdownProps): void {\n    // In controlled component usage where selectedKey is provided, update the selectedIndex\n    // state if the key or options change.\n    let selectedKeyProp: 'defaultSelectedKeys' | 'selectedKeys' | 'defaultSelectedKey' | 'selectedKey';\n\n    // this does a shallow compare (assumes options are pure), for the purposes of determining whether\n    // defaultSelectedKey/defaultSelectedKeys are respected.\n    const didOptionsChange = newProps.options !== this.props.options;\n\n    if (newProps.multiSelect) {\n      if (didOptionsChange && newProps.defaultSelectedKeys !== undefined) {\n        selectedKeyProp = 'defaultSelectedKeys';\n      } else {\n        selectedKeyProp = 'selectedKeys';\n      }\n    } else {\n      if (didOptionsChange && newProps.defaultSelectedKey !== undefined) {\n        selectedKeyProp = 'defaultSelectedKey';\n      } else {\n        selectedKeyProp = 'selectedKey';\n      }\n    }\n\n    if (newProps[selectedKeyProp] !== undefined && (newProps[selectedKeyProp] !== this.props[selectedKeyProp] || didOptionsChange)) {\n      this.setState({\n        selectedIndices: this._getSelectedIndexes(newProps.options, newProps[selectedKeyProp])\n      });\n    }\n\n    if (\n      newProps.options !== this.props.options && // preexisting code assumes purity of the options...\n      !newProps.multiSelect // only relevant in single selection\n    ) {\n      this._sizePosCache.updateOptions(newProps.options);\n    }\n  }\n\n  public componentDidUpdate(prevProps: IDropdownProps, prevState: IDropdownState) {\n    if (prevState.isOpen === true && this.state.isOpen === false) {\n      this._gotMouseMove = false;\n\n      if (this._dropDown.current) {\n        this._dropDown.current.focus();\n      }\n\n      if (this.props.onDismiss) {\n        this.props.onDismiss();\n      }\n    }\n  }\n\n  public render(): JSX.Element {\n    const id = this._id;\n\n    const props = this.props;\n    const {\n      className,\n      label,\n      options,\n      ariaLabel,\n      required,\n      errorMessage,\n      multiSelect,\n      keytipProps,\n      styles: propStyles,\n      theme,\n      panelProps,\n      calloutProps,\n      onRenderTitle = this._onRenderTitle,\n      onRenderContainer = this._onRenderContainer,\n      onRenderCaretDown = this._onRenderCaretDown,\n      onRenderLabel = this._onRenderLabel\n    } = props;\n    const { isOpen, selectedIndices, hasFocus, calloutRenderEdge } = this.state;\n    const onRenderPlaceholder = props.onRenderPlaceholder || props.onRenderPlaceHolder || this._onRenderPlaceholder;\n\n    const selectedOptions = getAllSelectedOptions(options, selectedIndices);\n    const divProps = getNativeProps(props, divProperties);\n\n    const disabled = this._isDisabled();\n\n    const optionId = id + '-option';\n    const ariaAttrs =\n      multiSelect || disabled\n        ? {\n            role: undefined,\n            ariaActiveDescendant: undefined,\n            childRole: undefined,\n            ariaSetSize: undefined,\n            ariaPosInSet: undefined,\n            ariaSelected: undefined\n          }\n        : // single select\n          {\n            role: 'listbox',\n            ariaActiveDescendant:\n              isOpen && selectedIndices.length === 1 && selectedIndices[0] >= 0 ? this._id + '-list' + selectedIndices[0] : optionId,\n            childRole: 'option',\n            ariaSetSize: this._sizePosCache.optionSetSize,\n            ariaPosInSet: this._sizePosCache.positionInSet(selectedIndices[0]),\n            ariaSelected: selectedIndices[0] === undefined ? undefined : true\n          };\n\n    this._classNames = getClassNames(propStyles, {\n      theme,\n      className,\n      hasError: !!(errorMessage && errorMessage.length > 0),\n      hasLabel: !!label,\n      isOpen,\n      required,\n      disabled,\n      isRenderingPlaceholder: !selectedOptions.length,\n      panelClassName: !!panelProps ? panelProps.className : undefined,\n      calloutClassName: !!calloutProps ? calloutProps.className : undefined,\n      calloutRenderEdge: calloutRenderEdge\n    });\n\n    return (\n      <div className={this._classNames.root}>\n        {onRenderLabel(this.props, this._onRenderLabel)}\n        <KeytipData keytipProps={keytipProps} disabled={disabled}>\n          {(keytipAttributes: any): JSX.Element => (\n            <div\n              {...keytipAttributes}\n              data-is-focusable={!disabled}\n              ref={this._dropDown}\n              id={id}\n              tabIndex={disabled ? -1 : 0}\n              aria-expanded={isOpen ? 'true' : 'false'}\n              role={ariaAttrs.role}\n              aria-label={ariaLabel}\n              aria-labelledby={label && !ariaLabel ? id + '-label' : undefined}\n              aria-describedby={mergeAriaAttributeValues(optionId, keytipAttributes['aria-describedby'])}\n              aria-activedescendant={isOpen ? ariaAttrs.ariaActiveDescendant : undefined}\n              aria-required={required}\n              aria-disabled={disabled}\n              aria-owns={isOpen ? id + '-list' : undefined}\n              {...divProps}\n              className={this._classNames.dropdown}\n              onBlur={this._onDropdownBlur}\n              onKeyDown={this._onDropdownKeyDown}\n              onKeyUp={this._onDropdownKeyUp}\n              onClick={this._onDropdownClick}\n              onFocus={this._onFocus}\n            >\n              <span\n                id={optionId}\n                className={this._classNames.title}\n                aria-atomic={true}\n                role={ariaAttrs.childRole}\n                aria-live={!hasFocus || disabled || multiSelect || isOpen ? 'off' : 'assertive'}\n                aria-label={selectedOptions.length ? selectedOptions[0].text : this._placeholder}\n                aria-setsize={ariaAttrs.ariaSetSize}\n                aria-posinset={ariaAttrs.ariaPosInSet}\n                aria-selected={ariaAttrs.ariaSelected}\n              >\n                {// If option is selected render title, otherwise render the placeholder text\n                selectedOptions.length\n                  ? onRenderTitle(selectedOptions, this._onRenderTitle)\n                  : onRenderPlaceholder(props, this._onRenderPlaceholder)}\n              </span>\n              <span className={this._classNames.caretDownWrapper}>{onRenderCaretDown(props, this._onRenderCaretDown)}</span>\n            </div>\n          )}\n        </KeytipData>\n        {isOpen && onRenderContainer(props, this._onRenderContainer)}\n        {errorMessage && errorMessage.length > 0 && <div className={this._classNames.errorMessage}>{errorMessage}</div>}\n      </div>\n    );\n  }\n\n  public focus(shouldOpenOnFocus?: boolean): void {\n    if (this._dropDown.current) {\n      this._dropDown.current.focus();\n\n      if (shouldOpenOnFocus) {\n        this.setState({\n          isOpen: true\n        });\n      }\n    }\n  }\n\n  public setSelectedIndex(event: React.FormEvent<HTMLDivElement>, index: number): void {\n    const { options, selectedKey, selectedKeys, multiSelect, notifyOnReselect } = this.props;\n    const { selectedIndices = [] } = this.state;\n    const checked: boolean = selectedIndices ? selectedIndices.indexOf(index) > -1 : false;\n    let newIndexes: number[] = [];\n\n    index = Math.max(0, Math.min(options.length - 1, index));\n\n    // If this is a controlled component then no state change should take place.\n    if (selectedKey !== undefined || selectedKeys !== undefined) {\n      this._onChange(event, options, index, checked, multiSelect);\n      return;\n    }\n\n    if (!multiSelect && !notifyOnReselect && index === selectedIndices[0]) {\n      return;\n    } else if (multiSelect) {\n      newIndexes = selectedIndices ? this._copyArray(selectedIndices) : [];\n      if (checked) {\n        const position = newIndexes.indexOf(index);\n        if (position > -1) {\n          // unchecked the current one\n          newIndexes.splice(position, 1);\n        }\n      } else {\n        // add the new selected index into the existing one\n        newIndexes.push(index);\n      }\n    } else {\n      // Set the selected option if this is an uncontrolled component\n      newIndexes = [index];\n    }\n\n    event.persist();\n    // Call onChange after state is updated\n    this.setState(\n      {\n        selectedIndices: newIndexes\n      },\n      () => {\n        this._onChange(event, options, index, checked, multiSelect);\n      }\n    );\n  }\n\n  private _onChange = (\n    event: React.FormEvent<HTMLDivElement>,\n    options: IDropdownOption[],\n    index: number,\n    checked?: boolean,\n    multiSelect?: boolean\n  ) => {\n    const { onChange, onChanged } = this.props;\n    if (onChange) {\n      // for single-select, option passed in will always be selected.\n      // for multi-select, flip the checked value\n      const changedOpt = multiSelect ? { ...options[index], selected: !checked } : options[index];\n\n      onChange({ ...event, target: this._dropDown.current as EventTarget }, changedOpt, index);\n    }\n\n    if (onChanged) {\n      // for single-select, option passed in will always be selected.\n      // for multi-select, flip the checked value\n      const changedOpt = multiSelect ? { ...options[index], selected: !checked } : options[index];\n      onChanged(changedOpt, index);\n    }\n  };\n\n  /** Get either props.placeholder (new name) or props.placeHolder (old name) */\n  private get _placeholder(): string | undefined {\n    return this.props.placeholder || this.props.placeHolder;\n  }\n\n  private _copyArray(array: any[]): any[] {\n    const newArray = [];\n    for (const element of array) {\n      newArray.push(element);\n    }\n    return newArray;\n  }\n\n  /**\n   * Finds the next valid Dropdown option and sets the selected index to it.\n   * @param stepValue - Value of how many items the function should traverse.  Should be -1 or 1.\n   * @param index - Index of where the search should start\n   * @param selectedIndex - The selectedIndex Dropdown's state\n   * @returns The next valid dropdown option's index\n   */\n  private _moveIndex(event: React.FormEvent<HTMLDivElement>, stepValue: number, index: number, selectedIndex: number): number {\n    const { options } = this.props;\n    // Return selectedIndex if nothing has changed or options is empty\n    if (selectedIndex === index || options.length === 0) {\n      return selectedIndex;\n    }\n\n    // Set starting index to 0 if index is < 0\n    if (index < 0) {\n      index = 0;\n    }\n    // Set starting index to last option index if greater than options.length\n    if (index >= options.length) {\n      index = options.length - 1;\n    }\n    let stepCounter = 0;\n    // If current index is a header or divider, or disabled, increment by step\n    while (\n      options[index].itemType === DropdownMenuItemType.Header ||\n      options[index].itemType === DropdownMenuItemType.Divider ||\n      options[index].disabled\n    ) {\n      // If stepCounter exceeds length of options, then return selectedIndex (-1)\n      if (stepCounter >= options.length) {\n        return selectedIndex;\n      }\n      // If index + stepValue is out of bounds, wrap around\n      if (index + stepValue < 0) {\n        index = options.length;\n      } else if (index + stepValue >= options.length) {\n        index = -1;\n      }\n\n      index = index + stepValue;\n      stepCounter++;\n    }\n\n    this.setSelectedIndex(event, index);\n    return index;\n  }\n\n  /** Render text in dropdown input */\n  private _onRenderTitle = (items: IDropdownOption[]): JSX.Element => {\n    const { multiSelectDelimiter = ', ' } = this.props;\n\n    const displayTxt = items.map(i => i.text).join(multiSelectDelimiter);\n    return <span>{displayTxt}</span>;\n  };\n\n  /** Render placeholder text in dropdown input */\n  private _onRenderPlaceholder = (props: IDropdownProps): JSX.Element | null => {\n    if (!this._placeholder) {\n      return null;\n    }\n    return <span>{this._placeholder}</span>;\n  };\n\n  /** Render Callout or Panel container and pass in list */\n  private _onRenderContainer = (props: ISelectableDroppableTextProps<IDropdown, HTMLDivElement>): JSX.Element => {\n    const { calloutProps, panelProps } = props;\n    const { responsiveMode, dropdownWidth } = this.props;\n\n    const isSmall = responsiveMode! <= ResponsiveMode.medium;\n\n    const panelStyles = this._classNames.subComponentStyles\n      ? (this._classNames.subComponentStyles.panel as IStyleFunctionOrObject<IPanelStyleProps, IPanelStyles>)\n      : undefined;\n\n    return isSmall ? (\n      <Panel isOpen={true} isLightDismiss={true} onDismiss={this._onDismiss} hasCloseButton={false} styles={panelStyles} {...panelProps}>\n        {this._renderFocusableList(props)}\n      </Panel>\n    ) : (\n      <Callout\n        isBeakVisible={false}\n        gapSpace={0}\n        doNotLayer={false}\n        directionalHintFixed={false}\n        directionalHint={DirectionalHint.bottomLeftEdge}\n        {...calloutProps}\n        className={this._classNames.callout}\n        target={this._dropDown.current}\n        onDismiss={this._onDismiss}\n        onScroll={this._onScroll}\n        onPositioned={this._onPositioned}\n        calloutWidth={dropdownWidth || (this._dropDown.current ? this._dropDown.current.clientWidth : 0)}\n      >\n        {this._renderFocusableList(props)}\n      </Callout>\n    );\n  };\n\n  /** Render Caret Down Icon */\n  private _onRenderCaretDown = (props: IDropdownProps): JSX.Element => {\n    return <Icon className={this._classNames.caretDown} iconName=\"ChevronDown\" aria-hidden={true} />;\n  };\n\n  /** Wrap item list in a FocusZone */\n  private _renderFocusableList(props: ISelectableDroppableTextProps<IDropdown, HTMLDivElement>): JSX.Element {\n    const { onRenderList = this._onRenderList, label, ariaLabel } = props;\n    const id = this._id;\n\n    return (\n      <div\n        className={this._classNames.dropdownItemsWrapper}\n        onKeyDown={this._onZoneKeyDown}\n        onKeyUp={this._onZoneKeyUp}\n        ref={this._host}\n        tabIndex={0}\n      >\n        <FocusZone\n          ref={this._focusZone}\n          direction={FocusZoneDirection.vertical}\n          id={id + '-list'}\n          className={this._classNames.dropdownItems}\n          aria-label={ariaLabel}\n          aria-labelledby={label && !ariaLabel ? id + '-label' : undefined}\n          role=\"listbox\"\n        >\n          {onRenderList(props, this._onRenderList)}\n        </FocusZone>\n      </div>\n    );\n  }\n\n  /** Render List of items */\n  private _onRenderList = (props: ISelectableDroppableTextProps<IDropdown, HTMLDivElement>): JSX.Element => {\n    const { onRenderItem = this._onRenderItem } = props;\n\n    return <>{props.options.map((item: any, index: number) => onRenderItem({ ...item, index }, this._onRenderItem))}</>;\n  };\n\n  private _onRenderItem = (item: IDropdownOption): JSX.Element | null => {\n    switch (item.itemType) {\n      case SelectableOptionMenuItemType.Divider:\n        return this._renderSeparator(item);\n      case SelectableOptionMenuItemType.Header:\n        return this._renderHeader(item);\n      default:\n        return this._renderOption(item);\n    }\n  };\n\n  private _renderSeparator(item: IDropdownOption): JSX.Element | null {\n    const { index, key } = item;\n    if (index! > 0) {\n      return <div role=\"separator\" key={key} className={this._classNames.dropdownDivider} />;\n    }\n    return null;\n  }\n\n  private _renderHeader(item: IDropdownOption): JSX.Element {\n    const { onRenderOption = this._onRenderOption } = this.props;\n    const { key } = item;\n    return (\n      <div key={key} className={this._classNames.dropdownItemHeader}>\n        {onRenderOption(item, this._onRenderOption)}\n      </div>\n    );\n  }\n\n  private _renderOption = (item: IDropdownOption): JSX.Element => {\n    const { onRenderOption = this._onRenderOption } = this.props;\n    const { selectedIndices = [] } = this.state;\n    const id = this._id;\n    const isItemSelected = item.index !== undefined && selectedIndices ? selectedIndices.indexOf(item.index) > -1 : false;\n\n    // select the right className based on the combination of selected/disabled\n    const itemClassName = item.hidden // predicate: item hidden\n      ? this._classNames.dropdownItemHidden\n      : isItemSelected && item.disabled === true // predicate: both selected and disabled\n      ? this._classNames.dropdownItemSelectedAndDisabled\n      : isItemSelected // predicate: selected only\n      ? this._classNames.dropdownItemSelected\n      : item.disabled === true // predicate: disabled only\n      ? this._classNames.dropdownItemDisabled\n      : this._classNames.dropdownItem;\n\n    const { title = item.text } = item;\n\n    return !this.props.multiSelect ? (\n      <CommandButton\n        id={id + '-list' + item.index}\n        key={item.key}\n        data-index={item.index}\n        data-is-focusable={!item.disabled}\n        disabled={item.disabled}\n        className={itemClassName}\n        onClick={this._onItemClick(item)}\n        onMouseEnter={this._onItemMouseEnter.bind(this, item)}\n        onMouseLeave={this._onMouseItemLeave.bind(this, item)}\n        onMouseMove={this._onItemMouseMove.bind(this, item)}\n        role=\"option\"\n        aria-selected={isItemSelected ? 'true' : 'false'}\n        ariaLabel={item.ariaLabel}\n        title={title}\n      >\n        {onRenderOption(item, this._onRenderOption)}\n      </CommandButton>\n    ) : (\n      <Checkbox\n        id={id + '-list' + item.index}\n        key={item.key}\n        data-index={item.index}\n        data-is-focusable={!item.disabled}\n        disabled={item.disabled}\n        onChange={this._onItemClick(item)}\n        inputProps={{\n          onMouseEnter: this._onItemMouseEnter.bind(this, item),\n          onMouseLeave: this._onMouseItemLeave.bind(this, item),\n          onMouseMove: this._onItemMouseMove.bind(this, item)\n        }}\n        label={item.text}\n        title={item.title ? item.title : item.text}\n        onRenderLabel={this._onRenderItemLabel.bind(this, item)}\n        className={itemClassName}\n        role=\"option\"\n        aria-selected={isItemSelected ? 'true' : 'false'}\n        checked={isItemSelected}\n      />\n    );\n  };\n\n  /** Render content of item (i.e. text/icon inside of button) */\n  private _onRenderOption = (item: IDropdownOption): JSX.Element => {\n    return <span className={this._classNames.dropdownOptionText}>{item.text}</span>;\n  };\n\n  /** Render custom label for drop down item */\n  private _onRenderItemLabel = (item: IDropdownOption): JSX.Element | null => {\n    const { onRenderOption = this._onRenderOption } = this.props;\n    return onRenderOption(item, this._onRenderOption);\n  };\n\n  private _onPositioned = (positions?: ICalloutPositionedInfo): void => {\n    if (this._focusZone.current) {\n      // Focusing an element can trigger a reflow. Making this wait until there is an animation\n      // frame can improve perf significantly.\n      this._requestAnimationFrame(() => {\n        const selectedIndices = this.state.selectedIndices;\n        if (this._focusZone.current) {\n          if (selectedIndices && selectedIndices[0] && !this.props.options[selectedIndices[0]].disabled) {\n            const element: HTMLElement = getDocument()!.querySelector(`#${this._id}-list${selectedIndices[0]}`) as HTMLElement;\n            this._focusZone.current.focusElement(element);\n          } else {\n            this._focusZone.current.focus();\n          }\n        }\n      });\n    }\n\n    if (!this.state.calloutRenderEdge || this.state.calloutRenderEdge !== positions!.targetEdge) {\n      this.setState({\n        calloutRenderEdge: positions!.targetEdge\n      });\n    }\n  };\n\n  private _onItemClick = (item: IDropdownOption): ((event: React.MouseEvent<HTMLDivElement>) => void) => {\n    return (event: React.MouseEvent<HTMLDivElement>): void => {\n      if (!item.disabled) {\n        this.setSelectedIndex(event, item.index!);\n        if (!this.props.multiSelect) {\n          // only close the callout when it's in single-select mode\n          this.setState({\n            isOpen: false\n          });\n        }\n      }\n    };\n  };\n\n  /**\n   * Scroll handler for the callout to make sure the mouse events\n   * for updating focus are not interacting during scroll\n   */\n  private _onScroll = (): void => {\n    if (!this._isScrollIdle && this._scrollIdleTimeoutId !== undefined) {\n      clearTimeout(this._scrollIdleTimeoutId);\n      this._scrollIdleTimeoutId = undefined;\n    } else {\n      this._isScrollIdle = false;\n    }\n\n    this._scrollIdleTimeoutId = setTimeout(() => {\n      this._isScrollIdle = true;\n    }, this._scrollIdleDelay);\n  };\n\n  private _onItemMouseEnter(item: any, ev: React.MouseEvent<HTMLElement>): void {\n    if (this._shouldIgnoreMouseEvent()) {\n      return;\n    }\n\n    const targetElement = ev.currentTarget as HTMLElement;\n    targetElement.focus();\n  }\n\n  private _onItemMouseMove(item: any, ev: React.MouseEvent<HTMLElement>): void {\n    const targetElement = ev.currentTarget as HTMLElement;\n    this._gotMouseMove = true;\n\n    if (!this._isScrollIdle || document.activeElement === targetElement) {\n      return;\n    }\n\n    targetElement.focus();\n  }\n\n  private _onMouseItemLeave = (item: any, ev: React.MouseEvent<HTMLElement>): void => {\n    if (this._shouldIgnoreMouseEvent()) {\n      return;\n    }\n\n    /**\n     * IE11 focus() method forces parents to scroll to top of element.\n     * Edge and IE expose a setActive() function for focusable divs that\n     * sets the page focus but does not scroll the parent element.\n     */\n    if (this._host.current) {\n      if ((this._host.current as any).setActive) {\n        try {\n          (this._host.current as any).setActive();\n        } catch (e) {\n          /* no-op */\n        }\n      } else {\n        this._host.current.focus();\n      }\n    }\n  };\n\n  private _shouldIgnoreMouseEvent(): boolean {\n    return !this._isScrollIdle || !this._gotMouseMove;\n  }\n\n  private _onDismiss = (): void => {\n    this.setState({ isOpen: false });\n\n    if (this._dropDown.current) {\n      this._dropDown.current.focus();\n    }\n  };\n\n  /** Get all selected indexes for multi-select mode */\n  private _getSelectedIndexes(options: IDropdownOption[], selectedKey: string | number | string[] | number[] | null | undefined): number[] {\n    if (selectedKey === undefined) {\n      if (this.props.multiSelect) {\n        return this._getAllSelectedIndices(options);\n      }\n      const selectedIndex = this._getSelectedIndex(options, null);\n      return selectedIndex !== -1 ? [selectedIndex] : [];\n    } else if (!Array.isArray(selectedKey)) {\n      const selectedIndex = this._getSelectedIndex(options, selectedKey);\n      return selectedIndex !== -1 ? [selectedIndex] : [];\n    }\n\n    const selectedIndices: number[] = [];\n    for (const key of selectedKey) {\n      const selectedIndex = this._getSelectedIndex(options, key);\n      selectedIndex !== -1 && selectedIndices.push(selectedIndex);\n    }\n    return selectedIndices;\n  }\n\n  private _getAllSelectedIndices(options: IDropdownOption[]): number[] {\n    return options.map((option: IDropdownOption, index: number) => (option.selected ? index : -1)).filter(index => index !== -1);\n  }\n\n  private _getSelectedIndex(options: IDropdownOption[], selectedKey: string | number | null): number {\n    return findIndex(options, option => {\n      // tslint:disable-next-line:triple-equals\n      if (selectedKey != null) {\n        return option.key === selectedKey;\n      } else {\n        return !!option.isSelected || !!option.selected;\n      }\n    });\n  }\n\n  private _onDropdownBlur = (ev: React.FocusEvent<HTMLDivElement>): void => {\n    // If Dropdown disabled do not proceed with this logic.\n    const disabled = this._isDisabled();\n    if (disabled) {\n      return;\n    }\n\n    // hasFocus tracks whether the root element has focus so always update the state.\n    this.setState({ hasFocus: false });\n\n    if (this.state.isOpen) {\n      // Do not onBlur when the callout is opened\n      return;\n    }\n    if (this.props.onBlur) {\n      this.props.onBlur(ev);\n    }\n  };\n\n  private _onDropdownKeyDown = (ev: React.KeyboardEvent<HTMLDivElement>): void => {\n    // If Dropdown disabled do not process any keyboard events.\n    const disabled = this._isDisabled();\n    if (disabled) {\n      return;\n    }\n\n    // Take note if we are processing an alt (option) or meta (command) keydown.\n    // See comment in _shouldHandleKeyUp for reasoning.\n    this._lastKeyDownWasAltOrMeta = this._isAltOrMeta(ev);\n\n    if (this.props.onKeyDown) {\n      this.props.onKeyDown(ev);\n      if (ev.defaultPrevented) {\n        return;\n      }\n    }\n\n    let newIndex: number | undefined;\n    const selectedIndex = this.state.selectedIndices.length ? this.state.selectedIndices[0] : -1;\n    const containsExpandCollapseModifier = ev.altKey || ev.metaKey;\n    const isOpen = this.state.isOpen;\n\n    switch (ev.which) {\n      case KeyCodes.enter:\n        this.setState({\n          isOpen: !isOpen\n        });\n        break;\n\n      case KeyCodes.escape:\n        if (!isOpen) {\n          return;\n        }\n\n        this.setState({\n          isOpen: false\n        });\n        break;\n\n      case KeyCodes.up:\n        if (containsExpandCollapseModifier) {\n          if (isOpen) {\n            this.setState({ isOpen: false });\n            break;\n          }\n\n          return;\n        }\n        if (this.props.multiSelect) {\n          this.setState({ isOpen: true });\n        } else if (!this._isDisabled()) {\n          newIndex = this._moveIndex(ev, -1, selectedIndex - 1, selectedIndex);\n        }\n        break;\n\n      case KeyCodes.down:\n        if (containsExpandCollapseModifier) {\n          ev.stopPropagation();\n          ev.preventDefault();\n        }\n        if ((containsExpandCollapseModifier && !isOpen) || this.props.multiSelect) {\n          this.setState({ isOpen: true });\n        } else if (!this._isDisabled()) {\n          newIndex = this._moveIndex(ev, 1, selectedIndex + 1, selectedIndex);\n        }\n        break;\n\n      case KeyCodes.home:\n        if (!this.props.multiSelect) {\n          newIndex = this._moveIndex(ev, 1, 0, selectedIndex);\n        }\n        break;\n\n      case KeyCodes.end:\n        if (!this.props.multiSelect) {\n          newIndex = this._moveIndex(ev, -1, this.props.options.length - 1, selectedIndex);\n        }\n        break;\n\n      case KeyCodes.space:\n        // event handled in _onDropdownKeyUp\n        break;\n\n      default:\n        return;\n    }\n\n    if (newIndex !== selectedIndex) {\n      ev.stopPropagation();\n      ev.preventDefault();\n    }\n  };\n\n  private _onDropdownKeyUp = (ev: React.KeyboardEvent<HTMLDivElement>): void => {\n    // If Dropdown disabled do not process any keyboard events.\n    const disabled = this._isDisabled();\n    if (disabled) {\n      return;\n    }\n\n    const shouldHandleKey = this._shouldHandleKeyUp(ev);\n    const isOpen = this.state.isOpen;\n\n    if (this.props.onKeyUp) {\n      this.props.onKeyUp(ev);\n      if (ev.preventDefault) {\n        return;\n      }\n    }\n    switch (ev.which) {\n      case KeyCodes.space:\n        this.setState({\n          isOpen: !isOpen\n        });\n        break;\n\n      default:\n        if (shouldHandleKey && isOpen) {\n          this.setState({ isOpen: false });\n        }\n        return;\n    }\n\n    ev.stopPropagation();\n    ev.preventDefault();\n  };\n\n  /**\n   * Returns true if the key for the event is alt (Mac option) or meta (Mac command).\n   */\n  private _isAltOrMeta(ev: React.KeyboardEvent<HTMLElement>): boolean {\n    return ev.which === KeyCodes.alt || ev.key === 'Meta';\n  }\n\n  /**\n   * We close the menu on key up only if ALL of the following are true:\n   * - Most recent key down was alt or meta (command)\n   * - The alt/meta key down was NOT followed by some other key (such as down/up arrow to\n   *   expand/collapse the menu)\n   * - We're not on a Mac (or iOS)\n   *\n   * This is because on Windows, pressing alt moves focus to the application menu bar or similar,\n   * closing any open context menus. There is not a similar behavior on Macs.\n   */\n  private _shouldHandleKeyUp(ev: React.KeyboardEvent<HTMLElement>): boolean {\n    const keyPressIsAltOrMetaAlone = this._lastKeyDownWasAltOrMeta && this._isAltOrMeta(ev);\n    this._lastKeyDownWasAltOrMeta = false;\n    return !!keyPressIsAltOrMetaAlone && !(isMac() || isIOS());\n  }\n\n  private _onZoneKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    let elementToFocus;\n\n    // Take note if we are processing an alt (option) or meta (command) keydown.\n    // See comment in _shouldHandleKeyUp for reasoning.\n    this._lastKeyDownWasAltOrMeta = this._isAltOrMeta(ev);\n    const containsExpandCollapseModifier = ev.altKey || ev.metaKey;\n\n    switch (ev.which) {\n      case KeyCodes.up:\n        if (containsExpandCollapseModifier) {\n          this.setState({ isOpen: false });\n        } else {\n          if (this._host.current) {\n            elementToFocus = getLastFocusable(this._host.current, this._host.current.lastChild as HTMLElement, true);\n          }\n        }\n        break;\n\n      // All directional keystrokes should be canceled when the zone is rendered.\n      // This avoids the body scroll from reacting and thus dismissing the dropdown.\n      case KeyCodes.home:\n      case KeyCodes.end:\n      case KeyCodes.pageUp:\n      case KeyCodes.pageDown:\n        break;\n\n      case KeyCodes.down:\n        if (!containsExpandCollapseModifier && this._host.current) {\n          elementToFocus = getFirstFocusable(this._host.current, this._host.current.firstChild as HTMLElement, true);\n        }\n        break;\n\n      case KeyCodes.escape:\n        this.setState({ isOpen: false });\n        break;\n\n      case KeyCodes.tab:\n        this.setState({ isOpen: false });\n        return;\n\n      default:\n        return;\n    }\n\n    if (elementToFocus) {\n      elementToFocus.focus();\n    }\n\n    ev.stopPropagation();\n    ev.preventDefault();\n  };\n\n  private _onZoneKeyUp = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    const shouldHandleKey = this._shouldHandleKeyUp(ev);\n\n    if (shouldHandleKey && this.state.isOpen) {\n      this.setState({ isOpen: false });\n      ev.preventDefault();\n    }\n  };\n\n  private _onDropdownClick = (ev: React.MouseEvent<HTMLDivElement>): void => {\n    if (this.props.onClick) {\n      this.props.onClick(ev);\n      if (ev.preventDefault) {\n        return;\n      }\n    }\n\n    const { isOpen } = this.state;\n    const disabled = this._isDisabled();\n\n    if (!disabled) {\n      this.setState({\n        isOpen: !isOpen\n      });\n    }\n  };\n\n  private _onFocus = (ev: React.FocusEvent<HTMLDivElement>): void => {\n    const { isOpen, selectedIndices, hasFocus } = this.state;\n    const { multiSelect, openOnKeyboardFocus } = this.props;\n\n    const disabled = this._isDisabled();\n\n    if (!disabled) {\n      if (!isOpen && selectedIndices.length === 0 && !multiSelect) {\n        // Per aria\n        this._moveIndex(ev, 1, 0, -1);\n      }\n      if (this.props.onFocus) {\n        this.props.onFocus(ev);\n      }\n      const state: Pick<IDropdownState, 'hasFocus'> | Pick<IDropdownState, 'hasFocus' | 'isOpen'> = { hasFocus: true };\n      if (openOnKeyboardFocus && !hasFocus) {\n        (state as Pick<IDropdownState, 'hasFocus' | 'isOpen'>).isOpen = true;\n      }\n      this.setState(state);\n    }\n  };\n\n  /**\n   * Because the isDisabled prop is deprecated, we have had to repeat this logic all over the place.\n   * This helper method avoids all the repetition.\n   */\n  private _isDisabled: () => boolean | undefined = () => {\n    let { disabled } = this.props;\n    const { isDisabled } = this.props;\n\n    // Remove this deprecation workaround at 1.0.0\n    if (isDisabled !== undefined) {\n      disabled = isDisabled;\n    }\n\n    return disabled;\n  };\n\n  private _onRenderLabel = (props: IDropdownProps): JSX.Element | null => {\n    const id = this._id;\n    const { label, required, disabled } = props;\n\n    const labelStyles = this._classNames.subComponentStyles\n      ? (this._classNames.subComponentStyles.label as IStyleFunctionOrObject<ILabelStyleProps, ILabelStyles>)\n      : undefined;\n\n    return label ? (\n      <Label\n        className={this._classNames.label}\n        id={id + '-label'}\n        htmlFor={id}\n        required={required}\n        styles={labelStyles}\n        disabled={disabled}\n      >\n        {label}\n      </Label>\n    ) : null;\n  };\n}\n"]}
{"version":3,"file":"Button.js","sourceRoot":"../src/","sources":["components/Button/Button.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAE,aAAa,EAAE,IAAI,EAAE,MAAM,iBAAiB,CAAC;AACtD,OAAO,EAAE,UAAU,EAAgB,MAAM,gBAAgB,CAAC;AAC1D,OAAO,EAAE,aAAa,EAAE,MAAM,+BAA+B,CAAC;AAC9D,OAAO,EAAE,YAAY,EAAE,MAAM,6BAA6B,CAAC;AAC3D,OAAO,EAAE,cAAc,EAAE,MAAM,iCAAiC,CAAC;AACjE,OAAO,EAAE,UAAU,EAAE,MAAM,yBAAyB,CAAC;AACrD,OAAO,EAAE,aAAa,EAAE,MAAM,+BAA+B,CAAC;AAC9D;;;;GAIG;AACH;IAA4B,kCAA+B;IAMzD,gBAAY,KAAmB;QAA/B,YACE,kBAAM,KAAK,CAAC,SAMb;QAZD;;WAEG;QACO,iCAA2B,GAAG,IAAI,CAAC;QAK3C,IAAI,CACF,2EAA2E;YACzE,gEAAgE,CACnE,CAAC;;IACJ,CAAC;IAEM,uBAAM,GAAb;QACE,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAEzB,QAAQ,KAAK,CAAC,UAAU,EAAE;YACxB,KAAK,UAAU,CAAC,OAAO;gBACrB,OAAO,oBAAC,YAAY,uBAAK,KAAK,EAAI,CAAC;YAErC,KAAK,UAAU,CAAC,QAAQ;gBACtB,OAAO,oBAAC,cAAc,uBAAK,KAAK,EAAI,CAAC;YAEvC,KAAK,UAAU,CAAC,IAAI;gBAClB,OAAO,oBAAC,UAAU,uBAAK,KAAK,EAAI,CAAC;YAEnC,KAAK,UAAU,CAAC,OAAO;gBACrB,OAAO,oBAAC,aAAa,uBAAK,KAAK,EAAI,CAAC;YAEtC;gBACE,OAAO,oBAAC,aAAa,uBAAK,KAAK,EAAI,CAAC;SACvC;IACH,CAAC;IACH,aAAC;AAAD,CAAC,AAnCD,CAA4B,aAAa,GAmCxC","sourcesContent":["import * as React from 'react';\n\nimport { BaseComponent, warn } from '../../Utilities';\nimport { ButtonType, IButtonProps } from './Button.types';\nimport { DefaultButton } from './DefaultButton/DefaultButton';\nimport { ActionButton } from './ActionButton/ActionButton';\nimport { CompoundButton } from './CompoundButton/CompoundButton';\nimport { IconButton } from './IconButton/IconButton';\nimport { PrimaryButton } from './PrimaryButton/PrimaryButton';\n/**\n * This class is deprecated. Use the individual *Button components instead.\n * @deprecated Use the individual *Button components instead.\n * {@docCategory Button}\n */\nexport class Button extends BaseComponent<IButtonProps, {}> {\n  /**\n   * Set this BaseComponent._skipComponentRefResolution to true, bypassing resolution of componentRef.\n   */\n  protected _skipComponentRefResolution = true;\n\n  constructor(props: IButtonProps) {\n    super(props);\n\n    warn(\n      `The Button component has been deprecated. Use specific variants instead. ` +\n        `(PrimaryButton, DefaultButton, IconButton, ActionButton, etc.)`\n    );\n  }\n\n  public render(): JSX.Element {\n    const props = this.props;\n\n    switch (props.buttonType) {\n      case ButtonType.command:\n        return <ActionButton {...props} />;\n\n      case ButtonType.compound:\n        return <CompoundButton {...props} />;\n\n      case ButtonType.icon:\n        return <IconButton {...props} />;\n\n      case ButtonType.primary:\n        return <PrimaryButton {...props} />;\n\n      default:\n        return <DefaultButton {...props} />;\n    }\n  }\n}\n"]}
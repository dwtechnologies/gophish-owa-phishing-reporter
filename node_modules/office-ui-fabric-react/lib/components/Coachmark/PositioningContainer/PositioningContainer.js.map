{"version":3,"file":"PositioningContainer.js","sourceRoot":"../src/","sources":["components/Coachmark/PositioningContainer/PositioningContainer.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { IPositioningContainerProps } from './PositioningContainer.types';\nimport { getClassNames } from './PositioningContainer.styles';\nimport { Layer } from '../../../Layer';\n\n// Utilites/Helpers\nimport { DirectionalHint } from '../../../common/DirectionalHint';\nimport {\n  BaseComponent,\n  IPoint,\n  IRectangle,\n  assign,\n  css,\n  elementContains,\n  focusFirstChild,\n  getWindow,\n  getDocument\n} from '../../../Utilities';\n\nimport { getMaxHeight, positionElement, IPositionedData, IPositionProps, IPosition, RectangleEdge } from '../../../utilities/positioning';\n\nimport { AnimationClassNames, mergeStyles } from '../../../Styling';\n\nconst OFF_SCREEN_STYLE = { opacity: 0 };\n\n// In order for some of the max height logic to work\n// properly we need to set the border.\n// The value is abitrary.\nconst BORDER_WIDTH = 1;\nconst SLIDE_ANIMATIONS: { [key: number]: string } = {\n  [RectangleEdge.top]: 'slideUpIn20',\n  [RectangleEdge.bottom]: 'slideDownIn20',\n  [RectangleEdge.left]: 'slideLeftIn20',\n  [RectangleEdge.right]: 'slideRightIn20'\n};\n\nexport interface IPositioningContainerState {\n  /**\n   * Current set of calcualted positions for the outermost parent container.\n   */\n  positions?: IPositionedData;\n\n  /**\n   * Tracks the current height offset and updates during\n   * the height animation when props.finalHeight is specified.\n   */\n  heightOffset?: number;\n}\n\nexport class PositioningContainer extends BaseComponent<IPositioningContainerProps, IPositioningContainerState>\n  implements PositioningContainer {\n  public static defaultProps: IPositioningContainerProps = {\n    preventDismissOnScroll: false,\n    offsetFromTarget: 0,\n    minPagePadding: 8,\n    directionalHint: DirectionalHint.bottomAutoEdge\n  };\n\n  private _didSetInitialFocus: boolean;\n\n  /**\n   * The primary positioned div.\n   */\n  private _positionedHost = React.createRef<HTMLDivElement>();\n\n  // @TODO rename to reflect the name of this class\n  private _contentHost = React.createRef<HTMLDivElement>();\n\n  /**\n   * Stores an instance of Window, used to check\n   * for server side rendering and if focus was lost.\n   */\n  private _targetWindow: Window;\n\n  /**\n   * The bounds used when determing if and where the\n   * PositioningContainer should be placed.\n   */\n  private _positioningBounds: IRectangle;\n\n  /**\n   * The maximum height the PositioningContainer can grow to\n   * without going being the window or target bounds\n   */\n  private _maxHeight: number | undefined;\n  private _positionAttempts: number;\n  private _target: HTMLElement | MouseEvent | IPoint | null;\n  private _setHeightOffsetTimer: number;\n\n  constructor(props: IPositioningContainerProps) {\n    super(props);\n    this._didSetInitialFocus = false;\n    this.state = {\n      positions: undefined,\n      heightOffset: 0\n    };\n    this._positionAttempts = 0;\n  }\n\n  // tslint:disable-next-line function-name\n  public UNSAFE_componentWillMount(): void {\n    this._setTargetWindowAndElement(this._getTarget());\n  }\n\n  public componentDidMount(): void {\n    this._onComponentDidMount();\n  }\n\n  public componentDidUpdate(): void {\n    this._setInitialFocus();\n    this._updateAsyncPosition();\n  }\n\n  // tslint:disable-next-line function-name\n  public UNSAFE_componentWillUpdate(newProps: IPositioningContainerProps): void {\n    // If the target element changed, find the new one. If we are tracking\n    // target with class name, always find element because we do not know if\n    // fabric has rendered a new element and disposed the old element.\n    const newTarget = this._getTarget(newProps);\n    const oldTarget = this._getTarget();\n    if (newTarget !== oldTarget || typeof newTarget === 'string' || newTarget instanceof String) {\n      this._maxHeight = undefined;\n      this._setTargetWindowAndElement(newTarget!);\n    }\n\n    if (newProps.offsetFromTarget !== this.props.offsetFromTarget) {\n      this._maxHeight = undefined;\n    }\n\n    if (newProps.finalHeight !== this.props.finalHeight) {\n      this._setHeightOffsetEveryFrame();\n    }\n  }\n\n  public render(): JSX.Element | null {\n    // If there is no target window then we are likely in server side rendering and we should not render anything.\n    if (!this._targetWindow) {\n      return null;\n    }\n\n    const { className, positioningContainerWidth, positioningContainerMaxHeight, children } = this.props;\n    const { positions } = this.state;\n\n    const styles = getClassNames();\n\n    const directionalClassName =\n      positions && positions.targetEdge ? (AnimationClassNames as any)[SLIDE_ANIMATIONS[positions.targetEdge]] : '';\n\n    const getContentMaxHeight: number = this._getMaxHeight() + this.state.heightOffset!;\n    const contentMaxHeight: number =\n      positioningContainerMaxHeight! && positioningContainerMaxHeight! > getContentMaxHeight\n        ? getContentMaxHeight\n        : positioningContainerMaxHeight!;\n    const content = (\n      <div ref={this._positionedHost} className={css('ms-PositioningContainer', styles.container)}>\n        <div\n          className={mergeStyles(\n            'ms-PositioningContainer-layerHost',\n            styles.root,\n            className,\n            directionalClassName,\n            !!positioningContainerWidth && { width: positioningContainerWidth }\n          )}\n          // tslint:disable-next-line:jsx-ban-props\n          style={positions ? positions.elementPosition : OFF_SCREEN_STYLE}\n          tabIndex={-1} // Safari and Firefox on Mac OS requires this to back-stop click events so focus remains in the Callout.\n          // See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#Clicking_and_focus\n          ref={this._contentHost}\n        >\n          {children}\n          {\n            // @TODO apply to the content container\n            contentMaxHeight\n          }\n        </div>\n      </div>\n    );\n\n    return this.props.doNotLayer ? content : <Layer>{content}</Layer>;\n  }\n\n  /**\n   * Deprecated, use `onResize` instead.\n   * @deprecated Use `onResize` instead.\n   */\n  public dismiss = (ev?: Event | React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>): void => {\n    this.onResize(ev);\n  };\n\n  public onResize = (ev?: Event | React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>): void => {\n    const { onDismiss } = this.props;\n    if (onDismiss) {\n      onDismiss(ev);\n    } else {\n      this._updateAsyncPosition();\n    }\n  };\n\n  protected _dismissOnScroll(ev: Event): void {\n    const { preventDismissOnScroll } = this.props;\n    if (this.state.positions && !preventDismissOnScroll) {\n      this._dismissOnLostFocus(ev);\n    }\n  }\n\n  protected _dismissOnLostFocus(ev: Event): void {\n    const target = ev.target as HTMLElement;\n    const clickedOutsideCallout = this._positionedHost.current && !elementContains(this._positionedHost.current, target);\n\n    if (\n      (!this._target && clickedOutsideCallout) ||\n      (ev.target !== this._targetWindow &&\n        clickedOutsideCallout &&\n        ((this._target as MouseEvent).stopPropagation ||\n          (!this._target || (target !== this._target && !elementContains(this._target as HTMLElement, target)))))\n    ) {\n      this.onResize(ev);\n    }\n  }\n\n  protected _setInitialFocus = (): void => {\n    if (this._contentHost.current && this.props.setInitialFocus && !this._didSetInitialFocus && this.state.positions) {\n      this._didSetInitialFocus = true;\n      focusFirstChild(this._contentHost.current);\n    }\n  };\n\n  protected _onComponentDidMount = (): void => {\n    // This is added so the positioningContainer will dismiss when the window is scrolled\n    // but not when something inside the positioningContainer is scrolled. The delay seems\n    // to be required to avoid React firing an async focus event in IE from\n    // the target changing focus quickly prior to rendering the positioningContainer.\n    this._async.setTimeout(() => {\n      this._events.on(this._targetWindow, 'scroll', this._async.throttle(this._dismissOnScroll, 10), true);\n      this._events.on(this._targetWindow, 'resize', this._async.throttle(this.onResize, 10), true);\n      this._events.on(this._targetWindow.document.body, 'focus', this._dismissOnLostFocus, true);\n      this._events.on(this._targetWindow.document.body, 'click', this._dismissOnLostFocus, true);\n    }, 0);\n\n    if (this.props.onLayerMounted) {\n      this.props.onLayerMounted();\n    }\n\n    this._updateAsyncPosition();\n    this._setHeightOffsetEveryFrame();\n  };\n\n  private _updateAsyncPosition(): void {\n    this._async.requestAnimationFrame(() => this._updatePosition());\n  }\n\n  private _updatePosition(): void {\n    const { positions } = this.state;\n    const { offsetFromTarget, onPositioned } = this.props;\n\n    const hostElement = this._positionedHost.current;\n    const positioningContainerElement = this._contentHost.current;\n\n    if (hostElement && positioningContainerElement) {\n      let currentProps: IPositionProps | undefined;\n      currentProps = assign(currentProps, this.props);\n      currentProps!.bounds = this._getBounds();\n      currentProps!.target = this._target!;\n      if (document.body.contains(currentProps!.target as Node)) {\n        currentProps!.gapSpace = offsetFromTarget;\n        const newPositions: IPositionedData = positionElement(currentProps!, hostElement, positioningContainerElement);\n        // Set the new position only when the positions are not exists or one of the new positioningContainer positions are different.\n        // The position should not change if the position is within 2 decimal places.\n        if (\n          (!positions && newPositions) ||\n          (positions && newPositions && !this._arePositionsEqual(positions, newPositions) && this._positionAttempts < 5)\n        ) {\n          // We should not reposition the positioningContainer more than a few times, if it is then the content is likely resizing\n          // and we should stop trying to reposition to prevent a stack overflow.\n          this._positionAttempts++;\n          this.setState(\n            {\n              positions: newPositions\n            },\n            () => {\n              if (onPositioned) {\n                onPositioned(newPositions);\n              }\n            }\n          );\n        } else {\n          this._positionAttempts = 0;\n          if (onPositioned) {\n            onPositioned(newPositions);\n          }\n        }\n      } else if (positions !== undefined) {\n        this.setState({\n          positions: undefined\n        });\n      }\n    }\n  }\n\n  private _getBounds(): IRectangle {\n    if (!this._positioningBounds) {\n      let currentBounds = this.props.bounds;\n\n      if (!currentBounds) {\n        currentBounds = {\n          top: 0 + this.props.minPagePadding!,\n          left: 0 + this.props.minPagePadding!,\n          right: this._targetWindow.innerWidth - this.props.minPagePadding!,\n          bottom: this._targetWindow.innerHeight - this.props.minPagePadding!,\n          width: this._targetWindow.innerWidth - this.props.minPagePadding! * 2,\n          height: this._targetWindow.innerHeight - this.props.minPagePadding! * 2\n        };\n      }\n      this._positioningBounds = currentBounds;\n    }\n    return this._positioningBounds;\n  }\n\n  /**\n   * Return the maximum height the container can grow to\n   * without going out of the specified bounds\n   */\n  private _getMaxHeight(): number {\n    const { directionalHintFixed, offsetFromTarget, directionalHint } = this.props;\n\n    if (!this._maxHeight) {\n      if (directionalHintFixed && this._target) {\n        const gapSpace = offsetFromTarget ? offsetFromTarget : 0;\n        this._maxHeight = getMaxHeight(this._target, directionalHint!, gapSpace, this._getBounds());\n      } else {\n        this._maxHeight = this._getBounds().height! - BORDER_WIDTH * 2;\n      }\n    }\n    return this._maxHeight!;\n  }\n\n  private _arePositionsEqual(positions: IPositionedData, newPosition: IPositionedData): boolean {\n    return this._comparePositions(positions.elementPosition, newPosition.elementPosition);\n  }\n\n  private _comparePositions(oldPositions: IPosition, newPositions: IPosition): boolean {\n    for (const key in newPositions) {\n      // This needs to be checked here and below because there is a linting error if for in does not immediately have an if statement\n      if (newPositions.hasOwnProperty(key)) {\n        const oldPositionEdge = oldPositions[key];\n        const newPositionEdge = newPositions[key];\n\n        if (oldPositionEdge && newPositionEdge) {\n          if (oldPositionEdge.toFixed(2) !== newPositionEdge.toFixed(2)) {\n            return false;\n          }\n        }\n      }\n    }\n    return true;\n  }\n\n  private _setTargetWindowAndElement(target: HTMLElement | string | MouseEvent | IPoint | null): void {\n    if (target) {\n      if (typeof target === 'string') {\n        const currentDoc: Document = getDocument()!;\n        this._target = currentDoc ? (currentDoc.querySelector(target) as HTMLElement) : null;\n        this._targetWindow = getWindow()!;\n      } else if ((target as MouseEvent).stopPropagation) {\n        this._targetWindow = getWindow((target as MouseEvent).toElement as HTMLElement)!;\n        this._target = target;\n      } else if ((target as IPoint).x !== undefined && (target as IPoint).y !== undefined) {\n        this._targetWindow = getWindow()!;\n        this._target = target;\n      } else {\n        const targetElement: HTMLElement = target as HTMLElement;\n        this._targetWindow = getWindow(targetElement)!;\n        this._target = target;\n      }\n    } else {\n      this._targetWindow = getWindow()!;\n    }\n  }\n\n  /**\n   * Animates the height if finalHeight was given.\n   */\n  private _setHeightOffsetEveryFrame(): void {\n    if (this._contentHost && this.props.finalHeight) {\n      this._setHeightOffsetTimer = this._async.requestAnimationFrame(() => {\n        if (!this._contentHost.current) {\n          return;\n        }\n\n        const positioningContainerMainElem = this._contentHost.current.lastChild as HTMLElement;\n        const cardScrollHeight: number = positioningContainerMainElem.scrollHeight;\n        const cardCurrHeight: number = positioningContainerMainElem.offsetHeight;\n        const scrollDiff: number = cardScrollHeight - cardCurrHeight;\n\n        this.setState({\n          heightOffset: this.state.heightOffset! + scrollDiff\n        });\n\n        if (positioningContainerMainElem.offsetHeight < this.props.finalHeight!) {\n          this._setHeightOffsetEveryFrame();\n        } else {\n          this._async.cancelAnimationFrame(this._setHeightOffsetTimer);\n        }\n      });\n    }\n  }\n\n  private _getTarget(props: IPositioningContainerProps = this.props): HTMLElement | string | MouseEvent | IPoint | null {\n    const { target } = props;\n    return target!;\n  }\n}\n"]}